.su-personal {
  position: relative;
  margin: 0 auto;
  padding: 20px 40px 15px 40px;
  max-width: 1280px;
}

.su-personal-header {
  position: relative;
  margin-top: 30px;
  padding: 15px;
  min-height: 145px;
  background: #ececec;
}

.su-personal-avatar {
  position: absolute;
  top: 15px;
  left: 15px;
  height: 70px;
  width: 70px;
}

.su-personal-avatar_img {
  max-height: 100%;
}

.su-personal-info {
  padding: 0 315px 0 85px;
}

.su-personal-info_name {
  display: block;
}

.su-personal-info_phone.su-detail,
.su-personal-info_email.su-detail {
  display: table;
  padding-top: 10px;
}

.su-personal-info_phone.su-detail .su-detail_label,
.su-personal-info_phone.su-detail .su-detail_value,
.su-personal-info_email.su-detail .su-detail_label,
.su-personal-info_email.su-detail .su-detail_value {
  display: table-cell;
}

.su-personal-info_phone.su-detail .su-detail_label,
.su-personal-info_email.su-detail .su-detail_label {
  padding-right: 4px;
}

.su-personal-info_button.su-block {
  margin-top: 15px;
}

.su-personal-account {
  position: absolute;
  top: 15px;
  right: 15px;
  padding: 15px;
  width: 300px;
  background: #ffffff;
}

.su-personal-account_balance.su-detail {
  display: table;
  padding-top: 0;
}

.su-personal-account_balance.su-detail .su-detail_label,
.su-personal-account_balance.su-detail .su-detail_value {
  display: table-cell;
}

.su-personal-account_balance.su-detail .su-detail_label {
  padding-right: 4px;
}

.su-personal-account_links.su-list {
  margin-top: 19px;
}

.su-personal-account_links.su-list .su-list_item {
  padding-top: 5px;
}

.su-tabs-block._su-personal {
  margin-top: 20px;
}

@media screen and (max-width: 992px) {
  .su-personal {
    padding-right: 20px;
    padding-left: 20px;
    max-width: 1280px;
  }
}

@media screen and (max-width: 992px) {
  .su-personal-header {
    padding: 10px;
    min-height: 122px;
  }
}

@media screen and (max-width: 992px) {
  .su-personal-avatar {
    top: 10px;
    left: 10px;
  }
}

@media screen and (max-width: 1200px) {
  .su-personal-info {
    padding-right: 275px;
  }
}

@media screen and (max-width: 992px) {
  .su-personal-info {
    padding-right: 220px;
    padding-left: 80px;
  }
}

@media screen and (max-width: 992px) {
  .su-personal-info_button.su-block {
    margin-top: 10px;
  }
}

@media screen and (max-width: 1200px) {
  .su-personal-account {
    width: 260px;
  }
}

@media screen and (max-width: 992px) {
  .su-personal-account {
    top: 10px;
    right: 10px;
    padding: 10px;
    width: 210px;
  }
}

@media screen and (max-width: 992px) {
  .su-personal-account_links.su-list {
    margin-top: 25px;
  }
}
/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=personal.css.map*/