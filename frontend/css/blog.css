.su-blog {
  position: relative;
  margin: 0 auto;
  padding: 20px 40px 15px 40px;
  max-width: 1280px;
}

@media screen and (max-width: 992px) {
  .su-blog {
    padding-right: 20px;
    padding-left: 20px;
  }
}

@media screen and (max-width: 1200px) {
  .su-blog_free-mail.su-free-mail {
    width: 632px;
  }

  .su-blog_free-mail.su-free-mail .su-free-mail_title {
    font-size: 1rem;
  }

  .su-blog_free-mail.su-free-mail .su-free-mail_description {
    width: 344px;
  }

  .su-blog_free-mail.su-free-mail .su-free-mail_user-data {
    width: 232px;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_free-mail.su-free-mail {
    width: 508px;
  }

  .su-blog_free-mail.su-free-mail .su-free-mail_title {
    padding: 0 15px;
    font-size: 0.875rem;
  }

  .su-blog_free-mail.su-free-mail .su-free-mail_description {
    margin-left: 15px;
    width: 255px;
  }

  .su-blog_free-mail.su-free-mail .su-free-mail_user-data {
    margin-right: 15px;
    width: 215px;
  }
}

.su-blog_list.su-list {
  margin-top: 15px;
}

@media screen and (max-width: 1200px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_prev {
    left: -3px;
  }
}

@media screen and (max-width: 1200px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_next {
    right: 0;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_prev,
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_next {
    margin-top: -12px;
    height: 24px;
    width: 16px;
    font-size: 24px;
  }
}

@media screen and (max-width: 1200px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container {
    width: 571px;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container {
    height: 228px;
    width: 468px;
  }
}

@media screen and (max-width: 1200px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item {
    margin-left: 8px;
  }

  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item:first-child {
    margin-left: 0;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item {
    margin-left: 6px;
    width: 152px;
  }

  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item:first-child {
    margin-left: 0;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item .su-list_offer.su-offer {
    padding-bottom: 10px;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item .su-list_offer.su-offer .su-offer_preview.su-preview .su-preview_link.su-link-img {
    height: 132px;
    width: 132px;
    line-height: 126px;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item .su-list_offer.su-offer .su-offer-description_container .su-offer-title {
    margin-top: -40px;
    height: 40px;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item .su-list_offer.su-offer .su-offer-description .su-offer-price {
    position: relative;
    bottom: auto;
    margin-top: 10px;
    width: 100%;
    text-align: center;
  }
}

@media screen and (max-width: 992px) {
  .su-blog_slider.su-slider-wrapper .su-slider .su-slider_container .su-slider_list.su-list .su-list_item .su-list_offer.su-offer .su-offer-description .su-offer-button {
    position: relative;
    bottom: auto;
    margin-top: 14px;
    text-align: center;
  }
}

.su-blog_back.su-block {
  margin-top: 40px;
  text-align: center;
}
/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=blog.css.map*/