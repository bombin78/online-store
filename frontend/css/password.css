.su-password {
  position: relative;
  margin: 0 auto;
  padding: 20px 40px 15px 40px;
  max-width: 1280px;
}

@media screen and (max-width: 992px) {
  .su-password {
    padding-right: 20px;
    padding-left: 20px;
  }
}

.su-password .su-password-recover_question {
  font-weight: 700;
}

.su-password .su-password-recover_instruction {
  color: #97cb63;
}

.su-password .su-password-recover_error {
  color: #ff9000;
}

.su-password .su-password-recover_email.su-field-text {
  margin-top: 20px;
  width: 250px;
}

.su-password .su-password-recover_button.su-block {
  margin-top: 20px;
}

.su-password .su-password-change_instruction {
  color: #97cb63;
}

.su-password .su-password-change_error {
  color: #ff9000;
}

.su-password .su-password-change_password.su-field-text,
.su-password .su-password-change_new-password.su-field-text {
  margin-top: 1.25rem;
  width: 300px;
}

.su-password .su-password-change_button.su-block {
  margin-top: 20px;
}
/*# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["/OpenServer/domains/manicurshop/frontend/scss/2_project/pages/password.scss","/OpenServer/domains/manicurshop/frontend/scss/utils/_mixins.scss","scss/2_project/pages/password.scss","/OpenServer/domains/manicurshop/frontend/scss/utils/library/_variables.scss"],"names":[],"mappings":"AAkBA;EC+BC,mBAAoB;EACpB,eAAkB;EAClB,6BAAkD;EAClD,kBAAkB;CC/ClB;;AAED;EACE;IFUF,oBAME;IACC,mBACA;GARH;CENC;;AAED;EFIA,iBAeE;CEjBD;;AAED;EACE,eFmBc;CElBf;;AAED;EACE,eCa2B;CDZ5B;;AAED;EFRA,iBAmCE;EEzBA,aF0BW;CEzBZ;;AAED;EACE,iBAAiB;CAClB;;AAED;EACE,eAAe;CAChB;;AAED;EACE,eAAe;CAChB;;AAED;;EAEE,oBAAoB;EACpB,aAAa;CACd;;AAED;EACE,iBAAiB;CAClB","file":"scss/2_project/pages/password.scss","sourcesContent":["//Импорт файлов\r\n@import '../../utils/lib';\r\n@import '../../utils/mixins';\r\n//-------------------------------\r\n\r\n//Цвета\r\n$color-text-instruction : lib-color('secondary-accent');\r\n$color-text-error : lib-color('accent-base-bright');\r\n//-------------------------------\r\n\r\n//Классы\r\n$wrapper : lib-get-class('password');\r\n$password-recover : lib-get-class('password-recover');\r\n$password-change : lib-get-class('password-change');\r\n$field-text : lib-get-class('field-text');\r\n$block : lib-get-class('block');\r\n//-------------------------------\r\n\r\n#{$wrapper} {\r\n\t@include mix-content-common-param();\r\n\t&_title {\r\n\r\n\t}\r\n\t#{$password-recover} {\r\n\t\t&_question {\r\n\t\t\tfont-weight : $lib-font-weight-bold;\r\n\t\t}\r\n\t\t&_instruction {\r\n\t\t\tcolor : $color-text-instruction;\r\n\t\t}\r\n\t\t&_error {\r\n\t\t\tcolor : $color-text-error;\r\n\t\t}\r\n\t\t&_email#{$field-text} {\r\n\t\t\tmargin-top : 20px;\r\n\t\t\twidth      : 250px;\r\n\t\t}\r\n\t\t&_button#{$block} {\r\n\t\t\tmargin-top : 20px;\r\n\t\t}\r\n\t}\r\n\t#{$password-change} {\r\n\t\t&_instruction {\r\n\t\t\tcolor : $color-text-instruction;\r\n\t\t}\r\n\t\t&_error {\r\n\t\t\tcolor : $color-text-error;\r\n\t\t}\r\n\t\t&_password#{$field-text},\r\n\t\t&_new-password#{$field-text} {\r\n\t\t\tmargin-top : 1.25rem;\r\n\t\t\twidth      : 300px;\r\n\t\t}\r\n\t\t&_button#{$block} {\r\n\t\t\tmargin-top : 20px;\r\n\t\t}\r\n\t}\r\n}","// ВАЖНО!!!\r\n// Для избежания конфликтов с подключаемыми scss фреймфорками и библиотеками\r\n// обязательно добавляйте \"mix-\" в начале переменных и примесей этого файла\r\n\r\n// В этот файл вынесены общие стили страниц, которые не могут быть добавлены\r\n// в библиотеку (относятся только к текущему проекту)\r\n\r\n// Цвета\r\n$mix-color-footer-title : lib-color(primary-lighter);\r\n$mix-bg-comments-list : lib-color(primary-lighter);\r\n$mix-bg-jsp-vertical-bar : lib-color(primary-lighter);\r\n$mix-bg-jsp-drag : lib-color(primary-lighter);\r\n$mix-bg-personal-offer : transparent;\r\n$mix-color-border-jsp-vertical-bar : lib-color(primary-base);\r\n$mix-color-border-jsp-drag : lib-color(primary-base);\r\n$mix-color-border-new-price : lib-color(primary-base-light);\r\n$mix-color-border-img : lib-color(primary-base-light);\r\n$mix-color-border-personal-offer-img : lib-color(primary-base-light);\r\n//-------------------------------\r\n\r\n// Классы\r\n$mix-tile : lib-get-class('tile');\r\n$mix-offer : lib-get-class('offer');\r\n$mix-offer-description : lib-get-class('offer-description');\r\n$mix-offer-title : lib-get-class('offer-title');\r\n$mix-offer-text : lib-get-class('offer-text');\r\n$mix-offer-annotation : lib-get-class('offer-annotation');\r\n$mix-offer-new-price : lib-get-class('offer-new-price');\r\n$mix-offer-old-price : lib-get-class('offer-old-price');\r\n$mix-offer-price : lib-get-class('offer-price');\r\n$mix-offer-button : lib-get-class('offer-button');\r\n$mix-link-img : lib-get-class('link-img');\r\n$mix-link-btn : lib-get-class('link-btn');\r\n$mix-list : lib-get-class('list');\r\n$mix-block : lib-get-class('block');\r\n$mix-preview : lib-get-class('preview');\r\n$mix-rating : lib-get-class('rating');\r\n$mix-detail : lib-get-class('detail');\r\n$mix-social-links : lib-get-class('social-links');\r\n$mix-social-link : lib-get-class('social-link');\r\n$mix-free-mail : lib-get-class('free-mail');\r\n$mix-slider : lib-get-class('slider');\r\n//-------------------------------\r\n\r\n// 1. Общие параметры контента\r\n@mixin mix-content-common-param(\r\n\t$padding-top: 20px,\r\n\t$padding-bottom: 15px\r\n) {\r\n\tposition  : relative;\r\n\tmargin    : 0 auto;\r\n\tpadding   : $padding-top 40px $padding-bottom 40px;\r\n\tmax-width : 1280px;\r\n\r\n\t@include lib-respond-to(narrow) {\r\n\t\tpadding-right : 20px;\r\n\t\tpadding-left  : 20px;\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 2. Общие стили для повторяющихся правил плитки\r\n@mixin mix-respond-normal-tile-common() {\r\n\t#{$mix-tile}_list#{$mix-list} {\r\n\t\t#{$mix-list}_item {\r\n\t\t\t@include lib-respond-to(normal) {\r\n\t\t\t\t@include lib-box12(4);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@mixin mix-respond-narrow-tile-common() {\r\n\t#{$mix-tile}_list#{$mix-list} {\r\n\t\t#{$mix-list}_item {\r\n\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\t#{$mix-list}_offer#{$mix-offer} {\r\n\t\t\t\t\tpadding-bottom : 75px;\r\n\t\t\t\t\t#{$mix-offer}_preview#{$mix-preview} {\r\n\t\t\t\t\t\t#{$mix-preview}_link#{$mix-link-img} {\r\n\t\t\t\t\t\t\t@include lib-link-img-param(\r\n\t\t\t\t\t\t\t\t$height : 150px\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t#{$mix-offer-description} {\r\n\t\t\t\t\t\t&_container {\r\n\t\t\t\t\t\t\t#{$mix-offer-title}#{$mix-block} {\r\n\t\t\t\t\t\t\t\tmargin-top : -40px;\r\n\t\t\t\t\t\t\t\theight     : 40px;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t#{$mix-offer-annotation} {\r\n\t\t\t\t\t\t\t\theight     : 35px;\r\n\t\t\t\t\t\t\t\tmargin-top : 4px;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#{$mix-offer-old-price} {\r\n\t\t\t\t\t\t\tmargin-top : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#{$mix-offer-price} {\r\n\t\t\t\t\t\t\tright      : auto;\r\n\t\t\t\t\t\t\tbottom     : -20px;\r\n\t\t\t\t\t\t\twidth      : 134px;\r\n\r\n\t\t\t\t\t\t\ttext-align : center;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#{$mix-offer-button} {\r\n\t\t\t\t\t\t\tright      : 0;\r\n\t\t\t\t\t\t\tbottom     : -61px;\r\n\t\t\t\t\t\t\twidth      : 134px;\r\n\r\n\t\t\t\t\t\t\ttext-align : center;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 3. Переопределение стилей пдагина \"jscrollpane\"\r\n@mixin mix-override-jscrollpane(\r\n\t$after-height: 45px,\r\n\t$before-height: 45px\r\n) {\r\n\t$width-vertical-bar : 14px;\r\n\t$offset-container-pseudo : $width-vertical-bar + 3;\r\n\t//классы плагина \"jscrollpane\"\r\n\t.jspContainer {\r\n\t\t&:before,\r\n\t\t&:after {\r\n\t\t\tcontent  : '';\r\n\t\t\tposition : absolute;\r\n\t\t\tleft     : 0;\r\n\t\t\twidth    : 100%;\r\n\t\t\tz-index  : 2;\r\n\t\t}\r\n\t\t&:before {\r\n\t\t\ttop        : 0;\r\n\t\t\theight     : $before-height;\r\n\r\n\t\t\tbackground : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9), #ffffff, #ffffff);\r\n\t\t}\r\n\t\t&:after {\r\n\t\t\tbottom     : 0;\r\n\t\t\theight     : $after-height;\r\n\r\n\t\t\tbackground : linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9), #ffffff, #ffffff);\r\n\t\t}\r\n\t\t//Добавленный модификатор для отслеживания вертикальной полосы прокрутки\r\n\t\t&._jspOffset {\r\n\t\t\t&:after,\r\n\t\t\t&:before {\r\n\t\t\t\tleft : - $offset-container-pseudo;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.jspPane {\r\n\t\t\tmin-height : 100%;\r\n\r\n\t\t\tbackground : $mix-bg-comments-list;\r\n\t\t}\r\n\t\t.jspVerticalBar {\r\n\t\t\twidth         : $width-vertical-bar;\r\n\t\t\tz-index       : 3;\r\n\r\n\t\t\tbackground    : $mix-bg-jsp-vertical-bar;\r\n\t\t\tborder        : 1px solid $mix-color-border-jsp-vertical-bar;\r\n\t\t\tborder-radius : 3px;\r\n\t\t\t.jspTrack {\r\n\t\t\t\tbackground : transparent;\r\n\t\t\t\t.jspDrag {\r\n\t\t\t\t\tbackground    : $mix-bg-jsp-drag url(../../img/scrollbar/scrollbar.png) center center no-repeat;\r\n\t\t\t\t\tborder        : 1px solid $mix-color-border-jsp-drag;\r\n\t\t\t\t\tborder-radius : 3px;\r\n\t\t\t\t\tcursor        : pointer;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 4. Параметры элементов ячечеек подвала\r\n// 4.1 Заголовки\r\n@mixin mix-footer-title() {\r\n\tcolor       : $mix-color-footer-title;\r\n\tfont-family : 'OpenSansBold';\r\n\tfont-size   : lib-font-size(-2);\r\n}\r\n\r\n// 4.2 Списки\r\n@mixin mix-footer-list() {\r\n\tmargin-top : 10px;\r\n\r\n\tfont-size  : lib-font-size(-2);\r\n\t#{$mix-list}_item {\r\n\t\tmargin-top : 5px;\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 5. Общие стили для входа/регистрации через\r\n// соц.сети на втором шаге оформелния заказа\r\n@mixin mix-common-order-social-links() {\r\n\t@include lib-respond-to(narrow) {\r\n\t\t#{$mix-social-links}_title {\r\n\t\t\tdisplay : block;\r\n\t\t}\r\n\t\t#{$mix-social-links}_list#{$mix-list} {\r\n\t\t\tmargin-top : 20px;\r\n\t\t\t#{$mix-list}_item {\r\n\t\t\t\t#{$mix-social-link}#{$mix-link-btn} {\r\n\t\t\t\t\t#{$mix-link-btn}_addition {\r\n\t\t\t\t\t\tdisplay : none;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 6. Общие стили для предложений на странице тега\r\n// и странице предложений\r\n@mixin mix-common-offer(\r\n\t$margin-top: 21px\r\n) {\r\n\tmargin-top : $margin-top;\r\n\r\n\t@include lib-respond-to(normal) {\r\n\t\tpadding-bottom : 88px;\r\n\t}\r\n\t@include lib-respond-to(narrow) {\r\n\t\tpadding-bottom : 84px;\r\n\t}\r\n\t#{$mix-offer}_preview#{$mix-preview} {\r\n\t\t#{$mix-preview}_link#{$mix-link-img} {\r\n\r\n\t\t\t@include lib-link-img-param(\r\n\t\t\t\t$border : $mix-color-border-img\r\n\t\t\t);\r\n\t\t\t@include lib-respond-to(normal) {\r\n\t\t\t\t@include lib-link-img-param(\r\n\t\t\t\t\t$height : 180px\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t#{$mix-offer-description} {\r\n\t\t#{$mix-offer-new-price} {\r\n\t\t\twidth      : 368px;\r\n\r\n\t\t\tborder-top : 1px dotted $mix-color-border-new-price;\r\n\t\t}\r\n\r\n\t\t@include lib-respond-to(normal) {\r\n\t\t\t#{$mix-offer-description}_container {\r\n\t\t\t\theight : 108px;\r\n\t\t\t\t#{$mix-offer-title}#{$mix-block},\r\n\t\t\t\t#{$mix-offer-text} {\r\n\t\t\t\t\tpadding-left : 200px\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t&_rating#{$mix-rating} {\r\n\t\t\t\tposition : absolute;\r\n\t\t\t\tbottom   : -25px;\r\n\t\t\t\tleft     : 200px;\r\n\t\t\t}\r\n\t\t\t#{$mix-offer-new-price}#{$mix-detail} {\r\n\t\t\t\tbottom : -63px;\r\n\t\t\t\tleft   : 200px;\r\n\t\t\t\twidth  : 388px;\r\n\t\t\t}\r\n\t\t\t#{$mix-offer-button}#{$mix-block} {\r\n\t\t\t\tbottom : -70px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t@include lib-respond-to(narrow) {\r\n\t\t\t#{$mix-offer-description}_container {\r\n\t\t\t\theight : 112px;\r\n\t\t\t}\r\n\t\t\t&_rating#{$mix-rating} {\r\n\t\t\t\tbottom : -23px;\r\n\t\t\t}\r\n\t\t\t#{$mix-offer-new-price}#{$mix-detail} {\r\n\t\t\t\tbottom      : -62px;\r\n\t\t\t\tpadding-top : 12px;\r\n\t\t\t\twidth       : 275px;\r\n\t\t\t}\r\n\t\t\t#{$mix-offer-button}#{$mix-block} {\r\n\t\t\t\tbottom : -70px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 7. Общие стили для повторяющихся правил блока \"free-mail\"\r\n@mixin mix-respond-normal-free-mail() {\r\n\t@include lib-respond-to(normal) {\r\n\t\twidth : 632px;\r\n\t\t#{$mix-free-mail}_title {\r\n\t\t\tfont-size : lib-font-size(0);\r\n\t\t}\r\n\t\t#{$mix-free-mail}_description {\r\n\t\t\twidth : 344px;\r\n\t\t}\r\n\t\t#{$mix-free-mail}_user-data {\r\n\t\t\twidth : 232px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@mixin mix-respond-narrow-free-mail() {\r\n\t@include lib-respond-to(narrow) {\r\n\t\twidth : 508px;\r\n\t\t#{$mix-free-mail}_title {\r\n\t\t\tpadding   : 0 15px;\r\n\r\n\t\t\tfont-size : lib-font-size(-2);\r\n\t\t}\r\n\t\t#{$mix-free-mail}_description {\r\n\t\t\tmargin-left : 15px;\r\n\t\t\twidth       : 255px;\r\n\t\t}\r\n\t\t#{$mix-free-mail}_user-data {\r\n\t\t\tmargin-right : 15px;\r\n\t\t\twidth        : 215px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 8. Общие стили для повторяющихся правил слайдера контента\r\n// в карточке товара и странице блога\r\n@mixin mix-respond-content-slider() {\r\n\t#{$mix-slider} {\r\n\t\t&_prev {\r\n\t\t\t@include lib-respond-to(normal) {\r\n\t\t\t\tleft : -3px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t&_next {\r\n\t\t\t@include lib-respond-to(normal) {\r\n\t\t\t\tright : 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t&_prev,\r\n\t\t&_next {\r\n\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\tmargin-top : -12px;\r\n\t\t\t\theight     : 24px;\r\n\t\t\t\twidth      : 16px;\r\n\r\n\t\t\t\tfont-size  : 24px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t&_container {\r\n\t\t\t@include lib-respond-to(normal) {\r\n\t\t\t\twidth : 571px;\r\n\t\t\t}\r\n\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\theight : 228px;\r\n\t\t\t\twidth  : 468px;\r\n\t\t\t}\r\n\t\t\t#{$mix-slider}_list#{$mix-list} {\r\n\t\t\t\t#{$mix-list}_item {\r\n\t\t\t\t\t@include lib-respond-to(normal) {\r\n\t\t\t\t\t\tmargin-left : 8px;\r\n\t\t\t\t\t\t&:first-child {\r\n\t\t\t\t\t\t\tmargin-left : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\t\t\tmargin-left : 6px;\r\n\t\t\t\t\t\twidth       : 152px;\r\n\t\t\t\t\t\t&:first-child {\r\n\t\t\t\t\t\t\tmargin-left : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t#{$mix-list}_offer#{$mix-offer} {\r\n\t\t\t\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\t\t\t\tpadding-bottom : 10px;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#{$mix-offer}_preview#{$mix-preview} {\r\n\t\t\t\t\t\t\t#{$mix-preview}_link#{$mix-link-img} {\r\n\t\t\t\t\t\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\t\t\t\t\t\t@include lib-link-img-param(\r\n\t\t\t\t\t\t\t\t\t\t$height : 132px\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#{$mix-offer-description} {\r\n\t\t\t\t\t\t\t&_container {\r\n\t\t\t\t\t\t\t\t#{$mix-offer-title} {\r\n\t\t\t\t\t\t\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\t\t\t\t\t\t\tmargin-top : -40px;\r\n\t\t\t\t\t\t\t\t\t\theight     : 40px;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t#{$mix-offer-price} {\r\n\t\t\t\t\t\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\t\t\t\t\t\tposition   : relative;\r\n\t\t\t\t\t\t\t\t\tbottom     : auto;\r\n\t\t\t\t\t\t\t\t\tmargin-top : 10px;\r\n\t\t\t\t\t\t\t\t\twidth      : 100%;\r\n\r\n\t\t\t\t\t\t\t\t\ttext-align : center;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t#{$mix-offer-button} {\r\n\t\t\t\t\t\t\t\t@include lib-respond-to(narrow) {\r\n\t\t\t\t\t\t\t\t\tposition   : relative;\r\n\t\t\t\t\t\t\t\t\tbottom     : auto;\r\n\t\t\t\t\t\t\t\t\tmargin-top : 14px;\r\n\r\n\t\t\t\t\t\t\t\t\ttext-align : center;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 9. Общие стили предложений в личном кабинете\r\n@mixin mix-common-personal-offer() {\r\n\theight           : 51px;\r\n\r\n\tborder           : none;\r\n\tborder-radius    : 0;\r\n\tbackground-color : $mix-bg-personal-offer;\r\n\tbox-shadow       : none;\r\n\t#{$mix-offer}_preview#{$mix-preview} {\r\n\t\tleft : 5px;\r\n\t\t#{$mix-preview}_link#{$mix-link-img} {\r\n\t\t\t@include lib-link-img-param(\r\n\t\t\t\t$height : 40px,\r\n\t\t\t\t$ratio : (16/9),\r\n\t\t\t\t$border : $mix-color-border-personal-offer-img\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t#{$mix-offer-description} {\r\n\t\tposition : relative;\r\n\t\t&:hover {\r\n\t\t\t#{$mix-offer-description}_container,\r\n\t\t\t#{$mix-offer-new-price}#{$mix-detail} {\r\n\t\t\t\t@include lib-text-blackout-change (\r\n\t\t\t\t\t$color1 : 236,\r\n\t\t\t\t\t$color2 : 236,\r\n\t\t\t\t\t$color3 : 236\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t&_container {\r\n\t\t\theight : 100%;\r\n\r\n\t\t\t@include lib-text-blackout(\r\n\t\t\t\t$color1 : 236,\r\n\t\t\t\t$color2 : 236,\r\n\t\t\t\t$color3 : 236\r\n\t\t\t);\r\n\t\t\t#{$mix-offer-title}#{$mix-block} {\r\n\t\t\t\tpadding-left : 0;\r\n\t\t\t\t@include lib-text-hyphens(\r\n\t\t\t\t\t$type : lastClip\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t#{$mix-offer}_text {\r\n\t\t\t\tpadding-top : 10px;\r\n\r\n\t\t\t\tfont-size   : lib-font-size(-4);\r\n\t\t\t}\r\n\t\t}\r\n\t\t#{$mix-offer-new-price}#{$mix-detail} {\r\n\t\t\tbottom      : -20px;\r\n\t\t\tmargin-top  : 0;\r\n\t\t\tpadding-top : 0;\r\n\r\n\t\t\t@include lib-text-blackout(\r\n\t\t\t\t$color1 : 236,\r\n\t\t\t\t$color2 : 236,\r\n\t\t\t\t$color3 : 236\r\n\t\t\t);\r\n\t\t}\r\n\t\t#{$mix-offer-button}#{$mix-block} {\r\n\t\t\tright  : -115px;\r\n\t\t\tbottom : -16px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n",".su-password {\n  position: relative;\n  margin: 0 auto;\n  padding: 20px 40px 15px 40px;\n  max-width: 1280px;\n}\n\n@media screen and (max-width: 992px) {\n  .su-password {\n    padding-right: 20px;\n    padding-left: 20px;\n  }\n}\n\n.su-password .su-password-recover_question {\n  font-weight: 700;\n}\n\n.su-password .su-password-recover_instruction {\n  color: #97cb63;\n}\n\n.su-password .su-password-recover_error {\n  color: #ff9000;\n}\n\n.su-password .su-password-recover_email.su-field-text {\n  margin-top: 20px;\n  width: 250px;\n}\n\n.su-password .su-password-recover_button.su-block {\n  margin-top: 20px;\n}\n\n.su-password .su-password-change_instruction {\n  color: #97cb63;\n}\n\n.su-password .su-password-change_error {\n  color: #ff9000;\n}\n\n.su-password .su-password-change_password.su-field-text,\n.su-password .su-password-change_new-password.su-field-text {\n  margin-top: 1.25rem;\n  width: 300px;\n}\n\n.su-password .su-password-change_button.su-block {\n  margin-top: 20px;\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXG1hbmljdXJzaG9wXFxmcm9udGVuZFxcc2Nzc1xcMl9wcm9qZWN0XFxwYWdlc1xccGFzc3dvcmQuc2NzcyIsInNvdXJjZXMiOlsiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzLzJfcHJvamVjdC9wYWdlcy9wYXNzd29yZC5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL19saWIuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9saWJyYXJ5L192YXJpYWJsZXMuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9saWJyYXJ5L19mdW5jdGlvbnMuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9saWJyYXJ5L19mdW5jdGlvbnMuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9saWJyYXJ5L19taXhpbnMuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9saWJyYXJ5L192YXJpYWJsZXMuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9saWJyYXJ5L19mdW5jdGlvbnMuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9saWJyYXJ5L19wbGFjZWhvbGRlcnMuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9fbWl4aW5zLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy/QmNC80L/QvtGA0YIg0YTQsNC50LvQvtCyXHJcbkBpbXBvcnQgJy4uLy4uL3V0aWxzL2xpYic7XHJcbkBpbXBvcnQgJy4uLy4uL3V0aWxzL21peGlucyc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy/QptCy0LXRgtCwXHJcbiRjb2xvci10ZXh0LWluc3RydWN0aW9uIDogbGliLWNvbG9yKCdzZWNvbmRhcnktYWNjZW50Jyk7XHJcbiRjb2xvci10ZXh0LWVycm9yIDogbGliLWNvbG9yKCdhY2NlbnQtYmFzZS1icmlnaHQnKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vL9Ca0LvQsNGB0YHRi1xyXG4kd3JhcHBlciA6IGxpYi1nZXQtY2xhc3MoJ3Bhc3N3b3JkJyk7XHJcbiRwYXNzd29yZC1yZWNvdmVyIDogbGliLWdldC1jbGFzcygncGFzc3dvcmQtcmVjb3ZlcicpO1xyXG4kcGFzc3dvcmQtY2hhbmdlIDogbGliLWdldC1jbGFzcygncGFzc3dvcmQtY2hhbmdlJyk7XHJcbiRmaWVsZC10ZXh0IDogbGliLWdldC1jbGFzcygnZmllbGQtdGV4dCcpO1xyXG4kYmxvY2sgOiBsaWItZ2V0LWNsYXNzKCdibG9jaycpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiN7JHdyYXBwZXJ9IHtcclxuXHRAaW5jbHVkZSBtaXgtY29udGVudC1jb21tb24tcGFyYW0oKTtcclxuXHQmX3RpdGxlIHtcclxuXHJcblx0fVxyXG5cdCN7JHBhc3N3b3JkLXJlY292ZXJ9IHtcclxuXHRcdCZfcXVlc3Rpb24ge1xyXG5cdFx0XHRmb250LXdlaWdodCA6ICRsaWItZm9udC13ZWlnaHQtYm9sZDtcclxuXHRcdH1cclxuXHRcdCZfaW5zdHJ1Y3Rpb24ge1xyXG5cdFx0XHRjb2xvciA6ICRjb2xvci10ZXh0LWluc3RydWN0aW9uO1xyXG5cdFx0fVxyXG5cdFx0Jl9lcnJvciB7XHJcblx0XHRcdGNvbG9yIDogJGNvbG9yLXRleHQtZXJyb3I7XHJcblx0XHR9XHJcblx0XHQmX2VtYWlsI3skZmllbGQtdGV4dH0ge1xyXG5cdFx0XHRtYXJnaW4tdG9wIDogMjBweDtcclxuXHRcdFx0d2lkdGggICAgICA6IDI1MHB4O1xyXG5cdFx0fVxyXG5cdFx0Jl9idXR0b24jeyRibG9ja30ge1xyXG5cdFx0XHRtYXJnaW4tdG9wIDogMjBweDtcclxuXHRcdH1cclxuXHR9XHJcblx0I3skcGFzc3dvcmQtY2hhbmdlfSB7XHJcblx0XHQmX2luc3RydWN0aW9uIHtcclxuXHRcdFx0Y29sb3IgOiAkY29sb3ItdGV4dC1pbnN0cnVjdGlvbjtcclxuXHRcdH1cclxuXHRcdCZfZXJyb3Ige1xyXG5cdFx0XHRjb2xvciA6ICRjb2xvci10ZXh0LWVycm9yO1xyXG5cdFx0fVxyXG5cdFx0Jl9wYXNzd29yZCN7JGZpZWxkLXRleHR9LFxyXG5cdFx0Jl9uZXctcGFzc3dvcmQjeyRmaWVsZC10ZXh0fSB7XHJcblx0XHRcdG1hcmdpbi10b3AgOiAxLjI1cmVtO1xyXG5cdFx0XHR3aWR0aCAgICAgIDogMzAwcHg7XHJcblx0XHR9XHJcblx0XHQmX2J1dHRvbiN7JGJsb2NrfSB7XHJcblx0XHRcdG1hcmdpbi10b3AgOiAyMHB4O1xyXG5cdFx0fVxyXG5cdH1cclxufSIsIkBpbXBvcnQgJ2xpYnJhcnkvdmFyaWFibGVzJztcclxuQGltcG9ydCAnbGlicmFyeS9mdW5jdGlvbnMnO1xyXG5AaW1wb3J0ICdsaWJyYXJ5L21peGlucyc7XHJcbkBpbXBvcnQgJ2xpYnJhcnkvcGxhY2Vob2xkZXJzJzsiLCIvL9CY0LzQv9C+0YDRgiDRhNCw0LnQu9C+0LJcclxuQGltcG9ydCAnZnVuY3Rpb25zJztcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyDQktCQ0JbQndCeISEhXHJcbi8vINCU0LvRjyDQuNC30LHQtdC20LDQvdC40Y8g0LrQvtC90YTQu9C40LrRgtC+0LIg0YEg0L/QvtC00LrQu9GO0YfQsNC10LzRi9C80Lggc2NzcyDRhNGA0LXQudC80YTQvtGA0LrQsNC80Lgg0Lgg0LHQuNCx0LvQuNC+0YLQtdC60LDQvNC4XHJcbi8vINC+0LHRj9C30LDRgtC10LvRjNC90L4g0LTQvtCx0LDQstC70Y/QudGC0LUgXCJsaWItXCIg0LIg0L3QsNGH0LDQu9C1INC/0LXRgNC10LzQtdC90L3Ri9GFINGN0YLQvtCz0L4g0YTQsNC50LvQsFxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDEuINCf0KDQldCk0JjQmtChINCa0JvQkNCh0KHQntCSXHJcbiRsaWItY2xhc3MtcHJlZml4OiAnc3UtJztcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMi4g0J/QkNCb0JjQotCg0JBcclxuJGxpYi1wYWxldHRlOiAoXHJcblx0cHJpbWFyeS1kYXJrZXI6ICAgICAgICAgICAgICMyMzIzMjMsLy8zNSAgMzUgIDM1XHJcblx0cHJpbWFyeS1kYXJrOiAgICAgICAgICAgICAgICM3MTcxNzEsLy8xMTMgMTEzIDExM1xyXG5cdHByaW1hcnktYmFzZS1kYXJrOiAgICAgICAgICAjYThhOGE4LC8vMTY4IDE2OCAxNjhcclxuXHRwcmltYXJ5LWJhc2U6ICAgICAgICAgICAgICAgI2NjY2NjYywvLzIwNCAyMDQgMjA0XHJcblx0cHJpbWFyeS1iYXNlLWxpZ2h0OiAgICAgICAgICNlM2UzZTMsLy8yMjcgMjI3IDIyN1xyXG5cdHByaW1hcnktbGlnaHQ6ICAgICAgICAgICAgICAjZWNlY2VjLC8vMjM2IDIzNiAyMzZcclxuXHRwcmltYXJ5LWxpZ2h0ZXI6ICAgICAgICAgICAgI2ZmZmZmZiwvLzI1NSAyNTUgMjU1XHJcblxyXG5cdHNlY29uZGFyeS1kYXJrOiAgICAgICAgICAgICAjNjYzMzMzLC8vMTAyIDUxICA1MVxyXG5cdHNlY29uZGFyeS12aXNpdGVkOiAgICAgICAgICAjN2MzZWQ3LC8vMTI0IDYyICAyMTVcclxuXHRzZWNvbmRhcnktYWNjZW50LWRhcms6ICAgICAgIzY4YTIyZSwvLzEwNCAxNjIgNDZcclxuXHRzZWNvbmRhcnktYWNjZW50OiAgICAgICAgICAgIzk3Y2I2MywvLzE1MSAyMDMgOTlcclxuXHRzZWNvbmRhcnktYWNjZW50LWxpZ2h0OiAgICAgIzk1ZmYyZSwvLzE0OSAyNTUgNDZcclxuXHRzZWNvbmRhcnktYmFzZTogICAgICAgICAgICAgIzA1NTliYywvLzUgICA4OSAxODhcclxuXHRzZWNvbmRhcnktbGlnaHQ6ICAgICAgICAgICAgIzAwYWZmMiwvLzAgICAxNzUgMjQyXHJcblxyXG5cdGFjY2VudC1kYXJrZXI6ICAgICAgICAgICAgICAjNWI1MDQzLC8vOTEgIDgwICA2N1xyXG5cdGFjY2VudC1kYXJrOiAgICAgICAgICAgICAgICAjYTI3YTRhLC8vMTYyIDEyMiA3NFxyXG5cdGFjY2VudC1iYXNlLWRhcms6ICAgICAgICAgICAjYzk4ZDAzLC8vMjAxIDE0MSAzXHJcblx0YWNjZW50LWJhc2U6ICAgICAgICAgICAgICAgICNmZmI0MDksLy8yNTUgMTgwIDlcclxuXHRhY2NlbnQtYmFzZS1icmlnaHQ6ICAgICAgICAgI2ZmOTAwMCwvLzI1NSAxNDQgOVxyXG5cdGFjY2VudC1iYXNlLWxpZ2h0OiAgICAgICAgICAjZmJmN2JiLC8vMjUxIDI0NyAxODdcclxuXHRhY2NlbnQtbGlnaHQ6ICAgICAgICAgICAgICAgI2ZmZmNkNiwvLzI1NSAyNTIgMjE0XHJcblx0YWNjZW50LWxpZ2h0ZXI6ICAgICAgICAgICAgICNmZmZjZWIsLy8yNTUgMjUyIDIzNVxyXG5cclxuXHQvL9CU0L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0LUg0YbQstC10YLQsCDQtNC70Y8g0L/QvtC70Y8g0YTQvtGA0LzRiyDQv9C+0LjRgdC60LAg0LIg0YjQsNC/0LrQtVxyXG5cdGJvcmRlci1pbnB1dC1kYXJrOiAgICAgICAgICAjOGNhM2FlLC8vMTQwIDE2MyAxNzRcclxuXHRib3JkZXItaW5wdXQtYmFzZTogICAgICAgICAgI2EwYjRiZSwvLzE2MCAxODAgMTkwXHJcblx0Ym9yZGVyLWlucHV0LWxpZ2h0OiAgICAgICAgICNiNmM4ZDEsLy8xODIgMjAwIDIwOVxyXG5cclxuXHQvL9CU0L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0LUg0YbQstC10YLQsCDQtNC70Y8g0LrQvdC+0L/QvtC6INGB0L7Rhi7RgdC10YLQtdC5XHJcblx0YmFja2dyb3VuZC12azogICAgICAgICAgICAgICM1MzdjYTYsLy84MyAxMjQgMTY2XHJcblx0YmFja2dyb3VuZC1mYjogICAgICAgICAgICAgICM0ZTZhYmEsLy83OCAxMDYgMTg2XHJcbik7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDMuINCi0J7Qp9Ca0Jgg0J/QldCg0JXQmtCb0K7Qp9CV0J3QmNCvXHJcbiRsaWItYnJlYWtwb2ludHM6IChcclxuXHRub3JtYWw6ICcxMjAwcHgnLC8vU2l0ZS13aWR0aCAxMTcwXHJcblx0bmFycm93OiAnOTkycHgnLC8vIFNpdGUtd2lkdGggOTcwXHJcblx0bW9iaWxlOiAnNzY4cHgnLC8vIFNpdGUtd2lkdGggNzUwXHJcbik7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDQuINCo0JjQoNCY0J3QkCDQodCQ0JnQotCQXHJcbiRsaWItd2lkdGgtY29udGFpbmVyLW5vcm1hbCA6IDExNzBweDtcclxuJGxpYi13aWR0aC1jb250YWluZXItbmFycm93IDogOTcwcHg7XHJcbiRsaWItd2lkdGgtY29udGFpbmVyLW1vYmlsZSA6IDc1MHB4O1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA1LiAg0KjQoNCY0KTQolxyXG4vLyA1LjEg0KHQtdC80LXQudGB0YLQstC+INGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtZmFtaWx5IDogT3BlblNhbnNSZWd1bGFyLCBzYW5zLXNlcmlmO1xyXG5cclxuLy8gNS4yINCg0LDQt9C80LXRgCDRiNGA0LjRhNGC0LBcclxuJGxpYi1mb250LXNpemUgOiAxNnB4O1xyXG5cclxuJGxpYi10eXBlLXNjYWxlIDogKFxyXG5cdFx0LTU6IDAuNjg4cmVtLCAvLyAgICAxNnB4IC0+IDExcHhcclxuXHRcdC00OiAwLjc1cmVtLCAvLyAgICAgMTZweCAtPiAxMnB4ICAgIHNtYWxsZXIgdGV4dCAgICAvc21hbGxlciBzdWJoZWFkaW5nXHJcblx0XHQtMzogMC44MTVyZW0sIC8vICAgIDE2cHggLT4gMTNweCAgICBzbWFsbCB0ZXh0XHJcblx0XHQtMjogMC44NzVyZW0sIC8vICAgIDE2cHggLT4gMTRweCAgICBub3JtYWwgdGV4dCAgICAgL3NtYWxsIHN1YmhlYWRpbmdcclxuXHRcdC0xOiAwLjkzOHJlbSwgLy8gICAgMTZweCAtPiAxNXB4XHJcblx0XHQwOiAxcmVtLCAvLyAgICAgICAgIDE2cHggLT4gMTZweCAgICBiaWcgdGV4dCAgICAgICAgL3NtYWxsIGhlYWRpbmdcclxuXHRcdDE6IDEuMTI1cmVtLCAvLyAgICAgMTZweCAtPiAxOHB4ICAgIHZlcnkgYmlnIHRleHQgICAvaGVhZGluZ1xyXG5cdFx0MjogMS4zNzVyZW0sIC8vICAgICAxNnB4IC0+IDIycHggICAgICAgICAgICAgICAgICAgIC9iaWcgaGVhZGluZ1xyXG5cdFx0MzogMS44NzVyZW0sIC8vICAgICAxNnB4IC0+IDMwcHggICAgICAgICAgICAgICAgICAgIC9tYWluIGhlYWRpbmdcclxuXHRcdDQ6IDEuODc1cmVtLCAvLyAgICAgMTZweCAtPiAzMHB4ICAgICAgICAgICAgICAgICAgICAvbWFpbiBoZWFkaW5nXHJcblxyXG5cdFx0Ly9FeHRlbmQgZm9udHNcclxuXHRcdGUwOiAxLjA2M3JlbSwgLy8gICAgMTZweCAtPiAxN3B4XHJcblx0XHRlMTogMS4xODhyZW0sIC8vICAgIDE2cHggLT4gMTlweFxyXG5cdFx0ZTI6IDEuMjVyZW0sIC8vICAgICAxNnB4IC0+IDIwcHhcclxuXHRcdGUzOiAxLjY4OHJlbSwgLy8gICAgMTZweCAtPiAyN3B4XHJcblx0XHRlNDogMi4xMjVyZW0gLy8gICAgIDE2cHggLT4gMzRweFxyXG4pO1xyXG5cclxuJGxpYi1mb250LXNpemUtYmFzZSA6IGxpYi1mb250LXNpemUoMCk7XHJcbiRsaWItZm9udC1zaXplLWlucHV0IDogbGliLWZvbnQtc2l6ZSgtMik7XHJcblxyXG4vLyA1LjMg0J3QsNGB0YvRidC10L3QvdC+0YHRgtGMINGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtd2VpZ2h0LW5vcm1hbDogNDAwO1xyXG4kbGliLWZvbnQtd2VpZ2h0LWJvbGQ6IDcwMDtcclxuXHJcbi8vIDUuNCDQptCy0LXRgiDRiNGA0LjRhNGC0L7QslxyXG4kbGliLWNvbG9yLW1haW4tdGl0bGUgOiBsaWItY29sb3IoYWNjZW50LWJhc2UpO1xyXG4kbGliLWNvbG9yLWJpZy10aXRsZSA6IGxpYi1jb2xvcihzZWNvbmRhcnktZGFyayk7XHJcbiRsaWItY29sb3ItdGl0bGUgOiBsaWItY29sb3Ioc2Vjb25kYXJ5LWRhcmspO1xyXG4kbGliLWNvbG9yLXRleHQgOiBsaWItY29sb3IocHJpbWFyeS1kYXJrZXIpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA2LiAg0KHQotCg0J7QmtCQXHJcbi8vIDYuMSDQktGL0YHQvtGC0LAg0YHRgtGA0L7QutC4XHJcbiRsaWItbGluZS1oZWlnaHQtYmFzZSA6ICgkbGliLWZvbnQtc2l6ZS1iYXNlICogMS4yNSk7XHJcblxyXG4kbGliLWxpbmUtaGVpZ2h0cyA6IChcclxuXHRcdC01OiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtNDogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0LTM6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC0yOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtMTogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0MDogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0MTogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMTI1KSxcclxuXHRcdDI6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjM3NSksXHJcblx0XHQzOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS44NzUpLFxyXG5cclxuXHRcdC8vRXh0ZW5kIGxpbmVzXHJcblx0XHRlMDogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMDYzKSxcclxuXHRcdGUxOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4xODgpLFxyXG5cdFx0ZTI6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjI1KVxyXG4pO1xyXG5cclxuLy8gNi4yINCS0LXRgNGF0L3QuNC5INC+0YLRgdGD0L8g0YHRgtGA0L7QutC4XHJcbiRsaWItcGFkZGluZy10b3AtYmFzZSA6ICRsaWItZm9udC1zaXplLWJhc2UgKiAxLjI1O1xyXG5cclxuJGxpYi1wYWRkaW5nLXRvcCA6IChcclxuXHRcdC01OiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAwLjY4OCxcclxuXHRcdC00OiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAwLjc1LFxyXG5cdFx0LTM6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuODE1LFxyXG5cdFx0LTI6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuODc1LFxyXG5cdFx0LTE6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuOTM4LFxyXG5cdFx0MDogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMSxcclxuXHRcdDE6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuMTI1LFxyXG5cdFx0MjogKCRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuMzc1KSxcclxuXHRcdDM6ICgkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAxLjg3NSlcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gNy4g0J/QsNGA0LDQvNC10YLRgNGLIHot0L7RgdC4XHJcbiRsaWItei1pbmRleGVzOiAoXHJcblx0XHRcIndyYXBwZXItbW9iaWxlLWFmdGVyXCIsLy/QtNC70Y8g0LHQu9C+0LrQsCDQv9C10YDQtdC60YDRi9Cy0LDRjtGJ0LXQs9C+IHdyYXBwZXIg0L/RgNC4INC+0YLQutGA0YvRgtC+0Lwg0LzQtdC90Y5cclxuXHRcdFwibW9kYWxcIixcclxuXHRcdFwiZml4ZWRcIixcclxuXHRcdFwiaGVhZGVyLWJhc2tldFwiLFxyXG5cdFx0XCJoZWFkZXItY29udHJvbFwiLFxyXG5cdFx0XCJoZWFkZXItYmFubmVyXCIsXHJcblx0XHRcImhlYWRlci1pbmZvXCIsXHJcblx0XHRcImhlYWRlclwiLFxyXG5cdFx0XCJhc2lkZVwiLFxyXG5cdFx0XCJwYWdlXCIsXHJcblx0XHRcImZvb3RlclwiXHJcbik7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIsIi8vINCk0KPQndCa0KbQmNCYXHJcblxyXG4vLyDQktCQ0JbQndCeISEhXHJcbi8vINCU0LvRjyDQuNC30LHQtdC20LDQvdC40Y8g0LrQvtC90YTQu9C40LrRgtC+0LIg0YEg0L/QvtC00LrQu9GO0YfQsNC10LzRi9C80Lggc2NzcyDRhNGA0LXQudC80YTQvtGA0LrQsNC80Lgg0Lgg0LHQuNCx0LvQuNC+0YLQtdC60LDQvNC4XHJcbi8vINC+0LHRj9C30LDRgtC10LvRjNC90L4g0LTQvtCx0LDQstC70Y/QudGC0LUgXCJsaWItXCIg0LIg0L3QsNGH0LDQu9C1INGE0YPQvdC60YbQuNC5INGN0YLQvtCz0L4g0YTQsNC50LvQsFxyXG5cclxuLy8gMS4g0J/QvtC70YPRh9C40YLRjCDQutC70LDRgdGBLlxyXG5AZnVuY3Rpb24gbGliLWdldC1jbGFzcygkY2xhc3MtbmFtZSkge1xyXG5cdEByZXR1cm4gJy4nICsgJGxpYi1jbGFzcy1wcmVmaXggKyAkY2xhc3MtbmFtZTtcclxufVxyXG5cclxuLy8gMi4g0J/QvtC70YPRh9C40YLRjCDQutC70LDRgdGBLdC80L7QtNC40YTQuNC60LDRgtC+0YAuXHJcbkBmdW5jdGlvbiBsaWItZ2V0LW1vZGlmaWVyKCRtb2RpZmllci1uYW1lKSB7XHJcblx0QHJldHVybiAnLl8nICsgJGxpYi1jbGFzcy1wcmVmaXggKyAkbW9kaWZpZXItbmFtZTtcclxufVxyXG5cclxuLy8gMy4g0J/QvtC70YPRh9C40YLRjCDQt9C90LDRh9C10L3QuNC1INC40Lcg0LzQsNGB0LjQstCwIChtYXApLlxyXG5AZnVuY3Rpb24gbGliLXZhbCgkbWFwLCAka2V5KSB7XHJcblx0QGlmIG1hcC1oYXMta2V5KCRtYXAsICRrZXkpIHtcclxuXHRcdEByZXR1cm4gbWFwLWdldCgkbWFwLCAka2V5KTtcclxuXHR9IEBlbHNlIHtcclxuXHRcdEB3YXJuIFwiVW5rbm93biBgI3ska2V5fWAgaW4gYCN7JG1hcH1gLlwiO1xyXG5cdFx0QHJldHVybiBudWxsO1xyXG5cdH1cclxufVxyXG5cclxuLy8gNC4g0J/QvtC70YPRh9C40YLRjCDRhtCy0LXRglxyXG5AZnVuY3Rpb24gbGliLWNvbG9yKCRrZXkpIHtcclxuXHRAcmV0dXJuIGxpYi12YWwoJGxpYi1wYWxldHRlLCAka2V5KTtcclxufVxyXG5cclxuLy8gNS4g0J/QvtC70YPRh9C40YLRjCDRgtC+0YfQutGDINC/0LXRgNC10LrQu9GO0YfQtdC90LjRj1xyXG5AZnVuY3Rpb24gbGliLWJyZWFrcG9pbnRzKCRrZXkpIHtcclxuXHRAcmV0dXJuIGxpYi12YWwoJGxpYi1icmVha3BvaW50cywgJGtleSk7XHJcbn1cclxuXHJcbi8vIDYuINCf0L7Qu9GD0YfQuNGC0Ywg0YDQsNC30LzQtdGAINGI0YDQuNGE0YLQsFxyXG5AZnVuY3Rpb24gbGliLWZvbnQtc2l6ZSgkbGV2ZWwpIHtcclxuXHRAcmV0dXJuIGxpYi12YWwoJGxpYi10eXBlLXNjYWxlLCAkbGV2ZWwpO1xyXG59XHJcblxyXG4vLyA3LiDQn9C+0LvRg9GH0LjRgtGMINCy0YvRgdC+0YLRgyDRgdGC0YDQvtC60LhcclxuQGZ1bmN0aW9uIGxpYi1saW5lLWhlaWdodCgkbGV2ZWwpIHtcclxuXHRAcmV0dXJuIG1hcC1nZXQoJGxpYi1saW5lLWhlaWdodHMsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDguINCf0L7Qu9GD0YfQuNGC0Ywg0LLQtdGA0YXQvdC40Lkg0L7RgtGB0YLRg9C/INGB0YLRgNC+0LrQuFxyXG5AZnVuY3Rpb24gbGliLWxpbmUtdG9wKCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbWFwLWdldCgkbGliLXBhZGRpbmctdG9wLCAkbGV2ZWwpO1xyXG59XHJcblxyXG4vLyA5LiDQn9C+0LvRg9GH0LjRgtGMINGA0LDQt9C80LXRidC10L3QuNC1INC/0L4gei3QvtGB0LhcclxuQGZ1bmN0aW9uIGxpYi16KCRuYW1lKSB7XHJcblx0QGlmIGluZGV4KCRsaWItei1pbmRleGVzLCAkbmFtZSkge1xyXG5cdFx0QHJldHVybiAobGVuZ3RoKCRsaWItei1pbmRleGVzKSAtIGluZGV4KCRsaWItei1pbmRleGVzLCAkbmFtZSkpICsgMTtcclxuXHR9IEBlbHNlIHtcclxuXHRcdEB3YXJuICdUaGVyZSBpcyBubyBpdGVtIFwiI3skbmFtZX1cIiBpbiB0aGlzIGxpc3Q7IGNob29zZSBvbmUgb2Y6ICN7JGxpYi16LWluZGV4ZXN9JztcclxuXHRcdEByZXR1cm4gbnVsbDtcclxuXHR9XHJcbn0iLCIvLyDQpNCj0J3QmtCm0JjQmFxyXG5cclxuLy8g0JLQkNCW0J3QniEhIVxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwibGliLVwiINCyINC90LDRh9Cw0LvQtSDRhNGD0L3QutGG0LjQuSDRjdGC0L7Qs9C+INGE0LDQudC70LBcclxuXHJcbi8vIDEuINCf0L7Qu9GD0YfQuNGC0Ywg0LrQu9Cw0YHRgS5cclxuQGZ1bmN0aW9uIGxpYi1nZXQtY2xhc3MoJGNsYXNzLW5hbWUpIHtcclxuXHRAcmV0dXJuICcuJyArICRsaWItY2xhc3MtcHJlZml4ICsgJGNsYXNzLW5hbWU7XHJcbn1cclxuXHJcbi8vIDIuINCf0L7Qu9GD0YfQuNGC0Ywg0LrQu9Cw0YHRgS3QvNC+0LTQuNGE0LjQutCw0YLQvtGALlxyXG5AZnVuY3Rpb24gbGliLWdldC1tb2RpZmllcigkbW9kaWZpZXItbmFtZSkge1xyXG5cdEByZXR1cm4gJy5fJyArICRsaWItY2xhc3MtcHJlZml4ICsgJG1vZGlmaWVyLW5hbWU7XHJcbn1cclxuXHJcbi8vIDMuINCf0L7Qu9GD0YfQuNGC0Ywg0LfQvdCw0YfQtdC90LjQtSDQuNC3INC80LDRgdC40LLQsCAobWFwKS5cclxuQGZ1bmN0aW9uIGxpYi12YWwoJG1hcCwgJGtleSkge1xyXG5cdEBpZiBtYXAtaGFzLWtleSgkbWFwLCAka2V5KSB7XHJcblx0XHRAcmV0dXJuIG1hcC1nZXQoJG1hcCwgJGtleSk7XHJcblx0fSBAZWxzZSB7XHJcblx0XHRAd2FybiBcIlVua25vd24gYCN7JGtleX1gIGluIGAjeyRtYXB9YC5cIjtcclxuXHRcdEByZXR1cm4gbnVsbDtcclxuXHR9XHJcbn1cclxuXHJcbi8vIDQuINCf0L7Qu9GD0YfQuNGC0Ywg0YbQstC10YJcclxuQGZ1bmN0aW9uIGxpYi1jb2xvcigka2V5KSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItcGFsZXR0ZSwgJGtleSk7XHJcbn1cclxuXHJcbi8vIDUuINCf0L7Qu9GD0YfQuNGC0Ywg0YLQvtGH0LrRgyDQv9C10YDQtdC60LvRjtGH0LXQvdC40Y9cclxuQGZ1bmN0aW9uIGxpYi1icmVha3BvaW50cygka2V5KSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItYnJlYWtwb2ludHMsICRrZXkpO1xyXG59XHJcblxyXG4vLyA2LiDQn9C+0LvRg9GH0LjRgtGMINGA0LDQt9C80LXRgCDRiNGA0LjRhNGC0LBcclxuQGZ1bmN0aW9uIGxpYi1mb250LXNpemUoJGxldmVsKSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItdHlwZS1zY2FsZSwgJGxldmVsKTtcclxufVxyXG5cclxuLy8gNy4g0J/QvtC70YPRh9C40YLRjCDQstGL0YHQvtGC0YMg0YHRgtGA0L7QutC4XHJcbkBmdW5jdGlvbiBsaWItbGluZS1oZWlnaHQoJGxldmVsKSB7XHJcblx0QHJldHVybiBtYXAtZ2V0KCRsaWItbGluZS1oZWlnaHRzLCAkbGV2ZWwpO1xyXG59XHJcblxyXG4vLyA4LiDQn9C+0LvRg9GH0LjRgtGMINCy0LXRgNGF0L3QuNC5INC+0YLRgdGC0YPQvyDRgdGC0YDQvtC60LhcclxuQGZ1bmN0aW9uIGxpYi1saW5lLXRvcCgkbGV2ZWwpIHtcclxuXHRAcmV0dXJuIG1hcC1nZXQoJGxpYi1wYWRkaW5nLXRvcCwgJGxldmVsKTtcclxufVxyXG5cclxuLy8gOS4g0J/QvtC70YPRh9C40YLRjCDRgNCw0LfQvNC10YnQtdC90LjQtSDQv9C+IHot0L7RgdC4XHJcbkBmdW5jdGlvbiBsaWIteigkbmFtZSkge1xyXG5cdEBpZiBpbmRleCgkbGliLXotaW5kZXhlcywgJG5hbWUpIHtcclxuXHRcdEByZXR1cm4gKGxlbmd0aCgkbGliLXotaW5kZXhlcykgLSBpbmRleCgkbGliLXotaW5kZXhlcywgJG5hbWUpKSArIDE7XHJcblx0fSBAZWxzZSB7XHJcblx0XHRAd2FybiAnVGhlcmUgaXMgbm8gaXRlbSBcIiN7JG5hbWV9XCIgaW4gdGhpcyBsaXN0OyBjaG9vc2Ugb25lIG9mOiAjeyRsaWItei1pbmRleGVzfSc7XHJcblx0XHRAcmV0dXJuIG51bGw7XHJcblx0fVxyXG59IiwiLy8g0JjQvNC/0L7RgNGCINGE0LDQudC70L7QslxyXG5AaW1wb3J0ICd2YXJpYWJsZXMnO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vINCS0JDQltCd0J4hISEgXHJcbi8vINCU0LvRjyDQuNC30LHQtdC20LDQvdC40Y8g0LrQvtC90YTQu9C40LrRgtC+0LIg0YEg0L/QvtC00LrQu9GO0YfQsNC10LzRi9C80Lggc2NzcyDRhNGA0LXQudC80YTQvtGA0LrQsNC80Lgg0Lgg0LHQuNCx0LvQuNC+0YLQtdC60LDQvNC4XHJcbi8vINC+0LHRj9C30LDRgtC10LvRjNC90L4g0LTQvtCx0LDQstC70Y/QudGC0LUgXCJsaWItXCIg0LIg0L3QsNGH0LDQu9C1INC/0LXRgNC10LzQtdC90L3Ri9GFINC4INC/0YDQuNC80LXRgdC10Lkg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLyDQptCy0LXRgtCwXHJcbiRsaWItY29sb3ItcmF0aW5nLWljb24tYmFzZSA6IGxpYi1jb2xvcihwcmltYXJ5LWJhc2UtZGFyayk7XHJcbiRsaWItY29sb3Itc2hhZG93LXJhdGluZy1pY29uIDogbGliLWNvbG9yKHByaW1hcnktZGFya2VyKTtcclxuJGxpYi1jb2xvci10cmlhbmdsZSA6IGxpYi1jb2xvcihhY2NlbnQtYmFzZSk7XHJcbiRsaWItY29sb3ItY2xvc2UgOiBsaWItY29sb3IocHJpbWFyeS1kYXJrKTtcclxuJGxpYi1jb2xvci1jbG9zZS1ob3ZlciA6IGxpYi1jb2xvcihhY2NlbnQtYmFzZS1icmlnaHQpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vINCa0LvQsNGB0YHRi1xyXG4kbGliLWdyaWQtY2xhc3MtZGVmYXVsdCA6IGxpYi1nZXQtY2xhc3MoJ2dyaWQnKTtcclxuJGxpYi1kZXRhaWwgOiBsaWItZ2V0LWNsYXNzKCdkZXRhaWwnKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyAxLiDQo9GB0YLQsNC90L7QstC60LAg0YLQvtGH0LrQuCDQv9C10YDQtdC60LvRjtGH0LXQvdC40Y9cclxuQG1peGluIGxpYi1yZXNwb25kLXRvKCRrZXkpIHtcclxuXHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aCA6ICN7bGliLWJyZWFrcG9pbnRzKCRrZXkpfSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDIuINCo0LjRgNC40L3QsCDRj9GH0LXQudC60LhcclxuLy8gMi4xLiDQlNC70Y8g0YHQtdGC0LrQuCDQuNC3IDE0LdGC0Lgg0LrQvtC70L7QvdC+0LpcclxuQG1peGluIGxpYi1ib3gxNCgkY2VsbDoxNCkge1xyXG5cdGZsb2F0IDogbGVmdDtcclxuXHR3aWR0aCA6ICgxMDAlICogJGNlbGwgLyAxNCk7XHJcbn1cclxuXHJcbi8vIDIuMi4g0JTQu9GPINGB0LXRgtC60Lgg0LjQtyAxMi3RgtC4INC60L7Qu9C+0L3QvtC6XHJcbkBtaXhpbiBsaWItYm94MTIoJGNlbGw6MTIpIHtcclxuXHRmbG9hdCA6IGxlZnQ7XHJcblx0d2lkdGggOiAoMTAwJSAqICRjZWxsIC8gMTIpO1xyXG59XHJcblxyXG4vLyAyLjMuINCU0LvRjyDRgdC10YLQutC4INC40LcgMTAt0YLQuCDQutC+0LvQvtC90L7QulxyXG5AbWl4aW4gbGliLWJveDEwKCRjZWxsOjEwKSB7XHJcblx0ZmxvYXQgOiBsZWZ0O1xyXG5cdHdpZHRoIDogKDEwMCUgKiAkY2VsbCAvIDEwKTtcclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyAzLiDQn9Cw0YDQsNC80LXRgtGA0Ysg0YHQtdGC0LrQuCDQutC+0L3RgtC10L3RgtCwXHJcbi8vINCj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdGCINC+0YHQvdC+0LLQvdGL0LUg0L/QsNGA0LDQvNC10YLRgNGLINCx0L7QutC+0LLQvtC5INC/0LDQvdC10LvQuCDQuCDQutC+0L3RgtC10L3RgtCwXHJcbi8vINGB0LDQudGC0LAgKNC40YUg0L3QsNC70LjRh9C40LUsINGI0LjRgNC40L3RgyDQuCDRgNCw0YHQv9C+0LvQvtC20LXQvdC40LUpINCyINC30LDQstC40YHQuNC80L7RgtC4INC+0YI6XHJcbi8vIC0g0L3QsNC70LjRh9C40Y8g0Lgg0YjQuNGA0LjQvdGLINCx0L7QutC+0LLQvtC5INC/0LDQvdC10LvQuCDQsiBweDtcclxuLy8gLSDRiNC40YDQuNC90Ysg0YHQsNC50YLQsCDQuCDQstC10LvQuNGH0LjQvdGLINCy0L3Rg9GC0YDQtdC90L3QuNGFINC+0YLRgdGD0L/QvtCyINGB0LDQudGC0LAg0LIgcHg7XHJcbi8vIC0g0L3QsNC70LjRh9C40Y8g0Lgg0LfQvdCw0YfQtdC90LjRjyDRgdCy0L7QudGB0YLQstCwIGZsb2F0INC00LvRjyDRjdGC0LjRhSDQutC+0LvQvtC90L7Qui5cclxuXHJcbkBtaXhpbiBsaWItZ3JpZC1wYXJhbShcclxuXHQkZ3JpZC1jbGFzczogJGxpYi1ncmlkLWNsYXNzLWRlZmF1bHQsXHJcblx0JHBhZGRpbmctY29udGFpbmVyLXB4OiAxNXB4LFxyXG5cdCR3aWR0aC1jb250YWluZXItcHg6IDEwMDBweCxcclxuXHQkd2lkdGgtYXNpZGUtcHg6IDIwMHB4LFxyXG5cdCRhc2lkZS1mbG9hdDogbm9uZSwvL25vbmUsbGVmdCxyaWdodCxvbmx5LXdpZHRoXHJcblx0JGNvbnRlbnQtZmxvYXQ6IG9ubHktd2lkdGgvL2xlZnQscmlnaHQsb25seS13aWR0aCxvbmx5LWZ1bGwtd2lkdGhcclxuKSB7XHJcblx0JHdpZHRoLWNvbnRhaW5lci1hYnNvbHV0ZSA6ICgkd2lkdGgtY29udGFpbmVyLXB4IC8gMXB4KTsgLy/Qv9GA0LXQvtCx0YDQsNC30L7QstCw0L3QuNC1INC6INGH0LjRgdC70YNcclxuXHQkcGFkZGluZy1jb250YWluZXItYWJzb2x1dGUgOiAoJHBhZGRpbmctY29udGFpbmVyLXB4IC8gMXB4KTsgLy/Qv9GA0LXQvtCx0YDQsNC30L7QstCw0L3QuNC1INC6INGH0LjRgdC70YNcclxuXHQkd2lkdGgtYXNpZGUtYWJzb2x1dGUgOiAoJHdpZHRoLWFzaWRlLXB4IC8gMXB4KTsgLy/Qv9GA0LXQvtCx0YDQsNC30L7QstCw0L3QuNC1INC6INGH0LjRgdC70YNcclxuXHQkd2lkdGgtY2FsY3VsYXRlZCA6ICgkd2lkdGgtY29udGFpbmVyLWFic29sdXRlIC0gKDIgKiAkcGFkZGluZy1jb250YWluZXItYWJzb2x1dGUpKTtcclxuXHQkd2lkdGgtYXNpZGUgOiAoJHdpZHRoLWFzaWRlLWFic29sdXRlICogMTAwJSAvICR3aWR0aC1jYWxjdWxhdGVkKTtcclxuXHQkd2lkdGgtY29udGVudCA6ICgoJHdpZHRoLWNhbGN1bGF0ZWQgLSAkd2lkdGgtYXNpZGUtYWJzb2x1dGUpICogMTAwJSAvICR3aWR0aC1jYWxjdWxhdGVkKTtcclxuXHJcblx0QGlmICRhc2lkZS1mbG9hdCA9PSBub25lIHtcclxuXHR9IEBlbHNlIGlmICRhc2lkZS1mbG9hdCA9PSBvbmx5LXdpZHRoIHtcclxuXHRcdCN7JGdyaWQtY2xhc3N9X2FzaWRlIHtcclxuXHRcdFx0d2lkdGggOiAkd2lkdGgtYXNpZGU7XHJcblx0XHR9XHJcblx0fSBAZWxzZSB7XHJcblx0XHQjeyRncmlkLWNsYXNzfV9hc2lkZSB7XHJcblx0XHRcdGZsb2F0IDogJGFzaWRlLWZsb2F0O1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1hc2lkZTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdEBpZiAkY29udGVudC1mbG9hdCA9PSBvbmx5LXdpZHRoIHtcclxuXHRcdCN7JGdyaWQtY2xhc3N9X2NvbnRlbnQge1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1jb250ZW50O1xyXG5cdFx0fVxyXG5cdH0gQGVsc2UgaWYgJGNvbnRlbnQtZmxvYXQgPT0gb25seS1mdWxsLXdpZHRoIHtcclxuXHRcdCN7JGdyaWQtY2xhc3N9X2NvbnRlbnQge1xyXG5cdFx0XHR3aWR0aCA6IDEwMCU7XHJcblx0XHR9XHJcblx0fSBAZWxzZSB7XHJcblx0XHQjeyRncmlkLWNsYXNzfV9jb250ZW50IHtcclxuXHRcdFx0ZmxvYXQgOiAkY29udGVudC1mbG9hdDtcclxuXHRcdFx0d2lkdGggOiAkd2lkdGgtY29udGVudDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gNC4g0J/QsNGA0LDQvNC10YLRgNGLINGC0LXQutGB0YLQsFxyXG4vLyA0LjEg0J7RgdC90L7QstC90YvQtSDQv9Cw0YDQsNC80LXRgtGA0YtcclxuQG1peGluIGxpYi10ZXh0LWJhc2UtcGFyYW0oJGxldmVsOiAwKSB7XHJcblx0cGFkZGluZy10b3AgOiBsaWItbGluZS10b3AoJGxldmVsKTtcclxuXHJcblx0Zm9udC1zaXplICAgOiBsaWItZm9udC1zaXplKCRsZXZlbCk7XHJcblx0bGluZS1oZWlnaHQgOiBsaWItbGluZS1oZWlnaHQoJGxldmVsKTtcclxufVxyXG5cclxuLy8gNC4yINCX0LDRgtC10LzQvdC10L3QuNC1INGC0LXQutGB0YLQsFxyXG5AbWl4aW4gbGliLXRleHQtYmxhY2tvdXQoXHJcblx0JHZlcnRpY2FsLXBvc2l0aW9uICA6IFwiYm90dG9tXCIsXHJcblx0JGhlaWdodCAgICAgICAgICAgICA6IDEwMCUsXHJcblx0JHdpZHRoICAgICAgICAgICAgICA6IDhweCxcclxuXHQkY29sb3IxICAgICAgICAgICAgIDogMjU1LFxyXG5cdCRjb2xvcjIgICAgICAgICAgICAgOiAyNTUsXHJcblx0JGNvbG9yMyAgICAgICAgICAgICA6IDI1NVxyXG4pIHtcclxuXHQkYmcxIDogcmdiYSgkY29sb3IxLCAkY29sb3IyLCAkY29sb3IzLCAwLjApO1xyXG5cdCRiZzIgOiByZ2JhKCRjb2xvcjEsICRjb2xvcjIsICRjb2xvcjMsIDAuOCk7XHJcblx0JGJnMyA6IHJnYmEoJGNvbG9yMSwgJGNvbG9yMiwgJGNvbG9yMywgMS4wKTtcclxuXHJcblx0JjpiZWZvcmUge1xyXG5cdFx0Y29udGVudCAgICAgICAgICAgICAgICAgOiAnJztcclxuXHRcdHBvc2l0aW9uICAgICAgICAgICAgICAgIDogYWJzb2x1dGU7XHJcblx0XHQjeyR2ZXJ0aWNhbC1wb3NpdGlvbn0gICA6IDA7XHJcblx0XHRyaWdodCAgICAgICAgICAgICAgICAgICA6IDA7XHJcblx0XHRoZWlnaHQgICAgICAgICAgICAgICAgICA6ICRoZWlnaHQ7XHJcblx0XHR3aWR0aCAgICAgICAgICAgICAgICAgICA6ICR3aWR0aDtcclxuXHRcdHotaW5kZXggICAgICAgICAgICAgICAgIDogMTtcclxuXHJcblx0XHRiYWNrZ3JvdW5kICAgICAgICAgICAgICA6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgJGJnMSwgJGJnMiwgJGJnMyk7XHJcblx0fVxyXG59XHJcblxyXG4vLyA0LjMg0JjQt9C80LXQvdC10L3QuNC1INGG0LLQtdGC0LAg0LfQsNGC0LXQvNC90LXQvdC40Y8g0YLQtdC60YHRgtCwXHJcbkBtaXhpbiBsaWItdGV4dC1ibGFja291dC1jaGFuZ2UoXHJcblx0JGNvbG9yMSAgICAgOiAyNTUsXHJcblx0JGNvbG9yMiAgICAgOiAyNTIsXHJcblx0JGNvbG9yMyAgICAgOiAyMzVcclxuKSB7XHJcblx0JGJnMSA6IHJnYmEoJGNvbG9yMSwgJGNvbG9yMiwgJGNvbG9yMywgMC4wKTtcclxuXHQkYmcyIDogcmdiYSgkY29sb3IxLCAkY29sb3IyLCAkY29sb3IzLCAwLjgpO1xyXG5cdCRiZzMgOiByZ2JhKCRjb2xvcjEsICRjb2xvcjIsICRjb2xvcjMsIDEuMCk7XHJcblxyXG5cdCY6YmVmb3JlIHtcclxuXHRcdGJhY2tncm91bmQgOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRiZzEsICRiZzIsICRiZzMpO1xyXG5cdH1cclxuXHJcbn1cclxuXHJcbi8vIDQuNCDQn9C10YDQtdC90L7RgS/QvtCx0YDRi9CyINGC0LXQutGB0YLQsFxyXG5AbWl4aW4gbGliLXRleHQtaHlwaGVucygkdHlwZSA6IGh5cGhlbnMpIHtcclxuXHRAaWYgJHR5cGUgPT0gbGFzdEVsbGlwc2lzIHtcclxuXHRcdG92ZXJmbG93ICAgICAgOiBoaWRkZW47XHJcblx0XHR0ZXh0LW92ZXJmbG93IDogZWxsaXBzaXM7XHJcblx0XHR3aGl0ZS1zcGFjZSAgIDogbm93cmFwO1xyXG5cdFx0b3ZlcmZsb3ctd3JhcCA6IG5vcm1hbDtcclxuXHRcdHdvcmQtd3JhcCAgICAgOiBub3JtYWw7XHJcblx0XHRoeXBoZW5zICAgICAgIDogbm9uZTtcclxuXHR9IEBlbHNlIGlmICR0eXBlID09IGxhc3RDbGlwIHtcclxuXHRcdG92ZXJmbG93ICAgICAgOiBoaWRkZW47XHJcblx0XHR0ZXh0LW92ZXJmbG93IDogY2xpcDtcclxuXHRcdHdoaXRlLXNwYWNlICAgOiBub3dyYXA7XHJcblx0XHRvdmVyZmxvdy13cmFwIDogbm9ybWFsO1xyXG5cdFx0d29yZC13cmFwICAgICA6IG5vcm1hbDtcclxuXHRcdGh5cGhlbnMgICAgICAgOiBub25lO1xyXG5cdH0gQGVsc2UgaWYgJHR5cGUgPT0gYnJlYWt3b3JkIHtcclxuXHRcdG92ZXJmbG93LXdyYXAgOiBicmVhay13b3JkO1xyXG5cdFx0d29yZC13cmFwICAgICA6IGJyZWFrLXdvcmQ7XHJcblx0fSBAZWxzZSBpZiAkdHlwZSA9PSBsaW1pdNCgeXBoZW5zIHtcclxuXHRcdG92ZXJmbG93ICAgICAgOiBoaWRkZW47XHJcblx0XHRvdmVyZmxvdy13cmFwIDogYnJlYWstd29yZDtcclxuXHRcdHdvcmQtd3JhcCAgICAgOiBicmVhay13b3JkO1xyXG5cdFx0aHlwaGVucyAgICAgICA6IGF1dG87XHJcblx0fSBAZWxzZSB7IC8vaHlwaGVuc1xyXG5cdFx0b3ZlcmZsb3ctd3JhcCA6IGJyZWFrLXdvcmQ7XHJcblx0XHR3b3JkLXdyYXAgICAgIDogYnJlYWstd29yZDtcclxuXHRcdGh5cGhlbnMgICAgICAgOiBhdXRvO1xyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyA1LiDQn9Cw0YDQsNC80LXRgtGA0Ysg0LjQutC+0L3QvtGH0L3QvtCz0L4g0YjRgNC40YTRgtCwXHJcbkBtaXhpbiBsaWItZm9udC1pY29uKFxyXG5cdCRmb250LXdlaWdodDogbm9ybWFsLFxyXG5cdCRsaW5lLWhlaWdodDogMVxyXG4pIHtcclxuXHRmb250LWZhbWlseSAgICAgICAgICAgICA6ICdpY29tb29uJztcclxuXHRmb250LXN0eWxlICAgICAgICAgICAgICA6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodCAgICAgICAgICAgICA6ICRmb250LXdlaWdodDtcclxuXHRmb250LXZhcmlhbnQgICAgICAgICAgICA6IG5vcm1hbDtcclxuXHR0ZXh0LXRyYW5zZm9ybSAgICAgICAgICA6IG5vbmU7XHJcblx0bGluZS1oZWlnaHQgICAgICAgICAgICAgOiAkbGluZS1oZWlnaHQ7XHJcblxyXG5cdC8vIEJldHRlciBGb250IFJlbmRlcmluZyA9PT09PT09PT09PT1cclxuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nICA6IGFudGlhbGlhc2VkO1xyXG5cdC1tb3otb3N4LWZvbnQtc21vb3RoaW5nIDogZ3JheXNjYWxlO1xyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDYuINCY0LrQvtC90LrQuCDRgNC10LnRgtC40L3Qs9CwICjQt9Cy0LXQt9C00YspXHJcbkBtaXhpbiBsaWItcmF0aW5nLWljb24oXHJcblx0JGNvbG9yOiAkbGliLWNvbG9yLXJhdGluZy1pY29uLWJhc2UsXHJcblx0JHRleHQtc2hhZG93OiBmYWxzZVxyXG4pIHtcclxuXHQmOmJlZm9yZSB7XHJcblx0XHRjb250ZW50ICAgICAgICA6ICdcXGYwMDVcXGYwMDVcXGYwMDVcXGYwMDVcXGYwMDUnO1xyXG5cdFx0ZGlzcGxheSAgICAgICAgOiBpbmxpbmUtYmxvY2s7XHJcblx0XHRwYWRkaW5nLWxlZnQgICA6IDJweDtcclxuXHJcblx0XHRjb2xvciAgICAgICAgICA6ICRjb2xvcjtcclxuXHRcdGxldHRlci1zcGFjaW5nIDogMnB4O1xyXG5cdFx0d2hpdGUtc3BhY2UgICAgOiBub3dyYXA7XHJcblxyXG5cdFx0QGlmICR0ZXh0LXNoYWRvdyA9PSB0cnVlIHtcclxuXHRcdFx0dGV4dC1zaGFkb3cgOiAxcHggMXB4IDJweCAkbGliLWNvbG9yLXNoYWRvdy1yYXRpbmctaWNvbjtcclxuXHRcdH1cclxuXHJcblx0XHRAaW5jbHVkZSBsaWItZm9udC1pY29uO1xyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyA3LiDQptC10L3QsCDQsiDQtNC10YLQsNC70Y/RhVxyXG5AbWl4aW4gbGliLXByaWNlLWRldGFpbChcclxuXHQkcG9zaXRpb246IHJlbGF0aXZlLFxyXG5cdCR3aWR0aDogMTAwJVxyXG4pIHtcclxuXHRkaXNwbGF5ICAgICA6IGlubGluZS1ibG9jaztcclxuXHRwb3NpdGlvbiAgICA6ICRwb3NpdGlvbjtcclxuXHRtYXJnaW4tdG9wICA6IDEwcHg7XHJcblx0cGFkZGluZy10b3AgOiA4cHg7XHJcblx0d2lkdGggICAgICAgOiAkd2lkdGg7XHJcblx0I3skbGliLWRldGFpbH1fbGFiZWwge1xyXG5cdFx0ZGlzcGxheSA6IGlubGluZS1ibG9jaztcclxuXHR9XHJcblx0I3skbGliLWRldGFpbH1fdmFsdWUge1xyXG5cdFx0ZGlzcGxheSAgICAgOiBpbmxpbmUtYmxvY2s7XHJcblx0XHRtYXJnaW4tbGVmdCA6IDVweDtcclxuXHJcblx0XHRmb250LXdlaWdodCA6ICRsaWItZm9udC13ZWlnaHQtYm9sZDtcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gOC4g0J/QsNGA0LDQvNC10YLRgNGLINGB0YHRi9C70LrQuCDQsiDQsdC70L7QutC1INC/0YDQtdC00LLQsNGA0LjRgtC10LvRjNC90L7Qs9C+INC/0YDQvtGB0LzQvtGC0YDQsFxyXG5AbWl4aW4gbGliLWxpbmstaW1nLXBhcmFtKFxyXG5cdC8v0L/QviDRg9C80L7Qu9GH0LDQvdC40Y4gLSDQutCy0LDQtNGA0LDRglxyXG5cdCRoZWlnaHQ6IDE1MHB4LFxyXG5cdCRyYXRpbzogMSxcclxuXHQkYmc6IG5vbmUsXHJcblx0JGJvcmRlcjogbm9uZSxcclxuXHQkdGV4dC1hbGlnbjogbm9uZSxcclxuXHQkdmVydGljYWwtYWxpZ246IG5vbmVcclxuKSB7XHJcblx0JGhlaWdodC1saW5rLWltZyA6ICRoZWlnaHQ7XHJcblx0JHdpZHRoLWxpbmstaW1nIDogKCRoZWlnaHQtbGluay1pbWcgKiAkcmF0aW8pO1xyXG5cdC8v0YfRgtC+0LHRiyDQutCw0YDRgtC40L3QutCwINCz0LDRgNCw0L3RgtC40YDQvtCy0LDQvdC90L4g0L3QtSDQstGL0LXQt9C20LDQu9CwINC30LAg0L/RgNC10LTQtdC70Ysg0LHQu9C+0LrQsCxcclxuXHQvLyDRg9GB0YLQsNC90LDQstC70LjQstCw0LXQvCDQstGL0YHQvtGC0YMg0YHRgtGA0L7QutC4INC90LAgNtGA0YUg0LzQtdC90YzRiNC1XHJcblx0JGxpbmUtaGVpZ2h0LWxpbmstaW1nIDogKCRoZWlnaHQtbGluay1pbWcgLSA2KTtcclxuXHJcblx0aGVpZ2h0ICAgICAgOiAkaGVpZ2h0LWxpbmstaW1nO1xyXG5cdHdpZHRoICAgICAgIDogJHdpZHRoLWxpbmstaW1nO1xyXG5cclxuXHRsaW5lLWhlaWdodCA6ICRsaW5lLWhlaWdodC1saW5rLWltZztcclxuXHJcblx0QGlmICgkYmcgIT0gbm9uZSkge1xyXG5cdFx0YmFja2dyb3VuZCA6ICRiZyxcclxuXHR9XHJcblx0QGlmICgkYm9yZGVyICE9IG5vbmUpIHtcclxuXHRcdGJvcmRlciA6IDFweCBzb2xpZCAkYm9yZGVyO1xyXG5cdH1cclxuXHRAaWYgKCR0ZXh0LWFsaWduICE9IG5vbmUpIHtcclxuXHRcdHRleHQtYWxpZ24gOiAkdGV4dC1hbGlnbjtcclxuXHR9XHJcblx0QGlmICgkdmVydGljYWwtYWxpZ24gIT0gbm9uZSkge1xyXG5cdFx0dmVydGljYWwtYWxpZ24gOiAkdmVydGljYWwtYWxpZ247XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA5LiDQntGC0LfRi9Cy0YfQuNCy0L7QtSDRgdC+0L7RgtC90L7RiNC10L3QuNC1XHJcbi8vINCc0LjQutGB0LjQvSDQtNC70Y8g0YHQvtC30LTQsNC90LjRjyDQvNCw0YHRiNGC0LDQsdC40YDRg9C10LzRi9GFINGN0LvQtdC80LXQvdGC0L7QsijQvtCx0YvRh9C90L4g0LjQt9C+0LHRgNCw0LbQtdC90LjRjy/QutCw0YDRgtC40L3QutC4INC30LDQtNC90LXQs9C+INGE0L7QvdCwKSxcclxuLy8g0YfRgtC+0LHRiyDQv9C+0LTQtNC10YDQttC40LLQsNGC0Ywg0YHQvtC+0YLQvdC+0YjQtdC90LjQtS5cclxuQG1peGluIGxpYi1yZXNwb25zaXZlLXJhdGlvKFxyXG5cdC8v0L/QviDRg9C80L7Qu9GH0LDQvdC40Y4gLSDQutCy0LDQtNGA0LDRglxyXG5cdCR4OjEsXHJcblx0JHk6MVxyXG4pIHtcclxuXHQkcGFkZGluZyA6IHVucXVvdGUoKCAkeSAvICR4ICkgKiAxMDAgKyAnJScpO1xyXG5cclxuXHQmOmJlZm9yZSB7XHJcblx0XHRjb250ZW50ICAgICA6ICcnO1xyXG5cdFx0ZGlzcGxheSAgICAgOiBibG9jaztcclxuXHRcdHdpZHRoICAgICAgIDogMTAwJTtcclxuXHRcdHBhZGRpbmctdG9wIDogJHBhZGRpbmc7XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDEwLiBDU1Mg0YLRgNC10YPQs9C+0LvRjNC90LjQutC4XHJcbkBtaXhpbiBjc3MtdHJpYW5nbGUoXHJcblx0JGNvbG9yOiAkbGliLWNvbG9yLXRyaWFuZ2xlLFxyXG5cdCRkaXJlY3Rpb246ICdkb3duJyxcclxuXHQkc2l6ZTogOHB4LFxyXG5cdCRyYXRpbzogMyxcclxuXHQkb2Zmc2V0OiAycHgsXHJcblx0JGNlbnRlcjogZmFsc2UsXHJcblx0JHJvdW5kOiBmYWxzZVxyXG4pIHtcclxuXHQkc2lkZS1zaXplIDogKCRzaXplICogJHJhdGlvIC8gMik7XHJcblxyXG5cdGNvbnRlbnQgIDogJyc7XHJcblx0ZGlzcGxheSAgOiBibG9jaztcclxuXHRwb3NpdGlvbiA6IGFic29sdXRlO1xyXG5cdGhlaWdodCAgIDogMDtcclxuXHR3aWR0aCAgICA6IDA7XHJcblxyXG5cdEBpZiAkcm91bmQge1xyXG5cdFx0Ym9yZGVyLXJhZGl1cyA6IDNweDtcclxuXHR9XHJcblx0QGlmICRkaXJlY3Rpb24gPT0gZG93biB7XHJcblx0XHRib3JkZXItbGVmdCAgIDogJHNpZGUtc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdGJvcmRlci1yaWdodCAgOiAkc2lkZS1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLXRvcCAgICA6ICRzaXplIHNvbGlkICRjb2xvcjtcclxuXHRcdHRvcCAgICAgICAgICAgOiAkb2Zmc2V0O1xyXG5cdFx0QGlmICRjZW50ZXIge1xyXG5cdFx0XHRtYXJnaW4tbGVmdDogNTAlO1xyXG5cdFx0XHRsZWZ0OiAtJHNpZGUtc2l6ZTtcclxuXHRcdH1cclxuXHR9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gdXAge1xyXG5cdFx0Ym9yZGVyLWxlZnQgICA6ICRzaWRlLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItcmlnaHQgIDogJHNpZGUtc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdGJvcmRlci1ib3R0b20gOiAkc2l6ZSBzb2xpZCAkY29sb3I7XHJcblx0XHRib3R0b20gICAgICAgIDogJG9mZnNldDtcclxuXHRcdEBpZiAkY2VudGVyIHtcclxuXHRcdFx0bWFyZ2luLWxlZnQ6IDUwJTtcclxuXHRcdFx0bGVmdDogLSRzaWRlLXNpemU7XHJcblx0XHR9XHJcblx0fSBAZWxzZSBpZiAkZGlyZWN0aW9uID09IHJpZ2h0IHtcclxuXHRcdGJvcmRlci10b3AgICAgOiAkc2lkZS1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLWJvdHRvbSA6ICRzaWRlLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItbGVmdCAgIDogJHNpemUgc29saWQgJGNvbG9yO1xyXG5cdFx0cmlnaHQgICAgICAgICA6ICRvZmZzZXQ7XHJcblx0XHRAaWYgJGNlbnRlciB7XHJcblx0XHRcdG1hcmdpbi10b3A6IDUwJTtcclxuXHRcdFx0dG9wOiAtJHNpZGUtc2l6ZTtcclxuXHRcdH1cclxuXHR9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gbGVmdCB7XHJcblx0XHRib3JkZXItdG9wICAgIDogJHNpZGUtc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdGJvcmRlci1ib3R0b20gOiAkc2lkZS1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLXJpZ2h0ICA6ICRzaXplIHNvbGlkICRjb2xvcjtcclxuXHRcdGxlZnQgICAgICAgICAgOiAkb2Zmc2V0O1xyXG5cdFx0QGlmICRjZW50ZXIge1xyXG5cdFx0XHRtYXJnaW4tdG9wOiA1MCU7XHJcblx0XHRcdHRvcDogLSRzaWRlLXNpemU7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDExLiDQmtC90L7Qv9C60LAg0LfQsNC60YDRi9GC0YxcclxuQG1peGluIGxpYi1jbG9zZShcclxuXHQkdG9wOiA4cHgsXHJcblx0JHJpZ2h0OiA4cHhcclxuKSB7XHJcblx0cG9zaXRpb24gIDogYWJzb2x1dGU7XHJcblx0dG9wICAgICAgIDogJHRvcDtcclxuXHRyaWdodCAgICAgOiAkcmlnaHQ7XHJcblx0ei1pbmRleCAgIDogMTtcclxuXHJcblx0Y3Vyc29yICAgIDogcG9pbnRlcjtcclxuXHRjb2xvciAgICAgOiAkbGliLWNvbG9yLWNsb3NlO1xyXG5cdGZvbnQtc2l6ZSA6IGxpYi1mb250LXNpemUoZTIpO1xyXG5cdCY6aG92ZXIge1xyXG5cdFx0Y29sb3IgICAgIDogJGxpYi1jb2xvci1jbG9zZS1ob3ZlcjtcclxuXHR9XHJcblx0JjphZnRlciB7XHJcblx0XHRjb250ZW50IDogJ1xcZjA1Nyc7XHJcblxyXG5cdFx0QGluY2x1ZGUgbGliLWZvbnQtaWNvbjtcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIsIi8v0JjQvNC/0L7RgNGCINGE0LDQudC70L7QslxyXG5AaW1wb3J0ICdmdW5jdGlvbnMnO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcImxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0L/QtdGA0LXQvNC10L3QvdGL0YUg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMS4g0J/QoNCV0KTQmNCa0KEg0JrQm9CQ0KHQodCe0JJcclxuJGxpYi1jbGFzcy1wcmVmaXg6ICdzdS0nO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAyLiDQn9CQ0JvQmNCi0KDQkFxyXG4kbGliLXBhbGV0dGU6IChcclxuXHRwcmltYXJ5LWRhcmtlcjogICAgICAgICAgICAgIzIzMjMyMywvLzM1ICAzNSAgMzVcclxuXHRwcmltYXJ5LWRhcms6ICAgICAgICAgICAgICAgIzcxNzE3MSwvLzExMyAxMTMgMTEzXHJcblx0cHJpbWFyeS1iYXNlLWRhcms6ICAgICAgICAgICNhOGE4YTgsLy8xNjggMTY4IDE2OFxyXG5cdHByaW1hcnktYmFzZTogICAgICAgICAgICAgICAjY2NjY2NjLC8vMjA0IDIwNCAyMDRcclxuXHRwcmltYXJ5LWJhc2UtbGlnaHQ6ICAgICAgICAgI2UzZTNlMywvLzIyNyAyMjcgMjI3XHJcblx0cHJpbWFyeS1saWdodDogICAgICAgICAgICAgICNlY2VjZWMsLy8yMzYgMjM2IDIzNlxyXG5cdHByaW1hcnktbGlnaHRlcjogICAgICAgICAgICAjZmZmZmZmLC8vMjU1IDI1NSAyNTVcclxuXHJcblx0c2Vjb25kYXJ5LWRhcms6ICAgICAgICAgICAgICM2NjMzMzMsLy8xMDIgNTEgIDUxXHJcblx0c2Vjb25kYXJ5LXZpc2l0ZWQ6ICAgICAgICAgICM3YzNlZDcsLy8xMjQgNjIgIDIxNVxyXG5cdHNlY29uZGFyeS1hY2NlbnQtZGFyazogICAgICAjNjhhMjJlLC8vMTA0IDE2MiA0NlxyXG5cdHNlY29uZGFyeS1hY2NlbnQ6ICAgICAgICAgICAjOTdjYjYzLC8vMTUxIDIwMyA5OVxyXG5cdHNlY29uZGFyeS1hY2NlbnQtbGlnaHQ6ICAgICAjOTVmZjJlLC8vMTQ5IDI1NSA0NlxyXG5cdHNlY29uZGFyeS1iYXNlOiAgICAgICAgICAgICAjMDU1OWJjLC8vNSAgIDg5IDE4OFxyXG5cdHNlY29uZGFyeS1saWdodDogICAgICAgICAgICAjMDBhZmYyLC8vMCAgIDE3NSAyNDJcclxuXHJcblx0YWNjZW50LWRhcmtlcjogICAgICAgICAgICAgICM1YjUwNDMsLy85MSAgODAgIDY3XHJcblx0YWNjZW50LWRhcms6ICAgICAgICAgICAgICAgICNhMjdhNGEsLy8xNjIgMTIyIDc0XHJcblx0YWNjZW50LWJhc2UtZGFyazogICAgICAgICAgICNjOThkMDMsLy8yMDEgMTQxIDNcclxuXHRhY2NlbnQtYmFzZTogICAgICAgICAgICAgICAgI2ZmYjQwOSwvLzI1NSAxODAgOVxyXG5cdGFjY2VudC1iYXNlLWJyaWdodDogICAgICAgICAjZmY5MDAwLC8vMjU1IDE0NCA5XHJcblx0YWNjZW50LWJhc2UtbGlnaHQ6ICAgICAgICAgICNmYmY3YmIsLy8yNTEgMjQ3IDE4N1xyXG5cdGFjY2VudC1saWdodDogICAgICAgICAgICAgICAjZmZmY2Q2LC8vMjU1IDI1MiAyMTRcclxuXHRhY2NlbnQtbGlnaHRlcjogICAgICAgICAgICAgI2ZmZmNlYiwvLzI1NSAyNTIgMjM1XHJcblxyXG5cdC8v0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQtSDRhtCy0LXRgtCwINC00LvRjyDQv9C+0LvRjyDRhNC+0YDQvNGLINC/0L7QuNGB0LrQsCDQsiDRiNCw0L/QutC1XHJcblx0Ym9yZGVyLWlucHV0LWRhcms6ICAgICAgICAgICM4Y2EzYWUsLy8xNDAgMTYzIDE3NFxyXG5cdGJvcmRlci1pbnB1dC1iYXNlOiAgICAgICAgICAjYTBiNGJlLC8vMTYwIDE4MCAxOTBcclxuXHRib3JkZXItaW5wdXQtbGlnaHQ6ICAgICAgICAgI2I2YzhkMSwvLzE4MiAyMDAgMjA5XHJcblxyXG5cdC8v0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQtSDRhtCy0LXRgtCwINC00LvRjyDQutC90L7Qv9C+0Log0YHQvtGGLtGB0LXRgtC10LlcclxuXHRiYWNrZ3JvdW5kLXZrOiAgICAgICAgICAgICAgIzUzN2NhNiwvLzgzIDEyNCAxNjZcclxuXHRiYWNrZ3JvdW5kLWZiOiAgICAgICAgICAgICAgIzRlNmFiYSwvLzc4IDEwNiAxODZcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMy4g0KLQntCn0JrQmCDQn9CV0KDQldCa0JvQrtCn0JXQndCY0K9cclxuJGxpYi1icmVha3BvaW50czogKFxyXG5cdG5vcm1hbDogJzEyMDBweCcsLy9TaXRlLXdpZHRoIDExNzBcclxuXHRuYXJyb3c6ICc5OTJweCcsLy8gU2l0ZS13aWR0aCA5NzBcclxuXHRtb2JpbGU6ICc3NjhweCcsLy8gU2l0ZS13aWR0aCA3NTBcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gNC4g0KjQmNCg0JjQndCQINCh0JDQmdCi0JBcclxuJGxpYi13aWR0aC1jb250YWluZXItbm9ybWFsIDogMTE3MHB4O1xyXG4kbGliLXdpZHRoLWNvbnRhaW5lci1uYXJyb3cgOiA5NzBweDtcclxuJGxpYi13aWR0aC1jb250YWluZXItbW9iaWxlIDogNzUwcHg7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDUuICDQqNCg0JjQpNCiXHJcbi8vIDUuMSDQodC10LzQtdC50YHRgtCy0L4g0YjRgNC40YTRgtCwXHJcbiRsaWItZm9udC1mYW1pbHkgOiBPcGVuU2Fuc1JlZ3VsYXIsIHNhbnMtc2VyaWY7XHJcblxyXG4vLyA1LjIg0KDQsNC30LzQtdGAINGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtc2l6ZSA6IDE2cHg7XHJcblxyXG4kbGliLXR5cGUtc2NhbGUgOiAoXHJcblx0XHQtNTogMC42ODhyZW0sIC8vICAgIDE2cHggLT4gMTFweFxyXG5cdFx0LTQ6IDAuNzVyZW0sIC8vICAgICAxNnB4IC0+IDEycHggICAgc21hbGxlciB0ZXh0ICAgIC9zbWFsbGVyIHN1YmhlYWRpbmdcclxuXHRcdC0zOiAwLjgxNXJlbSwgLy8gICAgMTZweCAtPiAxM3B4ICAgIHNtYWxsIHRleHRcclxuXHRcdC0yOiAwLjg3NXJlbSwgLy8gICAgMTZweCAtPiAxNHB4ICAgIG5vcm1hbCB0ZXh0ICAgICAvc21hbGwgc3ViaGVhZGluZ1xyXG5cdFx0LTE6IDAuOTM4cmVtLCAvLyAgICAxNnB4IC0+IDE1cHhcclxuXHRcdDA6IDFyZW0sIC8vICAgICAgICAgMTZweCAtPiAxNnB4ICAgIGJpZyB0ZXh0ICAgICAgICAvc21hbGwgaGVhZGluZ1xyXG5cdFx0MTogMS4xMjVyZW0sIC8vICAgICAxNnB4IC0+IDE4cHggICAgdmVyeSBiaWcgdGV4dCAgIC9oZWFkaW5nXHJcblx0XHQyOiAxLjM3NXJlbSwgLy8gICAgIDE2cHggLT4gMjJweCAgICAgICAgICAgICAgICAgICAgL2JpZyBoZWFkaW5nXHJcblx0XHQzOiAxLjg3NXJlbSwgLy8gICAgIDE2cHggLT4gMzBweCAgICAgICAgICAgICAgICAgICAgL21haW4gaGVhZGluZ1xyXG5cdFx0NDogMS44NzVyZW0sIC8vICAgICAxNnB4IC0+IDMwcHggICAgICAgICAgICAgICAgICAgIC9tYWluIGhlYWRpbmdcclxuXHJcblx0XHQvL0V4dGVuZCBmb250c1xyXG5cdFx0ZTA6IDEuMDYzcmVtLCAvLyAgICAxNnB4IC0+IDE3cHhcclxuXHRcdGUxOiAxLjE4OHJlbSwgLy8gICAgMTZweCAtPiAxOXB4XHJcblx0XHRlMjogMS4yNXJlbSwgLy8gICAgIDE2cHggLT4gMjBweFxyXG5cdFx0ZTM6IDEuNjg4cmVtLCAvLyAgICAxNnB4IC0+IDI3cHhcclxuXHRcdGU0OiAyLjEyNXJlbSAvLyAgICAgMTZweCAtPiAzNHB4XHJcbik7XHJcblxyXG4kbGliLWZvbnQtc2l6ZS1iYXNlIDogbGliLWZvbnQtc2l6ZSgwKTtcclxuJGxpYi1mb250LXNpemUtaW5wdXQgOiBsaWItZm9udC1zaXplKC0yKTtcclxuXHJcbi8vIDUuMyDQndCw0YHRi9GJ0LXQvdC90L7RgdGC0Ywg0YjRgNC40YTRgtCwXHJcbiRsaWItZm9udC13ZWlnaHQtbm9ybWFsOiA0MDA7XHJcbiRsaWItZm9udC13ZWlnaHQtYm9sZDogNzAwO1xyXG5cclxuLy8gNS40INCm0LLQtdGCINGI0YDQuNGE0YLQvtCyXHJcbiRsaWItY29sb3ItbWFpbi10aXRsZSA6IGxpYi1jb2xvcihhY2NlbnQtYmFzZSk7XHJcbiRsaWItY29sb3ItYmlnLXRpdGxlIDogbGliLWNvbG9yKHNlY29uZGFyeS1kYXJrKTtcclxuJGxpYi1jb2xvci10aXRsZSA6IGxpYi1jb2xvcihzZWNvbmRhcnktZGFyayk7XHJcbiRsaWItY29sb3ItdGV4dCA6IGxpYi1jb2xvcihwcmltYXJ5LWRhcmtlcik7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDYuICDQodCi0KDQntCa0JBcclxuLy8gNi4xINCS0YvRgdC+0YLQsCDRgdGC0YDQvtC60LhcclxuJGxpYi1saW5lLWhlaWdodC1iYXNlIDogKCRsaWItZm9udC1zaXplLWJhc2UgKiAxLjI1KTtcclxuXHJcbiRsaWItbGluZS1oZWlnaHRzIDogKFxyXG5cdFx0LTU6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC00OiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtMzogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0LTI6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC0xOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQwOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQxOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4xMjUpLFxyXG5cdFx0MjogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMzc1KSxcclxuXHRcdDM6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjg3NSksXHJcblxyXG5cdFx0Ly9FeHRlbmQgbGluZXNcclxuXHRcdGUwOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4wNjMpLFxyXG5cdFx0ZTE6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjE4OCksXHJcblx0XHRlMjogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMjUpXHJcbik7XHJcblxyXG4vLyA2LjIg0JLQtdGA0YXQvdC40Lkg0L7RgtGB0YPQvyDRgdGC0YDQvtC60LhcclxuJGxpYi1wYWRkaW5nLXRvcC1iYXNlIDogJGxpYi1mb250LXNpemUtYmFzZSAqIDEuMjU7XHJcblxyXG4kbGliLXBhZGRpbmctdG9wIDogKFxyXG5cdFx0LTU6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuNjg4LFxyXG5cdFx0LTQ6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuNzUsXHJcblx0XHQtMzogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC44MTUsXHJcblx0XHQtMjogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC44NzUsXHJcblx0XHQtMTogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC45MzgsXHJcblx0XHQwOiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAxLFxyXG5cdFx0MTogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMS4xMjUsXHJcblx0XHQyOiAoJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMS4zNzUpLFxyXG5cdFx0MzogKCRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuODc1KVxyXG4pO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA3LiDQn9Cw0YDQsNC80LXRgtGA0Ysgei3QvtGB0LhcclxuJGxpYi16LWluZGV4ZXM6IChcclxuXHRcdFwid3JhcHBlci1tb2JpbGUtYWZ0ZXJcIiwvL9C00LvRjyDQsdC70L7QutCwINC/0LXRgNC10LrRgNGL0LLQsNGO0YnQtdCz0L4gd3JhcHBlciDQv9GA0Lgg0L7RgtC60YDRi9GC0L7QvCDQvNC10L3RjlxyXG5cdFx0XCJtb2RhbFwiLFxyXG5cdFx0XCJmaXhlZFwiLFxyXG5cdFx0XCJoZWFkZXItYmFza2V0XCIsXHJcblx0XHRcImhlYWRlci1jb250cm9sXCIsXHJcblx0XHRcImhlYWRlci1iYW5uZXJcIixcclxuXHRcdFwiaGVhZGVyLWluZm9cIixcclxuXHRcdFwiaGVhZGVyXCIsXHJcblx0XHRcImFzaWRlXCIsXHJcblx0XHRcInBhZ2VcIixcclxuXHRcdFwiZm9vdGVyXCJcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIiwiLy8g0KTQo9Cd0JrQptCY0JhcclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcImxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0YTRg9C90LrRhtC40Lkg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLyAxLiDQn9C+0LvRg9GH0LjRgtGMINC60LvQsNGB0YEuXHJcbkBmdW5jdGlvbiBsaWItZ2V0LWNsYXNzKCRjbGFzcy1uYW1lKSB7XHJcblx0QHJldHVybiAnLicgKyAkbGliLWNsYXNzLXByZWZpeCArICRjbGFzcy1uYW1lO1xyXG59XHJcblxyXG4vLyAyLiDQn9C+0LvRg9GH0LjRgtGMINC60LvQsNGB0YEt0LzQvtC00LjRhNC40LrQsNGC0L7RgC5cclxuQGZ1bmN0aW9uIGxpYi1nZXQtbW9kaWZpZXIoJG1vZGlmaWVyLW5hbWUpIHtcclxuXHRAcmV0dXJuICcuXycgKyAkbGliLWNsYXNzLXByZWZpeCArICRtb2RpZmllci1uYW1lO1xyXG59XHJcblxyXG4vLyAzLiDQn9C+0LvRg9GH0LjRgtGMINC30L3QsNGH0LXQvdC40LUg0LjQtyDQvNCw0YHQuNCy0LAgKG1hcCkuXHJcbkBmdW5jdGlvbiBsaWItdmFsKCRtYXAsICRrZXkpIHtcclxuXHRAaWYgbWFwLWhhcy1rZXkoJG1hcCwgJGtleSkge1xyXG5cdFx0QHJldHVybiBtYXAtZ2V0KCRtYXAsICRrZXkpO1xyXG5cdH0gQGVsc2Uge1xyXG5cdFx0QHdhcm4gXCJVbmtub3duIGAjeyRrZXl9YCBpbiBgI3skbWFwfWAuXCI7XHJcblx0XHRAcmV0dXJuIG51bGw7XHJcblx0fVxyXG59XHJcblxyXG4vLyA0LiDQn9C+0LvRg9GH0LjRgtGMINGG0LLQtdGCXHJcbkBmdW5jdGlvbiBsaWItY29sb3IoJGtleSkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLXBhbGV0dGUsICRrZXkpO1xyXG59XHJcblxyXG4vLyA1LiDQn9C+0LvRg9GH0LjRgtGMINGC0L7Rh9C60YMg0L/QtdGA0LXQutC70Y7Rh9C10L3QuNGPXHJcbkBmdW5jdGlvbiBsaWItYnJlYWtwb2ludHMoJGtleSkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLWJyZWFrcG9pbnRzLCAka2V5KTtcclxufVxyXG5cclxuLy8gNi4g0J/QvtC70YPRh9C40YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwXHJcbkBmdW5jdGlvbiBsaWItZm9udC1zaXplKCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLXR5cGUtc2NhbGUsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDcuINCf0L7Qu9GD0YfQuNGC0Ywg0LLRi9GB0L7RgtGDINGB0YLRgNC+0LrQuFxyXG5AZnVuY3Rpb24gbGliLWxpbmUtaGVpZ2h0KCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbWFwLWdldCgkbGliLWxpbmUtaGVpZ2h0cywgJGxldmVsKTtcclxufVxyXG5cclxuLy8gOC4g0J/QvtC70YPRh9C40YLRjCDQstC10YDRhdC90LjQuSDQvtGC0YHRgtGD0L8g0YHRgtGA0L7QutC4XHJcbkBmdW5jdGlvbiBsaWItbGluZS10b3AoJGxldmVsKSB7XHJcblx0QHJldHVybiBtYXAtZ2V0KCRsaWItcGFkZGluZy10b3AsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDkuINCf0L7Qu9GD0YfQuNGC0Ywg0YDQsNC30LzQtdGJ0LXQvdC40LUg0L/QviB6LdC+0YHQuFxyXG5AZnVuY3Rpb24gbGliLXooJG5hbWUpIHtcclxuXHRAaWYgaW5kZXgoJGxpYi16LWluZGV4ZXMsICRuYW1lKSB7XHJcblx0XHRAcmV0dXJuIChsZW5ndGgoJGxpYi16LWluZGV4ZXMpIC0gaW5kZXgoJGxpYi16LWluZGV4ZXMsICRuYW1lKSkgKyAxO1xyXG5cdH0gQGVsc2Uge1xyXG5cdFx0QHdhcm4gJ1RoZXJlIGlzIG5vIGl0ZW0gXCIjeyRuYW1lfVwiIGluIHRoaXMgbGlzdDsgY2hvb3NlIG9uZSBvZjogI3skbGliLXotaW5kZXhlc30nO1xyXG5cdFx0QHJldHVybiBudWxsO1xyXG5cdH1cclxufSIsIi8vINCX0JDQn9Ce0JvQndCY0KLQldCb0JhcclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcIiVsaWItXCIg0LIg0L3QsNGH0LDQu9C1INC30LDQv9C+0LvQvdC40YLQtdC70LXQuSDRjdGC0L7Qs9C+INGE0LDQudC70LBcclxuXHJcbiVsaWItY2xlYXJmaXgge1xyXG5cclxuXHQmOmJlZm9yZSxcclxuXHQmOmFmdGVyIHtcclxuXHRcdGNvbnRlbnQgOiAnICc7XHJcblx0XHRkaXNwbGF5IDogdGFibGU7XHJcblx0fVxyXG5cclxuXHQmOmFmdGVyIHtcclxuXHRcdGNsZWFyIDogYm90aDtcclxuXHR9XHJcblxyXG59IiwiLy8g0JLQkNCW0J3QniEhIVxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwibWl4LVwiINCyINC90LDRh9Cw0LvQtSDQv9C10YDQtdC80LXQvdC90YvRhSDQuCDQv9GA0LjQvNC10YHQtdC5INGN0YLQvtCz0L4g0YTQsNC50LvQsFxyXG5cclxuLy8g0JIg0Y3RgtC+0YIg0YTQsNC50Lsg0LLRi9C90LXRgdC10L3RiyDQvtCx0YnQuNC1INGB0YLQuNC70Lgg0YHRgtGA0LDQvdC40YYsINC60L7RgtC+0YDRi9C1INC90LUg0LzQvtCz0YPRgiDQsdGL0YLRjCDQtNC+0LHQsNCy0LvQtdC90YtcclxuLy8g0LIg0LHQuNCx0LvQuNC+0YLQtdC60YMgKNC+0YLQvdC+0YHRj9GC0YHRjyDRgtC+0LvRjNC60L4g0Log0YLQtdC60YPRidC10LzRgyDQv9GA0L7QtdC60YLRgylcclxuXHJcbi8vINCm0LLQtdGC0LBcclxuJG1peC1jb2xvci1mb290ZXItdGl0bGUgOiBsaWItY29sb3IocHJpbWFyeS1saWdodGVyKTtcclxuJG1peC1iZy1jb21tZW50cy1saXN0IDogbGliLWNvbG9yKHByaW1hcnktbGlnaHRlcik7XHJcbiRtaXgtYmctanNwLXZlcnRpY2FsLWJhciA6IGxpYi1jb2xvcihwcmltYXJ5LWxpZ2h0ZXIpO1xyXG4kbWl4LWJnLWpzcC1kcmFnIDogbGliLWNvbG9yKHByaW1hcnktbGlnaHRlcik7XHJcbiRtaXgtYmctcGVyc29uYWwtb2ZmZXIgOiB0cmFuc3BhcmVudDtcclxuJG1peC1jb2xvci1ib3JkZXItanNwLXZlcnRpY2FsLWJhciA6IGxpYi1jb2xvcihwcmltYXJ5LWJhc2UpO1xyXG4kbWl4LWNvbG9yLWJvcmRlci1qc3AtZHJhZyA6IGxpYi1jb2xvcihwcmltYXJ5LWJhc2UpO1xyXG4kbWl4LWNvbG9yLWJvcmRlci1uZXctcHJpY2UgOiBsaWItY29sb3IocHJpbWFyeS1iYXNlLWxpZ2h0KTtcclxuJG1peC1jb2xvci1ib3JkZXItaW1nIDogbGliLWNvbG9yKHByaW1hcnktYmFzZS1saWdodCk7XHJcbiRtaXgtY29sb3ItYm9yZGVyLXBlcnNvbmFsLW9mZmVyLWltZyA6IGxpYi1jb2xvcihwcmltYXJ5LWJhc2UtbGlnaHQpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vINCa0LvQsNGB0YHRi1xyXG4kbWl4LXRpbGUgOiBsaWItZ2V0LWNsYXNzKCd0aWxlJyk7XHJcbiRtaXgtb2ZmZXIgOiBsaWItZ2V0LWNsYXNzKCdvZmZlcicpO1xyXG4kbWl4LW9mZmVyLWRlc2NyaXB0aW9uIDogbGliLWdldC1jbGFzcygnb2ZmZXItZGVzY3JpcHRpb24nKTtcclxuJG1peC1vZmZlci10aXRsZSA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLXRpdGxlJyk7XHJcbiRtaXgtb2ZmZXItdGV4dCA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLXRleHQnKTtcclxuJG1peC1vZmZlci1hbm5vdGF0aW9uIDogbGliLWdldC1jbGFzcygnb2ZmZXItYW5ub3RhdGlvbicpO1xyXG4kbWl4LW9mZmVyLW5ldy1wcmljZSA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLW5ldy1wcmljZScpO1xyXG4kbWl4LW9mZmVyLW9sZC1wcmljZSA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLW9sZC1wcmljZScpO1xyXG4kbWl4LW9mZmVyLXByaWNlIDogbGliLWdldC1jbGFzcygnb2ZmZXItcHJpY2UnKTtcclxuJG1peC1vZmZlci1idXR0b24gOiBsaWItZ2V0LWNsYXNzKCdvZmZlci1idXR0b24nKTtcclxuJG1peC1saW5rLWltZyA6IGxpYi1nZXQtY2xhc3MoJ2xpbmstaW1nJyk7XHJcbiRtaXgtbGluay1idG4gOiBsaWItZ2V0LWNsYXNzKCdsaW5rLWJ0bicpO1xyXG4kbWl4LWxpc3QgOiBsaWItZ2V0LWNsYXNzKCdsaXN0Jyk7XHJcbiRtaXgtYmxvY2sgOiBsaWItZ2V0LWNsYXNzKCdibG9jaycpO1xyXG4kbWl4LXByZXZpZXcgOiBsaWItZ2V0LWNsYXNzKCdwcmV2aWV3Jyk7XHJcbiRtaXgtcmF0aW5nIDogbGliLWdldC1jbGFzcygncmF0aW5nJyk7XHJcbiRtaXgtZGV0YWlsIDogbGliLWdldC1jbGFzcygnZGV0YWlsJyk7XHJcbiRtaXgtc29jaWFsLWxpbmtzIDogbGliLWdldC1jbGFzcygnc29jaWFsLWxpbmtzJyk7XHJcbiRtaXgtc29jaWFsLWxpbmsgOiBsaWItZ2V0LWNsYXNzKCdzb2NpYWwtbGluaycpO1xyXG4kbWl4LWZyZWUtbWFpbCA6IGxpYi1nZXQtY2xhc3MoJ2ZyZWUtbWFpbCcpO1xyXG4kbWl4LXNsaWRlciA6IGxpYi1nZXQtY2xhc3MoJ3NsaWRlcicpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDEuINCe0LHRidC40LUg0L/QsNGA0LDQvNC10YLRgNGLINC60L7QvdGC0LXQvdGC0LBcclxuQG1peGluIG1peC1jb250ZW50LWNvbW1vbi1wYXJhbShcclxuXHQkcGFkZGluZy10b3A6IDIwcHgsXHJcblx0JHBhZGRpbmctYm90dG9tOiAxNXB4XHJcbikge1xyXG5cdHBvc2l0aW9uICA6IHJlbGF0aXZlO1xyXG5cdG1hcmdpbiAgICA6IDAgYXV0bztcclxuXHRwYWRkaW5nICAgOiAkcGFkZGluZy10b3AgNDBweCAkcGFkZGluZy1ib3R0b20gNDBweDtcclxuXHRtYXgtd2lkdGggOiAxMjgwcHg7XHJcblxyXG5cdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG5hcnJvdykge1xyXG5cdFx0cGFkZGluZy1yaWdodCA6IDIwcHg7XHJcblx0XHRwYWRkaW5nLWxlZnQgIDogMjBweDtcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gMi4g0J7QsdGJ0LjQtSDRgdGC0LjQu9C4INC00LvRjyDQv9C+0LLRgtC+0YDRj9GO0YnQuNGF0YHRjyDQv9GA0LDQstC40Lsg0L/Qu9C40YLQutC4XHJcbkBtaXhpbiBtaXgtcmVzcG9uZC1ub3JtYWwtdGlsZS1jb21tb24oKSB7XHJcblx0I3skbWl4LXRpbGV9X2xpc3QjeyRtaXgtbGlzdH0ge1xyXG5cdFx0I3skbWl4LWxpc3R9X2l0ZW0ge1xyXG5cdFx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhub3JtYWwpIHtcclxuXHRcdFx0XHRAaW5jbHVkZSBsaWItYm94MTIoNCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbkBtaXhpbiBtaXgtcmVzcG9uZC1uYXJyb3ctdGlsZS1jb21tb24oKSB7XHJcblx0I3skbWl4LXRpbGV9X2xpc3QjeyRtaXgtbGlzdH0ge1xyXG5cdFx0I3skbWl4LWxpc3R9X2l0ZW0ge1xyXG5cdFx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhuYXJyb3cpIHtcclxuXHRcdFx0XHQjeyRtaXgtbGlzdH1fb2ZmZXIjeyRtaXgtb2ZmZXJ9IHtcclxuXHRcdFx0XHRcdHBhZGRpbmctYm90dG9tIDogNzVweDtcclxuXHRcdFx0XHRcdCN7JG1peC1vZmZlcn1fcHJldmlldyN7JG1peC1wcmV2aWV3fSB7XHJcblx0XHRcdFx0XHRcdCN7JG1peC1wcmV2aWV3fV9saW5rI3skbWl4LWxpbmstaW1nfSB7XHJcblx0XHRcdFx0XHRcdFx0QGluY2x1ZGUgbGliLWxpbmstaW1nLXBhcmFtKFxyXG5cdFx0XHRcdFx0XHRcdFx0JGhlaWdodCA6IDE1MHB4XHJcblx0XHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0I3skbWl4LW9mZmVyLWRlc2NyaXB0aW9ufSB7XHJcblx0XHRcdFx0XHRcdCZfY29udGFpbmVyIHtcclxuXHRcdFx0XHRcdFx0XHQjeyRtaXgtb2ZmZXItdGl0bGV9I3skbWl4LWJsb2NrfSB7XHJcblx0XHRcdFx0XHRcdFx0XHRtYXJnaW4tdG9wIDogLTQwcHg7XHJcblx0XHRcdFx0XHRcdFx0XHRoZWlnaHQgICAgIDogNDBweDtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0I3skbWl4LW9mZmVyLWFubm90YXRpb259IHtcclxuXHRcdFx0XHRcdFx0XHRcdGhlaWdodCAgICAgOiAzNXB4O1xyXG5cdFx0XHRcdFx0XHRcdFx0bWFyZ2luLXRvcCA6IDRweDtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0I3skbWl4LW9mZmVyLW9sZC1wcmljZX0ge1xyXG5cdFx0XHRcdFx0XHRcdG1hcmdpbi10b3AgOiAwO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdCN7JG1peC1vZmZlci1wcmljZX0ge1xyXG5cdFx0XHRcdFx0XHRcdHJpZ2h0ICAgICAgOiBhdXRvO1xyXG5cdFx0XHRcdFx0XHRcdGJvdHRvbSAgICAgOiAtMjBweDtcclxuXHRcdFx0XHRcdFx0XHR3aWR0aCAgICAgIDogMTM0cHg7XHJcblxyXG5cdFx0XHRcdFx0XHRcdHRleHQtYWxpZ24gOiBjZW50ZXI7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0I3skbWl4LW9mZmVyLWJ1dHRvbn0ge1xyXG5cdFx0XHRcdFx0XHRcdHJpZ2h0ICAgICAgOiAwO1xyXG5cdFx0XHRcdFx0XHRcdGJvdHRvbSAgICAgOiAtNjFweDtcclxuXHRcdFx0XHRcdFx0XHR3aWR0aCAgICAgIDogMTM0cHg7XHJcblxyXG5cdFx0XHRcdFx0XHRcdHRleHQtYWxpZ24gOiBjZW50ZXI7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gMy4g0J/QtdGA0LXQvtC/0YDQtdC00LXQu9C10L3QuNC1INGB0YLQuNC70LXQuSDQv9C00LDQs9C40L3QsCBcImpzY3JvbGxwYW5lXCJcclxuQG1peGluIG1peC1vdmVycmlkZS1qc2Nyb2xscGFuZShcclxuXHQkYWZ0ZXItaGVpZ2h0OiA0NXB4LFxyXG5cdCRiZWZvcmUtaGVpZ2h0OiA0NXB4XHJcbikge1xyXG5cdCR3aWR0aC12ZXJ0aWNhbC1iYXIgOiAxNHB4O1xyXG5cdCRvZmZzZXQtY29udGFpbmVyLXBzZXVkbyA6ICR3aWR0aC12ZXJ0aWNhbC1iYXIgKyAzO1xyXG5cdC8v0LrQu9Cw0YHRgdGLINC/0LvQsNCz0LjQvdCwIFwianNjcm9sbHBhbmVcIlxyXG5cdC5qc3BDb250YWluZXIge1xyXG5cdFx0JjpiZWZvcmUsXHJcblx0XHQmOmFmdGVyIHtcclxuXHRcdFx0Y29udGVudCAgOiAnJztcclxuXHRcdFx0cG9zaXRpb24gOiBhYnNvbHV0ZTtcclxuXHRcdFx0bGVmdCAgICAgOiAwO1xyXG5cdFx0XHR3aWR0aCAgICA6IDEwMCU7XHJcblx0XHRcdHotaW5kZXggIDogMjtcclxuXHRcdH1cclxuXHRcdCY6YmVmb3JlIHtcclxuXHRcdFx0dG9wICAgICAgICA6IDA7XHJcblx0XHRcdGhlaWdodCAgICAgOiAkYmVmb3JlLWhlaWdodDtcclxuXHJcblx0XHRcdGJhY2tncm91bmQgOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSksICNmZmZmZmYsICNmZmZmZmYpO1xyXG5cdFx0fVxyXG5cdFx0JjphZnRlciB7XHJcblx0XHRcdGJvdHRvbSAgICAgOiAwO1xyXG5cdFx0XHRoZWlnaHQgICAgIDogJGFmdGVyLWhlaWdodDtcclxuXHJcblx0XHRcdGJhY2tncm91bmQgOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSksICNmZmZmZmYsICNmZmZmZmYpO1xyXG5cdFx0fVxyXG5cdFx0Ly/QlNC+0LHQsNCy0LvQtdC90L3Ri9C5INC80L7QtNC40YTQuNC60LDRgtC+0YAg0LTQu9GPINC+0YLRgdC70LXQttC40LLQsNC90LjRjyDQstC10YDRgtC40LrQsNC70YzQvdC+0Lkg0L/QvtC70L7RgdGLINC/0YDQvtC60YDRg9GC0LrQuFxyXG5cdFx0Ji5fanNwT2Zmc2V0IHtcclxuXHRcdFx0JjphZnRlcixcclxuXHRcdFx0JjpiZWZvcmUge1xyXG5cdFx0XHRcdGxlZnQgOiAtICRvZmZzZXQtY29udGFpbmVyLXBzZXVkbztcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0LmpzcFBhbmUge1xyXG5cdFx0XHRtaW4taGVpZ2h0IDogMTAwJTtcclxuXHJcblx0XHRcdGJhY2tncm91bmQgOiAkbWl4LWJnLWNvbW1lbnRzLWxpc3Q7XHJcblx0XHR9XHJcblx0XHQuanNwVmVydGljYWxCYXIge1xyXG5cdFx0XHR3aWR0aCAgICAgICAgIDogJHdpZHRoLXZlcnRpY2FsLWJhcjtcclxuXHRcdFx0ei1pbmRleCAgICAgICA6IDM7XHJcblxyXG5cdFx0XHRiYWNrZ3JvdW5kICAgIDogJG1peC1iZy1qc3AtdmVydGljYWwtYmFyO1xyXG5cdFx0XHRib3JkZXIgICAgICAgIDogMXB4IHNvbGlkICRtaXgtY29sb3ItYm9yZGVyLWpzcC12ZXJ0aWNhbC1iYXI7XHJcblx0XHRcdGJvcmRlci1yYWRpdXMgOiAzcHg7XHJcblx0XHRcdC5qc3BUcmFjayB7XHJcblx0XHRcdFx0YmFja2dyb3VuZCA6IHRyYW5zcGFyZW50O1xyXG5cdFx0XHRcdC5qc3BEcmFnIHtcclxuXHRcdFx0XHRcdGJhY2tncm91bmQgICAgOiAkbWl4LWJnLWpzcC1kcmFnIHVybCguLi8uLi9pbWcvc2Nyb2xsYmFyL3Njcm9sbGJhci5wbmcpIGNlbnRlciBjZW50ZXIgbm8tcmVwZWF0O1xyXG5cdFx0XHRcdFx0Ym9yZGVyICAgICAgICA6IDFweCBzb2xpZCAkbWl4LWNvbG9yLWJvcmRlci1qc3AtZHJhZztcclxuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXMgOiAzcHg7XHJcblx0XHRcdFx0XHRjdXJzb3IgICAgICAgIDogcG9pbnRlcjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gNC4g0J/QsNGA0LDQvNC10YLRgNGLINGN0LvQtdC80LXQvdGC0L7QsiDRj9GH0LXRh9C10LXQuiDQv9C+0LTQstCw0LvQsFxyXG4vLyA0LjEg0JfQsNCz0L7Qu9C+0LLQutC4XHJcbkBtaXhpbiBtaXgtZm9vdGVyLXRpdGxlKCkge1xyXG5cdGNvbG9yICAgICAgIDogJG1peC1jb2xvci1mb290ZXItdGl0bGU7XHJcblx0Zm9udC1mYW1pbHkgOiAnT3BlblNhbnNCb2xkJztcclxuXHRmb250LXNpemUgICA6IGxpYi1mb250LXNpemUoLTIpO1xyXG59XHJcblxyXG4vLyA0LjIg0KHQv9C40YHQutC4XHJcbkBtaXhpbiBtaXgtZm9vdGVyLWxpc3QoKSB7XHJcblx0bWFyZ2luLXRvcCA6IDEwcHg7XHJcblxyXG5cdGZvbnQtc2l6ZSAgOiBsaWItZm9udC1zaXplKC0yKTtcclxuXHQjeyRtaXgtbGlzdH1faXRlbSB7XHJcblx0XHRtYXJnaW4tdG9wIDogNXB4O1xyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyA1LiDQntCx0YnQuNC1INGB0YLQuNC70Lgg0LTQu9GPINCy0YXQvtC00LAv0YDQtdCz0LjRgdGC0YDQsNGG0LjQuCDRh9C10YDQtdC3XHJcbi8vINGB0L7Rhi7RgdC10YLQuCDQvdCwINCy0YLQvtGA0L7QvCDRiNCw0LPQtSDQvtGE0L7RgNC80LXQu9C90LjRjyDQt9Cw0LrQsNC30LBcclxuQG1peGluIG1peC1jb21tb24tb3JkZXItc29jaWFsLWxpbmtzKCkge1xyXG5cdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG5hcnJvdykge1xyXG5cdFx0I3skbWl4LXNvY2lhbC1saW5rc31fdGl0bGUge1xyXG5cdFx0XHRkaXNwbGF5IDogYmxvY2s7XHJcblx0XHR9XHJcblx0XHQjeyRtaXgtc29jaWFsLWxpbmtzfV9saXN0I3skbWl4LWxpc3R9IHtcclxuXHRcdFx0bWFyZ2luLXRvcCA6IDIwcHg7XHJcblx0XHRcdCN7JG1peC1saXN0fV9pdGVtIHtcclxuXHRcdFx0XHQjeyRtaXgtc29jaWFsLWxpbmt9I3skbWl4LWxpbmstYnRufSB7XHJcblx0XHRcdFx0XHQjeyRtaXgtbGluay1idG59X2FkZGl0aW9uIHtcclxuXHRcdFx0XHRcdFx0ZGlzcGxheSA6IG5vbmU7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDYuINCe0LHRidC40LUg0YHRgtC40LvQuCDQtNC70Y8g0L/RgNC10LTQu9C+0LbQtdC90LjQuSDQvdCwINGB0YLRgNCw0L3QuNGG0LUg0YLQtdCz0LBcclxuLy8g0Lgg0YHRgtGA0LDQvdC40YbQtSDQv9GA0LXQtNC70L7QttC10L3QuNC5XHJcbkBtaXhpbiBtaXgtY29tbW9uLW9mZmVyKFxyXG5cdCRtYXJnaW4tdG9wOiAyMXB4XHJcbikge1xyXG5cdG1hcmdpbi10b3AgOiAkbWFyZ2luLXRvcDtcclxuXHJcblx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obm9ybWFsKSB7XHJcblx0XHRwYWRkaW5nLWJvdHRvbSA6IDg4cHg7XHJcblx0fVxyXG5cdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG5hcnJvdykge1xyXG5cdFx0cGFkZGluZy1ib3R0b20gOiA4NHB4O1xyXG5cdH1cclxuXHQjeyRtaXgtb2ZmZXJ9X3ByZXZpZXcjeyRtaXgtcHJldmlld30ge1xyXG5cdFx0I3skbWl4LXByZXZpZXd9X2xpbmsjeyRtaXgtbGluay1pbWd9IHtcclxuXHJcblx0XHRcdEBpbmNsdWRlIGxpYi1saW5rLWltZy1wYXJhbShcclxuXHRcdFx0XHQkYm9yZGVyIDogJG1peC1jb2xvci1ib3JkZXItaW1nXHJcblx0XHRcdCk7XHJcblx0XHRcdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG5vcm1hbCkge1xyXG5cdFx0XHRcdEBpbmNsdWRlIGxpYi1saW5rLWltZy1wYXJhbShcclxuXHRcdFx0XHRcdCRoZWlnaHQgOiAxODBweFxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblx0I3skbWl4LW9mZmVyLWRlc2NyaXB0aW9ufSB7XHJcblx0XHQjeyRtaXgtb2ZmZXItbmV3LXByaWNlfSB7XHJcblx0XHRcdHdpZHRoICAgICAgOiAzNjhweDtcclxuXHJcblx0XHRcdGJvcmRlci10b3AgOiAxcHggZG90dGVkICRtaXgtY29sb3ItYm9yZGVyLW5ldy1wcmljZTtcclxuXHRcdH1cclxuXHJcblx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhub3JtYWwpIHtcclxuXHRcdFx0I3skbWl4LW9mZmVyLWRlc2NyaXB0aW9ufV9jb250YWluZXIge1xyXG5cdFx0XHRcdGhlaWdodCA6IDEwOHB4O1xyXG5cdFx0XHRcdCN7JG1peC1vZmZlci10aXRsZX0jeyRtaXgtYmxvY2t9LFxyXG5cdFx0XHRcdCN7JG1peC1vZmZlci10ZXh0fSB7XHJcblx0XHRcdFx0XHRwYWRkaW5nLWxlZnQgOiAyMDBweFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHQmX3JhdGluZyN7JG1peC1yYXRpbmd9IHtcclxuXHRcdFx0XHRwb3NpdGlvbiA6IGFic29sdXRlO1xyXG5cdFx0XHRcdGJvdHRvbSAgIDogLTI1cHg7XHJcblx0XHRcdFx0bGVmdCAgICAgOiAyMDBweDtcclxuXHRcdFx0fVxyXG5cdFx0XHQjeyRtaXgtb2ZmZXItbmV3LXByaWNlfSN7JG1peC1kZXRhaWx9IHtcclxuXHRcdFx0XHRib3R0b20gOiAtNjNweDtcclxuXHRcdFx0XHRsZWZ0ICAgOiAyMDBweDtcclxuXHRcdFx0XHR3aWR0aCAgOiAzODhweDtcclxuXHRcdFx0fVxyXG5cdFx0XHQjeyRtaXgtb2ZmZXItYnV0dG9ufSN7JG1peC1ibG9ja30ge1xyXG5cdFx0XHRcdGJvdHRvbSA6IC03MHB4O1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhuYXJyb3cpIHtcclxuXHRcdFx0I3skbWl4LW9mZmVyLWRlc2NyaXB0aW9ufV9jb250YWluZXIge1xyXG5cdFx0XHRcdGhlaWdodCA6IDExMnB4O1xyXG5cdFx0XHR9XHJcblx0XHRcdCZfcmF0aW5nI3skbWl4LXJhdGluZ30ge1xyXG5cdFx0XHRcdGJvdHRvbSA6IC0yM3B4O1xyXG5cdFx0XHR9XHJcblx0XHRcdCN7JG1peC1vZmZlci1uZXctcHJpY2V9I3skbWl4LWRldGFpbH0ge1xyXG5cdFx0XHRcdGJvdHRvbSAgICAgIDogLTYycHg7XHJcblx0XHRcdFx0cGFkZGluZy10b3AgOiAxMnB4O1xyXG5cdFx0XHRcdHdpZHRoICAgICAgIDogMjc1cHg7XHJcblx0XHRcdH1cclxuXHRcdFx0I3skbWl4LW9mZmVyLWJ1dHRvbn0jeyRtaXgtYmxvY2t9IHtcclxuXHRcdFx0XHRib3R0b20gOiAtNzBweDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyA3LiDQntCx0YnQuNC1INGB0YLQuNC70Lgg0LTQu9GPINC/0L7QstGC0L7RgNGP0Y7RidC40YXRgdGPINC/0YDQsNCy0LjQuyDQsdC70L7QutCwIFwiZnJlZS1tYWlsXCJcclxuQG1peGluIG1peC1yZXNwb25kLW5vcm1hbC1mcmVlLW1haWwoKSB7XHJcblx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obm9ybWFsKSB7XHJcblx0XHR3aWR0aCA6IDYzMnB4O1xyXG5cdFx0I3skbWl4LWZyZWUtbWFpbH1fdGl0bGUge1xyXG5cdFx0XHRmb250LXNpemUgOiBsaWItZm9udC1zaXplKDApO1xyXG5cdFx0fVxyXG5cdFx0I3skbWl4LWZyZWUtbWFpbH1fZGVzY3JpcHRpb24ge1xyXG5cdFx0XHR3aWR0aCA6IDM0NHB4O1xyXG5cdFx0fVxyXG5cdFx0I3skbWl4LWZyZWUtbWFpbH1fdXNlci1kYXRhIHtcclxuXHRcdFx0d2lkdGggOiAyMzJweDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbkBtaXhpbiBtaXgtcmVzcG9uZC1uYXJyb3ctZnJlZS1tYWlsKCkge1xyXG5cdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG5hcnJvdykge1xyXG5cdFx0d2lkdGggOiA1MDhweDtcclxuXHRcdCN7JG1peC1mcmVlLW1haWx9X3RpdGxlIHtcclxuXHRcdFx0cGFkZGluZyAgIDogMCAxNXB4O1xyXG5cclxuXHRcdFx0Zm9udC1zaXplIDogbGliLWZvbnQtc2l6ZSgtMik7XHJcblx0XHR9XHJcblx0XHQjeyRtaXgtZnJlZS1tYWlsfV9kZXNjcmlwdGlvbiB7XHJcblx0XHRcdG1hcmdpbi1sZWZ0IDogMTVweDtcclxuXHRcdFx0d2lkdGggICAgICAgOiAyNTVweDtcclxuXHRcdH1cclxuXHRcdCN7JG1peC1mcmVlLW1haWx9X3VzZXItZGF0YSB7XHJcblx0XHRcdG1hcmdpbi1yaWdodCA6IDE1cHg7XHJcblx0XHRcdHdpZHRoICAgICAgICA6IDIxNXB4O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyA4LiDQntCx0YnQuNC1INGB0YLQuNC70Lgg0LTQu9GPINC/0L7QstGC0L7RgNGP0Y7RidC40YXRgdGPINC/0YDQsNCy0LjQuyDRgdC70LDQudC00LXRgNCwINC60L7QvdGC0LXQvdGC0LBcclxuLy8g0LIg0LrQsNGA0YLQvtGH0LrQtSDRgtC+0LLQsNGA0LAg0Lgg0YHRgtGA0LDQvdC40YbQtSDQsdC70L7Qs9CwXHJcbkBtaXhpbiBtaXgtcmVzcG9uZC1jb250ZW50LXNsaWRlcigpIHtcclxuXHQjeyRtaXgtc2xpZGVyfSB7XHJcblx0XHQmX3ByZXYge1xyXG5cdFx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhub3JtYWwpIHtcclxuXHRcdFx0XHRsZWZ0IDogLTNweDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Jl9uZXh0IHtcclxuXHRcdFx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obm9ybWFsKSB7XHJcblx0XHRcdFx0cmlnaHQgOiAwO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQmX3ByZXYsXHJcblx0XHQmX25leHQge1xyXG5cdFx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhuYXJyb3cpIHtcclxuXHRcdFx0XHRtYXJnaW4tdG9wIDogLTEycHg7XHJcblx0XHRcdFx0aGVpZ2h0ICAgICA6IDI0cHg7XHJcblx0XHRcdFx0d2lkdGggICAgICA6IDE2cHg7XHJcblxyXG5cdFx0XHRcdGZvbnQtc2l6ZSAgOiAyNHB4O1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQmX2NvbnRhaW5lciB7XHJcblx0XHRcdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG5vcm1hbCkge1xyXG5cdFx0XHRcdHdpZHRoIDogNTcxcHg7XHJcblx0XHRcdH1cclxuXHRcdFx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obmFycm93KSB7XHJcblx0XHRcdFx0aGVpZ2h0IDogMjI4cHg7XHJcblx0XHRcdFx0d2lkdGggIDogNDY4cHg7XHJcblx0XHRcdH1cclxuXHRcdFx0I3skbWl4LXNsaWRlcn1fbGlzdCN7JG1peC1saXN0fSB7XHJcblx0XHRcdFx0I3skbWl4LWxpc3R9X2l0ZW0ge1xyXG5cdFx0XHRcdFx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obm9ybWFsKSB7XHJcblx0XHRcdFx0XHRcdG1hcmdpbi1sZWZ0IDogOHB4O1xyXG5cdFx0XHRcdFx0XHQmOmZpcnN0LWNoaWxkIHtcclxuXHRcdFx0XHRcdFx0XHRtYXJnaW4tbGVmdCA6IDA7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG5hcnJvdykge1xyXG5cdFx0XHRcdFx0XHRtYXJnaW4tbGVmdCA6IDZweDtcclxuXHRcdFx0XHRcdFx0d2lkdGggICAgICAgOiAxNTJweDtcclxuXHRcdFx0XHRcdFx0JjpmaXJzdC1jaGlsZCB7XHJcblx0XHRcdFx0XHRcdFx0bWFyZ2luLWxlZnQgOiAwO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQjeyRtaXgtbGlzdH1fb2ZmZXIjeyRtaXgtb2ZmZXJ9IHtcclxuXHRcdFx0XHRcdFx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obmFycm93KSB7XHJcblx0XHRcdFx0XHRcdFx0cGFkZGluZy1ib3R0b20gOiAxMHB4O1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdCN7JG1peC1vZmZlcn1fcHJldmlldyN7JG1peC1wcmV2aWV3fSB7XHJcblx0XHRcdFx0XHRcdFx0I3skbWl4LXByZXZpZXd9X2xpbmsjeyRtaXgtbGluay1pbWd9IHtcclxuXHRcdFx0XHRcdFx0XHRcdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG5hcnJvdykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRAaW5jbHVkZSBsaWItbGluay1pbWctcGFyYW0oXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0JGhlaWdodCA6IDEzMnB4XHJcblx0XHRcdFx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdCN7JG1peC1vZmZlci1kZXNjcmlwdGlvbn0ge1xyXG5cdFx0XHRcdFx0XHRcdCZfY29udGFpbmVyIHtcclxuXHRcdFx0XHRcdFx0XHRcdCN7JG1peC1vZmZlci10aXRsZX0ge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhuYXJyb3cpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRtYXJnaW4tdG9wIDogLTQwcHg7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0aGVpZ2h0ICAgICA6IDQwcHg7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0I3skbWl4LW9mZmVyLXByaWNlfSB7XHJcblx0XHRcdFx0XHRcdFx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhuYXJyb3cpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0cG9zaXRpb24gICA6IHJlbGF0aXZlO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRib3R0b20gICAgIDogYXV0bztcclxuXHRcdFx0XHRcdFx0XHRcdFx0bWFyZ2luLXRvcCA6IDEwcHg7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpZHRoICAgICAgOiAxMDAlO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0dGV4dC1hbGlnbiA6IGNlbnRlcjtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0I3skbWl4LW9mZmVyLWJ1dHRvbn0ge1xyXG5cdFx0XHRcdFx0XHRcdFx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obmFycm93KSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHBvc2l0aW9uICAgOiByZWxhdGl2ZTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ym90dG9tICAgICA6IGF1dG87XHJcblx0XHRcdFx0XHRcdFx0XHRcdG1hcmdpbi10b3AgOiAxNHB4O1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0dGV4dC1hbGlnbiA6IGNlbnRlcjtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gOS4g0J7QsdGJ0LjQtSDRgdGC0LjQu9C4INC/0YDQtdC00LvQvtC20LXQvdC40Lkg0LIg0LvQuNGH0L3QvtC8INC60LDQsdC40L3QtdGC0LVcclxuQG1peGluIG1peC1jb21tb24tcGVyc29uYWwtb2ZmZXIoKSB7XHJcblx0aGVpZ2h0ICAgICAgICAgICA6IDUxcHg7XHJcblxyXG5cdGJvcmRlciAgICAgICAgICAgOiBub25lO1xyXG5cdGJvcmRlci1yYWRpdXMgICAgOiAwO1xyXG5cdGJhY2tncm91bmQtY29sb3IgOiAkbWl4LWJnLXBlcnNvbmFsLW9mZmVyO1xyXG5cdGJveC1zaGFkb3cgICAgICAgOiBub25lO1xyXG5cdCN7JG1peC1vZmZlcn1fcHJldmlldyN7JG1peC1wcmV2aWV3fSB7XHJcblx0XHRsZWZ0IDogNXB4O1xyXG5cdFx0I3skbWl4LXByZXZpZXd9X2xpbmsjeyRtaXgtbGluay1pbWd9IHtcclxuXHRcdFx0QGluY2x1ZGUgbGliLWxpbmstaW1nLXBhcmFtKFxyXG5cdFx0XHRcdCRoZWlnaHQgOiA0MHB4LFxyXG5cdFx0XHRcdCRyYXRpbyA6ICgxNi85KSxcclxuXHRcdFx0XHQkYm9yZGVyIDogJG1peC1jb2xvci1ib3JkZXItcGVyc29uYWwtb2ZmZXItaW1nXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0fVxyXG5cdCN7JG1peC1vZmZlci1kZXNjcmlwdGlvbn0ge1xyXG5cdFx0cG9zaXRpb24gOiByZWxhdGl2ZTtcclxuXHRcdCY6aG92ZXIge1xyXG5cdFx0XHQjeyRtaXgtb2ZmZXItZGVzY3JpcHRpb259X2NvbnRhaW5lcixcclxuXHRcdFx0I3skbWl4LW9mZmVyLW5ldy1wcmljZX0jeyRtaXgtZGV0YWlsfSB7XHJcblx0XHRcdFx0QGluY2x1ZGUgbGliLXRleHQtYmxhY2tvdXQtY2hhbmdlIChcclxuXHRcdFx0XHRcdCRjb2xvcjEgOiAyMzYsXHJcblx0XHRcdFx0XHQkY29sb3IyIDogMjM2LFxyXG5cdFx0XHRcdFx0JGNvbG9yMyA6IDIzNlxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdCZfY29udGFpbmVyIHtcclxuXHRcdFx0aGVpZ2h0IDogMTAwJTtcclxuXHJcblx0XHRcdEBpbmNsdWRlIGxpYi10ZXh0LWJsYWNrb3V0KFxyXG5cdFx0XHRcdCRjb2xvcjEgOiAyMzYsXHJcblx0XHRcdFx0JGNvbG9yMiA6IDIzNixcclxuXHRcdFx0XHQkY29sb3IzIDogMjM2XHJcblx0XHRcdCk7XHJcblx0XHRcdCN7JG1peC1vZmZlci10aXRsZX0jeyRtaXgtYmxvY2t9IHtcclxuXHRcdFx0XHRwYWRkaW5nLWxlZnQgOiAwO1xyXG5cdFx0XHRcdEBpbmNsdWRlIGxpYi10ZXh0LWh5cGhlbnMoXHJcblx0XHRcdFx0XHQkdHlwZSA6IGxhc3RDbGlwXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fVxyXG5cdFx0XHQjeyRtaXgtb2ZmZXJ9X3RleHQge1xyXG5cdFx0XHRcdHBhZGRpbmctdG9wIDogMTBweDtcclxuXHJcblx0XHRcdFx0Zm9udC1zaXplICAgOiBsaWItZm9udC1zaXplKC00KTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0I3skbWl4LW9mZmVyLW5ldy1wcmljZX0jeyRtaXgtZGV0YWlsfSB7XHJcblx0XHRcdGJvdHRvbSAgICAgIDogLTIwcHg7XHJcblx0XHRcdG1hcmdpbi10b3AgIDogMDtcclxuXHRcdFx0cGFkZGluZy10b3AgOiAwO1xyXG5cclxuXHRcdFx0QGluY2x1ZGUgbGliLXRleHQtYmxhY2tvdXQoXHJcblx0XHRcdFx0JGNvbG9yMSA6IDIzNixcclxuXHRcdFx0XHQkY29sb3IyIDogMjM2LFxyXG5cdFx0XHRcdCRjb2xvcjMgOiAyMzZcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHRcdCN7JG1peC1vZmZlci1idXR0b259I3skbWl4LWJsb2NrfSB7XHJcblx0XHRcdHJpZ2h0ICA6IC0xMTVweDtcclxuXHRcdFx0Ym90dG9tIDogLTE2cHg7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQkEsQUFBQSxZQUFZLENBQUE7RVMrQlgsUUFBUSxFQUFJLFFBQVE7RUFDcEIsTUFBTSxFQUFNLE1BQU07RUFDbEIsT0FBTyxFQUxPLElBQUksQ0FLTyxJQUFJLENBSlosSUFBSSxDQUl5QixJQUFJO0VBQ2xELFNBQVMsRUFBRyxNQUFNLEdUS2xCO0VLakNBLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7SUxOcEMsQUFBQSxZQUFZLENBQUE7TVNxQ1YsYUFBYSxFQUFHLElBQUk7TUFDcEIsWUFBWSxFQUFJLElBQUksR1RDckI7RUF2Q0QsQUFLQyxZQUxXLENBTVYsNkJBQVUsQ0FBQztJQUNWLFdBQVcsRUU0RVMsR0FBRyxHRjNFdkI7RUFSSCxBQUtDLFlBTFcsQ0FTVixnQ0FBYSxDQUFDO0lBQ2IsS0FBSyxFRURxQixPQUFPLEdGRWpDO0VBWEgsQUFLQyxZQUxXLENBWVYsMEJBQU8sQ0FBQztJQUNQLEtBQUssRUVLcUIsT0FBTyxHRkpqQztFQWRILEFBS0MsWUFMVyxDQWVWLDBCQUFPLEFBQUEsY0FBYyxDQUFDO0lBQ3JCLFVBQVUsRUFBRyxJQUFJO0lBQ2pCLEtBQUssRUFBUSxLQUFLLEdBQ2xCO0VBbEJILEFBS0MsWUFMVyxDQW1CViwyQkFBUSxBQUFBLFNBQVMsQ0FBQztJQUNqQixVQUFVLEVBQUcsSUFBSSxHQUNqQjtFQXJCSCxBQXVCQyxZQXZCVyxDQXdCViwrQkFBYSxDQUFDO0lBQ2IsS0FBSyxFRWhCcUIsT0FBTyxHRmlCakM7RUExQkgsQUF1QkMsWUF2QlcsQ0EyQlYseUJBQU8sQ0FBQztJQUNQLEtBQUssRUVWcUIsT0FBTyxHRldqQztFQTdCSCxBQXVCQyxZQXZCVyxDQThCViw0QkFBVSxBQUFBLGNBQWMsRUE5QjFCLEFBdUJDLFlBdkJXLENBK0JWLGdDQUFjLEFBQUEsY0FBYyxDQUFDO0lBQzVCLFVBQVUsRUFBRyxPQUFPO0lBQ3BCLEtBQUssRUFBUSxLQUFLLEdBQ2xCO0VBbENILEFBdUJDLFlBdkJXLENBbUNWLDBCQUFRLEFBQUEsU0FBUyxDQUFDO0lBQ2pCLFVBQVUsRUFBRyxJQUFJLEdBQ2pCIn0= */","//Импорт файлов\r\n@import 'functions';\r\n//----------------------------\r\n\r\n// ВАЖНО!!!\r\n// Для избежания конфликтов с подключаемыми scss фреймфорками и библиотеками\r\n// обязательно добавляйте \"lib-\" в начале переменных этого файла\r\n\r\n//----------------------------\r\n// 1. ПРЕФИКС КЛАССОВ\r\n$lib-class-prefix: 'su-';\r\n//----------------------------\r\n\r\n//----------------------------\r\n// 2. ПАЛИТРА\r\n$lib-palette: (\r\n\tprimary-darker:             #232323,//35  35  35\r\n\tprimary-dark:               #717171,//113 113 113\r\n\tprimary-base-dark:          #a8a8a8,//168 168 168\r\n\tprimary-base:               #cccccc,//204 204 204\r\n\tprimary-base-light:         #e3e3e3,//227 227 227\r\n\tprimary-light:              #ececec,//236 236 236\r\n\tprimary-lighter:            #ffffff,//255 255 255\r\n\r\n\tsecondary-dark:             #663333,//102 51  51\r\n\tsecondary-visited:          #7c3ed7,//124 62  215\r\n\tsecondary-accent-dark:      #68a22e,//104 162 46\r\n\tsecondary-accent:           #97cb63,//151 203 99\r\n\tsecondary-accent-light:     #95ff2e,//149 255 46\r\n\tsecondary-base:             #0559bc,//5   89 188\r\n\tsecondary-light:            #00aff2,//0   175 242\r\n\r\n\taccent-darker:              #5b5043,//91  80  67\r\n\taccent-dark:                #a27a4a,//162 122 74\r\n\taccent-base-dark:           #c98d03,//201 141 3\r\n\taccent-base:                #ffb409,//255 180 9\r\n\taccent-base-bright:         #ff9000,//255 144 9\r\n\taccent-base-light:          #fbf7bb,//251 247 187\r\n\taccent-light:               #fffcd6,//255 252 214\r\n\taccent-lighter:             #fffceb,//255 252 235\r\n\r\n\t//Дополнительные цвета для поля формы поиска в шапке\r\n\tborder-input-dark:          #8ca3ae,//140 163 174\r\n\tborder-input-base:          #a0b4be,//160 180 190\r\n\tborder-input-light:         #b6c8d1,//182 200 209\r\n\r\n\t//Дополнительные цвета для кнопок соц.сетей\r\n\tbackground-vk:              #537ca6,//83 124 166\r\n\tbackground-fb:              #4e6aba,//78 106 186\r\n);\r\n//----------------------------\r\n\r\n//----------------------------\r\n// 3. ТОЧКИ ПЕРЕКЛЮЧЕНИЯ\r\n$lib-breakpoints: (\r\n\tnormal: '1200px',//Site-width 1170\r\n\tnarrow: '992px',// Site-width 970\r\n\tmobile: '768px',// Site-width 750\r\n);\r\n//----------------------------\r\n\r\n//----------------------------\r\n// 4. ШИРИНА САЙТА\r\n$lib-width-container-normal : 1170px;\r\n$lib-width-container-narrow : 970px;\r\n$lib-width-container-mobile : 750px;\r\n//----------------------------\r\n\r\n//----------------------------\r\n// 5.  ШРИФТ\r\n// 5.1 Семейство шрифта\r\n$lib-font-family : OpenSansRegular, sans-serif;\r\n\r\n// 5.2 Размер шрифта\r\n$lib-font-size : 16px;\r\n\r\n$lib-type-scale : (\r\n\t\t-5: 0.688rem, //    16px -> 11px\r\n\t\t-4: 0.75rem, //     16px -> 12px    smaller text    /smaller subheading\r\n\t\t-3: 0.815rem, //    16px -> 13px    small text\r\n\t\t-2: 0.875rem, //    16px -> 14px    normal text     /small subheading\r\n\t\t-1: 0.938rem, //    16px -> 15px\r\n\t\t0: 1rem, //         16px -> 16px    big text        /small heading\r\n\t\t1: 1.125rem, //     16px -> 18px    very big text   /heading\r\n\t\t2: 1.375rem, //     16px -> 22px                    /big heading\r\n\t\t3: 1.875rem, //     16px -> 30px                    /main heading\r\n\t\t4: 1.875rem, //     16px -> 30px                    /main heading\r\n\r\n\t\t//Extend fonts\r\n\t\te0: 1.063rem, //    16px -> 17px\r\n\t\te1: 1.188rem, //    16px -> 19px\r\n\t\te2: 1.25rem, //     16px -> 20px\r\n\t\te3: 1.688rem, //    16px -> 27px\r\n\t\te4: 2.125rem //     16px -> 34px\r\n);\r\n\r\n$lib-font-size-base : lib-font-size(0);\r\n$lib-font-size-input : lib-font-size(-2);\r\n\r\n// 5.3 Насыщенность шрифта\r\n$lib-font-weight-normal: 400;\r\n$lib-font-weight-bold: 700;\r\n\r\n// 5.4 Цвет шрифтов\r\n$lib-color-main-title : lib-color(accent-base);\r\n$lib-color-big-title : lib-color(secondary-dark);\r\n$lib-color-title : lib-color(secondary-dark);\r\n$lib-color-text : lib-color(primary-darker);\r\n//----------------------------\r\n\r\n//----------------------------\r\n// 6.  СТРОКА\r\n// 6.1 Высота строки\r\n$lib-line-height-base : ($lib-font-size-base * 1.25);\r\n\r\n$lib-line-heights : (\r\n\t\t-5: $lib-line-height-base,\r\n\t\t-4: $lib-line-height-base,\r\n\t\t-3: $lib-line-height-base,\r\n\t\t-2: $lib-line-height-base,\r\n\t\t-1: $lib-line-height-base,\r\n\t\t0: $lib-line-height-base,\r\n\t\t1: ($lib-line-height-base * 1.125),\r\n\t\t2: ($lib-line-height-base * 1.375),\r\n\t\t3: ($lib-line-height-base * 1.875),\r\n\r\n\t\t//Extend lines\r\n\t\te0: ($lib-line-height-base * 1.063),\r\n\t\te1: ($lib-line-height-base * 1.188),\r\n\t\te2: ($lib-line-height-base * 1.25)\r\n);\r\n\r\n// 6.2 Верхний отсуп строки\r\n$lib-padding-top-base : $lib-font-size-base * 1.25;\r\n\r\n$lib-padding-top : (\r\n\t\t-5: $lib-padding-top-base * 0.688,\r\n\t\t-4: $lib-padding-top-base * 0.75,\r\n\t\t-3: $lib-padding-top-base * 0.815,\r\n\t\t-2: $lib-padding-top-base * 0.875,\r\n\t\t-1: $lib-padding-top-base * 0.938,\r\n\t\t0: $lib-padding-top-base * 1,\r\n\t\t1: $lib-padding-top-base * 1.125,\r\n\t\t2: ($lib-padding-top-base * 1.375),\r\n\t\t3: ($lib-padding-top-base * 1.875)\r\n);\r\n//----------------------------\r\n\r\n//----------------------------\r\n// 7. Параметры z-оси\r\n$lib-z-indexes: (\r\n\t\t\"wrapper-mobile-after\",//для блока перекрывающего wrapper при открытом меню\r\n\t\t\"modal\",\r\n\t\t\"fixed\",\r\n\t\t\"header-basket\",\r\n\t\t\"header-control\",\r\n\t\t\"header-banner\",\r\n\t\t\"header-info\",\r\n\t\t\"header\",\r\n\t\t\"aside\",\r\n\t\t\"page\",\r\n\t\t\"footer\"\r\n);\r\n//----------------------------"]} */
/*# sourceMappingURL=password.css.map*/