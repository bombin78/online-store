.su-card {
  position: relative;
  margin: 0 auto;
  padding: 20px 40px 15px 40px;
  max-width: 1280px;
}

.su-card._su-top-sales .su-card_main .su-card-view .su-card-view-big.su-preview .su-preview_link.su-link-img {
  position: relative;
}

.su-card._su-top-sales .su-card_main .su-card-view .su-card-view-big.su-preview .su-preview_link.su-link-img:after {
  content: '';
  position: absolute;
  top: -3px;
  right: -3px;
  height: 72px;
  width: 89px;
  background: url(img/offers/top-sales.png) top right no-repeat;
}

.su-card_main {
  display: table;
  margin-top: 15px;
  width: 100%;
}

.su-card_main .su-card-view {
  display: table-cell;
  width: 280px;
}

.su-card_main .su-card-view .su-card-view-big.su-preview .su-preview_link.su-link-img {
  height: 240px;
  width: 240px;
  line-height: 234px;
  border: 1px solid #ececec;
}

.su-card_main .su-card-view .su-card-view-more_list.su-list {
  display: inline-block;
}

.su-card_main .su-card-view .su-card-view-more_list.su-list .su-list_item {
  float: left;
  margin-top: 12px;
  margin-left: 12px;
}

.su-card_main .su-card-view .su-card-view-more_list.su-list .su-list_item:nth-of-type(3n+1) {
  margin-left: 0;
}

.su-card_main .su-card-view .su-card-view-more_list.su-list .su-list_item .su-card-view-min.su-preview .su-preview_link.su-link-img {
  height: 72px;
  width: 72px;
  line-height: 66px;
  border: 1px solid #ececec;
}

.su-card_main .su-card-actions {
  display: table-cell;
  position: relative;
  vertical-align: top;
}

.su-card_main .su-card-actions_price.su-detail {
  color: #ff9000;
  font-weight: bold;
}

.su-card_main .su-card-actions_price.su-detail .su-detail_label {
  font-size: 1.125rem;
}

.su-card_main .su-card-actions_price.su-detail .su-detail_value {
  margin-top: 10px;
  font-size: 1.688rem;
}

.su-card_main .su-card-actions_rating.su-rating {
  margin-top: 30px;
}

.su-card_main .su-card-actions_links.su-block {
  margin-top: 25px;
}

.su-card_main .su-card-actions_links.su-block .su-block_element.su-link-img {
  float: left;
}

.su-card_main .su-card-actions_links.su-block .su-block_element.su-link {
  float: right;
  margin-top: 7px;
  color: #0559bc;
}

.su-card_main .su-card-actions_favorites.su-block {
  position: absolute;
  top: 0;
  right: 0;
  text-align: right;
}

.su-card_main .su-card-actions_favorites.su-block .su-block_element.su-link {
  display: none;
}

.su-card_main .su-card-actions_order.su-card-order {
  margin-top: 35px;
  padding: 15px;
  width: 100%;
  background: #fbf7bb;
  border-radius: 4px;
}

.su-card_main .su-card-actions_order.su-card-order .su-card-order_title {
  font-size: 1.125rem;
  color: #ff9000;
}

.su-card_main .su-card-actions_order.su-card-order .su-card-order_text {
  margin-top: 15px;
  color: #5b5043;
}

.su-card_main .su-card-actions_order.su-card-order .su-card-order_form.su-one-click {
  display: inline-block;
  margin-top: 15px;
  width: 100%;
}

.su-card_main .su-card-actions_order.su-card-order .su-card-order_form.su-one-click .su-one-click_phone.su-field-text {
  float: left;
}

.su-card_main .su-card-actions_order.su-card-order .su-card-order_form.su-one-click .su-one-click_button.su-block {
  float: right;
  margin-top: 17px;
}

@media screen and (max-width: 992px) {
  .su-card {
    padding-right: 20px;
    padding-left: 20px;
  }
}

@media screen and (max-width: 1200px) {
  .su-card_main .su-card-view {
    width: 270px;
  }
}

@media screen and (max-width: 992px) {
  .su-card_main .su-card-view {
    width: 220px;
  }
}

@media screen and (max-width: 992px) {
  .su-card_main .su-card-view .su-card-view-big.su-preview .su-preview_link.su-link-img {
    height: 200px;
    width: 200px;
    line-height: 194px;
  }
}

@media screen and (max-width: 992px) {
  .su-card_main .su-card-view .su-card-view-more_list.su-list .su-list_item {
    margin-top: 10px;
    margin-left: 10px;
  }
}

@media screen and (max-width: 992px) {
  .su-card_main .su-card-view .su-card-view-more_list.su-list .su-list_item .su-card-view-min.su-preview .su-preview_link.su-link-img {
    height: 60px;
    width: 60px;
    line-height: 54px;
  }
}

@media screen and (max-width: 992px) {
  .su-card_main .su-card-actions_rating.su-rating {
    margin-top: 20px;
  }
}

@media screen and (max-width: 992px) {
  .su-card_main .su-card-actions_links.su-block {
    margin-top: 15px;
  }
}

@media screen and (max-width: 992px) {
  .su-card_main .su-card-actions_order.su-card-order {
    margin-top: 25px;
  }
}

@media screen and (max-width: 992px) {
  .su-card_main .su-card-actions_order.su-card-order .su-card-order_form.su-one-click .su-one-click_phone.su-field-text {
    width: 155px;
  }
}
/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=card.css.map*/