.su-offers_list.su-list:before,
.su-offers_list.su-list:after {
  content: ' ';
  display: table;
}

.su-offers_list.su-list:after {
  clear: both;
}

.su-offers {
  position: relative;
  margin: 0 auto;
  padding: 20px 40px 15px 40px;
  max-width: 1280px;
}

@media screen and (max-width: 992px) {
  .su-offers {
    padding-right: 20px;
    padding-left: 20px;
  }
}

.su-offers_sorting.su-group-buttons {
  margin-top: 20px;
}

.su-offers_list.su-list .su-list_item {
  float: left;
  width: 400px;
}

.su-offers_list.su-list .su-list_item:nth-of-type(odd) {
  margin-right: 19px;
}

@media screen and (max-width: 1200px) {
  .su-offers_list.su-list .su-list_item {
    width: 100%;
  }
}

.su-offers_list.su-list .su-list_offer.su-offer {
  margin-top: 21px;
}

@media screen and (max-width: 1200px) {
  .su-offers_list.su-list .su-list_offer.su-offer {
    padding-bottom: 88px;
  }
}

@media screen and (max-width: 992px) {
  .su-offers_list.su-list .su-list_offer.su-offer {
    padding-bottom: 84px;
  }
}

.su-offers_list.su-list .su-list_offer.su-offer .su-offer_preview.su-preview .su-preview_link.su-link-img {
  height: 150px;
  width: 150px;
  line-height: 144px;
  border: 1px solid #e3e3e3;
}

@media screen and (max-width: 1200px) {
  .su-offers_list.su-list .su-list_offer.su-offer .su-offer_preview.su-preview .su-preview_link.su-link-img {
    height: 180px;
    width: 180px;
    line-height: 174px;
  }
}

.su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-new-price {
  width: 368px;
  border-top: 1px dotted #e3e3e3;
}

@media screen and (max-width: 1200px) {
  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-description_container {
    height: 108px;
  }

  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-description_container .su-offer-title.su-block,
  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-description_container .su-offer-text {
    padding-left: 200px;
  }

  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description_rating.su-rating {
    position: absolute;
    bottom: -25px;
    left: 200px;
  }

  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-new-price.su-detail {
    bottom: -63px;
    left: 200px;
    width: 388px;
  }

  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-button.su-block {
    bottom: -70px;
  }
}

@media screen and (max-width: 992px) {
  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-description_container {
    height: 112px;
  }

  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description_rating.su-rating {
    bottom: -23px;
  }

  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-new-price.su-detail {
    bottom: -62px;
    padding-top: 12px;
    width: 275px;
  }

  .su-offers_list.su-list .su-list_offer.su-offer .su-offer-description .su-offer-button.su-block {
    bottom: -70px;
  }
}

.su-offers_pagination.su-pagination {
  margin-top: 20px;
}
/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=offers.css.map*/