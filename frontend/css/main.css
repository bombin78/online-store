.su-main {
  position: relative;
  margin: 0 auto;
  padding: 20px 40px 15px 40px;
  max-width: 1280px;
}

.su-main_offer.su-tile {
  margin-top: 1.40625rem;
}

@media screen and (max-width: 992px) {
  .su-main {
    padding-right: 20px;
    padding-left: 20px;
    max-width: 1280px;
  }
}

@media screen and (max-width: 768px) {
  .su-main {
    padding-right: 0;
    padding-left: 0;
  }
}

@media screen and (max-width: 540px) {
  .su-main .su-title-complex {
    padding-left: 0;
  }
}

@media screen and (max-width: 540px) {
  .su-main .su-title-complex:after {
    display: none;
  }
}
/*# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["/OpenServer/domains/manicurshop/frontend/scss/2_project/pages/main/_main.scss","/OpenServer/domains/manicurshop/frontend/scss/utils/_mixins.scss","scss/2_project/pages/main/index.scss","/OpenServer/domains/manicurshop/frontend/scss/utils/library/_mixins.scss","/OpenServer/domains/manicurshop/frontend/scss/2_project/pages/main/_main-media.scss"],"names":[],"mappings":"AAIA;ECmDC,mBAAoB;EACpB,eAAkB;EAClB,6BAAkD;EAClD,kBAAkB;CCrDlB;;AAED;ECiBC,uBAAmB;CDfnB;;AAED;EACE;IACE,oBAAoB;ICWvB,mBAAmB;ICpBpB,kBAAY;GFYT;CACF;;ACOA;ECpBD;IAUG,iBAAgB;IFQf,gBAAgB;GCEnB;CDAA;;AAED;EACE;IACE,gBAAgB;GACjB;CACF;;AAED;EACE;IACE,cAAc;GACf;CACF","file":"scss/2_project/pages/main/index.scss","sourcesContent":["//Импорт файлов\r\n@import 'main-variables';\r\n//-------------------------------\r\n\r\n#{$wrapper} {\r\n\r\n\t@include mix-content-common-param();\r\n\r\n\t&_offer#{$tile} {\r\n\t\tmargin-top : lib-line-top(1);\r\n\t}\r\n}\r\n","// ВАЖНО!!!\r\n// Для избежания конфликтов с подключаемыми scss фреймфорками и библиотеками\r\n// обязательно добавляйте \"mix-\" в начале переменных и примесей этого файла\r\n\r\n// В этот файл вынесены общие стили страниц, которые не могут быть добавлены\r\n// в библиотеку (относятся только к текущему проекту)\r\n\r\n// Цвета\r\n$mix-color-footer-title : lib-color(primary-lighter);\r\n$mix-bg-comments-list : lib-color(primary-lighter);\r\n$mix-bg-jsp-vertical-bar : lib-color(primary-lighter);\r\n$mix-bg-jsp-drag : lib-color(primary-lighter);\r\n$mix-bg-personal-offer : transparent;\r\n$mix-color-border-jsp-vertical-bar : lib-color(primary-base);\r\n$mix-color-border-jsp-drag : lib-color(primary-base);\r\n$mix-color-border-new-price : lib-color(primary-base-light);\r\n$mix-color-border-img : lib-color(primary-base-light);\r\n$mix-color-border-personal-offer-img : lib-color(primary-base-light);\r\n//-------------------------------\r\n\r\n// Классы\r\n$mix-tile : lib-get-class('tile');\r\n$mix-offer : lib-get-class('offer');\r\n$mix-offer-description : lib-get-class('offer-description');\r\n$mix-offer-title : lib-get-class('offer-title');\r\n$mix-offer-text : lib-get-class('offer-text');\r\n$mix-offer-annotation : lib-get-class('offer-annotation');\r\n$mix-offer-new-price : lib-get-class('offer-new-price');\r\n$mix-offer-old-price : lib-get-class('offer-old-price');\r\n$mix-offer-price : lib-get-class('offer-price');\r\n$mix-offer-button : lib-get-class('offer-button');\r\n$mix-link-img : lib-get-class('link-img');\r\n$mix-link-btn : lib-get-class('link-btn');\r\n$mix-list : lib-get-class('list');\r\n$mix-block : lib-get-class('block');\r\n$mix-preview : lib-get-class('preview');\r\n$mix-rating : lib-get-class('rating');\r\n$mix-detail : lib-get-class('detail');\r\n$mix-social-links : lib-get-class('social-links');\r\n$mix-social-link : lib-get-class('social-link');\r\n$mix-free-mail : lib-get-class('free-mail');\r\n$mix-slider : lib-get-class('slider');\r\n$mix-field-text : lib-get-class('field-text');\r\n$mix-field-select : lib-get-class('field-select');\r\n$mix-field-textarea : lib-get-class('field-textarea');\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 1. Общие параметры контента\r\n// 1.1 По умолчанию\r\n@mixin mix-content-common-param(\r\n\t$padding-top: 20px,\r\n\t$padding-bottom: 15px\r\n) {\r\n\tposition  : relative;\r\n\tmargin    : 0 auto;\r\n\tpadding   : $padding-top 40px $padding-bottom 40px;\r\n\tmax-width : 1280px;\r\n}\r\n\r\n// 1.2 При разрешении экрана \"narrow\"\r\n@mixin mix-content-common-narrow-param() {\r\n\tpadding: {\r\n\t\tright : 20px;\r\n\t\tleft  : 20px;\r\n\t}\r\n\tmax-width : 1280px;\r\n}\r\n\r\n// 1.3 При разрешении экрана \"mobile\"\r\n@mixin mix-content-common-mobile-param() {\r\n\tpadding: {\r\n\t\tright : 0;\r\n\t\tleft  : 0;\r\n\t}\r\n}\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 2. Переопределение стилей пдагина \"jscrollpane\"\r\n@mixin mix-override-jscrollpane(\r\n\t$after-height: 45px,\r\n\t$before-height: 45px\r\n) {\r\n\t$width-vertical-bar : 14px;\r\n\t$offset-container-pseudo : $width-vertical-bar + 3;\r\n\t//классы плагина \"jscrollpane\"\r\n\t.jspContainer {\r\n\t\t&:before,\r\n\t\t&:after {\r\n\t\t\tcontent  : '';\r\n\t\t\tposition : absolute;\r\n\t\t\tleft     : 0;\r\n\t\t\twidth    : 100%;\r\n\t\t\tz-index  : 2;\r\n\t\t}\r\n\t\t&:before {\r\n\t\t\ttop        : 0;\r\n\t\t\theight     : $before-height;\r\n\r\n\t\t\tbackground : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9), #ffffff, #ffffff);\r\n\t\t}\r\n\t\t&:after {\r\n\t\t\tbottom     : 0;\r\n\t\t\theight     : $after-height;\r\n\r\n\t\t\tbackground : linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9), #ffffff, #ffffff);\r\n\t\t}\r\n\t\t//Добавленный модификатор для отслеживания вертикальной полосы прокрутки\r\n\t\t&._jspOffset {\r\n\t\t\t&:after,\r\n\t\t\t&:before {\r\n\t\t\t\tleft : - $offset-container-pseudo;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.jspPane {\r\n\t\t\tmin-height : 100%;\r\n\r\n\t\t\tbackground : $mix-bg-comments-list;\r\n\t\t}\r\n\t\t.jspVerticalBar {\r\n\t\t\twidth         : $width-vertical-bar;\r\n\t\t\tz-index       : 3;\r\n\r\n\t\t\tbackground    : $mix-bg-jsp-vertical-bar;\r\n\t\t\tborder        : 1px solid $mix-color-border-jsp-vertical-bar;\r\n\t\t\tborder-radius : 3px;\r\n\t\t\t.jspTrack {\r\n\t\t\t\tbackground : transparent;\r\n\t\t\t\t.jspDrag {\r\n\t\t\t\t\tbackground    : $mix-bg-jsp-drag url(../../img/scrollbar/scrollbar.png) center center no-repeat;\r\n\t\t\t\t\tborder        : 1px solid $mix-color-border-jsp-drag;\r\n\t\t\t\t\tborder-radius : 3px;\r\n\t\t\t\t\tcursor        : pointer;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 3. Параметры элементов ячечеек подвала\r\n// 3.1 Заголовки\r\n@mixin mix-footer-title() {\r\n\tcolor       : $mix-color-footer-title;\r\n\tfont-family : 'OpenSansBold';\r\n\tfont-size   : lib-font-size(-2);\r\n}\r\n\r\n// 3.2 Списки\r\n@mixin mix-footer-list() {\r\n\tmargin-top : 10px;\r\n\r\n\tfont-size  : lib-font-size(-2);\r\n\t#{$mix-list}_item {\r\n\t\tmargin-top : 5px;\r\n\t}\r\n}\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 4. Общие стили для корзины на втором шаге оформления заказа.\r\n// 4.1 Вход/регистрация через соц.сети\r\n@mixin mix-common-order-social-links-narrow() {\r\n\t#{$mix-social-links}_title {\r\n\t\tdisplay : block;\r\n\t}\r\n\t#{$mix-social-links}_list#{$mix-list} {\r\n\t\tmargin-top : 20px;\r\n\t\t#{$mix-list}_item {\r\n\t\t\t#{$mix-social-link}#{$mix-link-btn} {\r\n\t\t\t\t#{$mix-link-btn}_addition {\r\n\t\t\t\t\tdisplay : none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 4.2. Текстовое поле блока \"order-make\"\r\n@mixin order-make-field-text(\r\n\t$margin-top: 20px,\r\n\t$float-label: left,\r\n\t$float-input: right,\r\n\t$width-label: 45%,\r\n\t$width-input: 50%,\r\n\t$padding-left: $width-input\r\n) {\r\n\tdisplay        : inline-block;\r\n\tmargin-top     : $margin-top;\r\n\twidth          : 100%;\r\n\r\n\tvertical-align : bottom;\r\n\t#{$mix-field-text} {\r\n\t\t&_label {\r\n\t\t\tfloat : $float-label;\r\n\t\t\twidth : $width-label;\r\n\t\t}\r\n\t\t&_input {\r\n\t\t\tfloat : $float-input;\r\n\t\t\twidth : $width-input;\r\n\t\t}\r\n\t\t&_help {\r\n\t\t\tfloat : left;\r\n\t\t\tpadding-left: $padding-left;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 4.3. Выпадающий список блока \"order-make\"\r\n@mixin order-make-field-select(\r\n\t$margin-top: 20px,\r\n\t$float-label: left,\r\n\t$float-select: right,\r\n\t$width-label: 45%,\r\n\t$width-select: 50%,\r\n\t$padding-left: $width-select\r\n) {\r\n\tdisplay        : inline-block;\r\n\tmargin-top     : $margin-top;\r\n\twidth          : 100%;\r\n\r\n\tvertical-align : bottom;\r\n\t#{$mix-field-select} {\r\n\t\t&_label {\r\n\t\t\tfloat : $float-label;\r\n\t\t\twidth : $width-label;\r\n\t\t}\r\n\t\t&_select {\r\n\t\t\tfloat : $float-select;\r\n\t\t\twidth : $width-select;\r\n\t\t}\r\n\t\t&_help {\r\n\t\t\tfloat : left;\r\n\t\t\tpadding-left: $padding-left;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 4.4. Текстовая область блока \"order-make\"\r\n@mixin order-make-field-textarea(\r\n\t$margin-top: 20px,\r\n\t$float-label: left,\r\n\t$float-textarea: right,\r\n\t$width-label: 45%,\r\n\t$width-textarea: 50%,\r\n\t$resize: vertical,\r\n\t$padding-left: $width-textarea\r\n) {\r\n\tdisplay        : inline-block;\r\n\tmargin-top     : $margin-top;\r\n\twidth          : 100%;\r\n\r\n\tvertical-align : bottom;\r\n\t#{$mix-field-textarea} {\r\n\t\t&_label {\r\n\t\t\tfloat : $float-label;\r\n\t\t\twidth : $width-label;\r\n\t\t}\r\n\t\t&_textarea {\r\n\t\t\tfloat  : $float-textarea;\r\n\t\t\twidth  : $width-textarea;\r\n\r\n\t\t\tresize : $resize;\r\n\t\t}\r\n\t\t&_help {\r\n\t\t\tfloat : left;\r\n\t\t\tpadding-left: $padding-left;\r\n\t\t}\r\n\t}\r\n}\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 5. Общие стили предложений в личном кабинете\r\n@mixin mix-common-personal-offer() {\r\n\theight           : 51px;\r\n\r\n\tborder           : none;\r\n\tborder-radius    : 0;\r\n\tbackground-color : $mix-bg-personal-offer;\r\n\tbox-shadow       : none;\r\n\t#{$mix-offer}_preview#{$mix-preview} {\r\n\t\tleft : 5px;\r\n\t\t#{$mix-preview}_link#{$mix-link-img} {\r\n\t\t\t@include lib-link-img-param(\r\n\t\t\t\t$height : 40px,\r\n\t\t\t\t$ratio : (16/9),\r\n\t\t\t\t$border : $mix-color-border-personal-offer-img\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t#{$mix-offer-description} {\r\n\t\tposition : relative;\r\n\t\t&:hover {\r\n\t\t\t#{$mix-offer-description}_container,\r\n\t\t\t#{$mix-offer-new-price}#{$mix-detail} {\r\n\t\t\t\t@include lib-text-blackout-change (\r\n\t\t\t\t\t$color1 : 236,\r\n\t\t\t\t\t$color2 : 236,\r\n\t\t\t\t\t$color3 : 236\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t&_container {\r\n\t\t\theight : 100%;\r\n\r\n\t\t\t@include lib-text-blackout(\r\n\t\t\t\t$color1 : 236,\r\n\t\t\t\t$color2 : 236,\r\n\t\t\t\t$color3 : 236\r\n\t\t\t);\r\n\t\t\t#{$mix-offer-title}#{$mix-block} {\r\n\t\t\t\tpadding-left : 0;\r\n\t\t\t\t@include lib-text-hyphens(\r\n\t\t\t\t\t$type : lastClip\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t#{$mix-offer}_text {\r\n\t\t\t\tpadding-top : 10px;\r\n\r\n\t\t\t\tfont-size   : lib-font-size(-4);\r\n\t\t\t}\r\n\t\t}\r\n\t\t#{$mix-offer-new-price}#{$mix-detail} {\r\n\t\t\tbottom      : -20px;\r\n\t\t\tmargin-top  : 0;\r\n\t\t\tpadding-top : 0;\r\n\r\n\t\t\t@include lib-text-blackout(\r\n\t\t\t\t$color1 : 236,\r\n\t\t\t\t$color2 : 236,\r\n\t\t\t\t$color3 : 236\r\n\t\t\t);\r\n\t\t}\r\n\t\t#{$mix-offer-button}#{$mix-block} {\r\n\t\t\tright  : -115px;\r\n\t\t\tbottom : -16px;\r\n\t\t}\r\n\t}\r\n}\r\n//-------------------------------\r\n",".su-main {\n  position: relative;\n  margin: 0 auto;\n  padding: 20px 40px 15px 40px;\n  max-width: 1280px;\n}\n\n.su-main_offer.su-tile {\n  margin-top: 1.40625rem;\n}\n\n@media screen and (max-width: 992px) {\n  .su-main {\n    padding-right: 20px;\n    padding-left: 20px;\n    max-width: 1280px;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .su-main {\n    padding-right: 0;\n    padding-left: 0;\n  }\n}\n\n@media screen and (max-width: 540px) {\n  .su-main .su-title-complex {\n    padding-left: 0;\n  }\n}\n\n@media screen and (max-width: 540px) {\n  .su-main .su-title-complex:after {\n    display: none;\n  }\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXG1hbmljdXJzaG9wXFxmcm9udGVuZFxcc2Nzc1xcMl9wcm9qZWN0XFxwYWdlc1xcbWFpblxcaW5kZXguc2NzcyIsInNvdXJjZXMiOlsiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzLzJfcHJvamVjdC9wYWdlcy9tYWluL2luZGV4LnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvX2xpYi5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL2xpYnJhcnkvX3ZhcmlhYmxlcy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL2xpYnJhcnkvX2Z1bmN0aW9ucy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL2xpYnJhcnkvX2Z1bmN0aW9ucy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL2xpYnJhcnkvX21peGlucy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL2xpYnJhcnkvX3ZhcmlhYmxlcy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL2xpYnJhcnkvX2Z1bmN0aW9ucy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL2xpYnJhcnkvX3BsYWNlaG9sZGVycy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzL3V0aWxzL19taXhpbnMuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy8yX3Byb2plY3QvcGFnZXMvbWFpbi9fbWFpbi5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzLzJfcHJvamVjdC9wYWdlcy9tYWluL19tYWluLXZhcmlhYmxlcy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzLzJfcHJvamVjdC9wYWdlcy9tYWluL19tYWluLW1lZGlhLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvMl9wcm9qZWN0L3BhZ2VzL21haW4vX21haW4tdmFyaWFibGVzLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy/QmNC80L/QvtGA0YIg0YTQsNC50LvQvtCyXHJcbkBpbXBvcnQgJy4uLy4uLy4uL3V0aWxzL19saWInO1xyXG5AaW1wb3J0ICcuLi8uLi8uLi91dGlscy9fbWl4aW5zJztcclxuQGltcG9ydCAnbWFpbic7XHJcbkBpbXBvcnQgJ21haW4tbWVkaWEnO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iLCJAaW1wb3J0ICdsaWJyYXJ5L3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJ2xpYnJhcnkvZnVuY3Rpb25zJztcclxuQGltcG9ydCAnbGlicmFyeS9taXhpbnMnO1xyXG5AaW1wb3J0ICdsaWJyYXJ5L3BsYWNlaG9sZGVycyc7IiwiLy/QmNC80L/QvtGA0YIg0YTQsNC50LvQvtCyXHJcbkBpbXBvcnQgJ2Z1bmN0aW9ucyc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8g0JLQkNCW0J3QniEhIVxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwibGliLVwiINCyINC90LDRh9Cw0LvQtSDQv9C10YDQtdC80LXQvdC90YvRhSDRjdGC0L7Qs9C+INGE0LDQudC70LBcclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAxLiDQn9Cg0JXQpNCY0JrQoSDQmtCb0JDQodCh0J7QklxyXG4kbGliLWNsYXNzLXByZWZpeDogJ3N1LSc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDIuINCf0JDQm9CY0KLQoNCQXHJcbiRsaWItcGFsZXR0ZTogKFxyXG5cdHByaW1hcnktZGFya2VyOiAgICAgICAgICAgICAjMjMyMzIzLC8vMzUgIDM1ICAzNVxyXG5cdHByaW1hcnktZGFyazogICAgICAgICAgICAgICAjNzE3MTcxLC8vMTEzIDExMyAxMTNcclxuXHRwcmltYXJ5LWJhc2UtZGFyazogICAgICAgICAgI2E4YThhOCwvLzE2OCAxNjggMTY4XHJcblx0cHJpbWFyeS1iYXNlOiAgICAgICAgICAgICAgICNjY2NjY2MsLy8yMDQgMjA0IDIwNFxyXG5cdHByaW1hcnktYmFzZS1saWdodDogICAgICAgICAjZTNlM2UzLC8vMjI3IDIyNyAyMjdcclxuXHRwcmltYXJ5LWxpZ2h0OiAgICAgICAgICAgICAgI2VjZWNlYywvLzIzNiAyMzYgMjM2XHJcblx0cHJpbWFyeS1saWdodGVyOiAgICAgICAgICAgICNmZmZmZmYsLy8yNTUgMjU1IDI1NVxyXG5cclxuXHRzZWNvbmRhcnktZGFyazogICAgICAgICAgICAgIzY2MzMzMywvLzEwMiA1MSAgNTFcclxuXHRzZWNvbmRhcnktdmlzaXRlZDogICAgICAgICAgIzdjM2VkNywvLzEyNCA2MiAgMjE1XHJcblx0c2Vjb25kYXJ5LWFjY2VudC1kYXJrOiAgICAgICM2OGEyMmUsLy8xMDQgMTYyIDQ2XHJcblx0c2Vjb25kYXJ5LWFjY2VudDogICAgICAgICAgICM5N2NiNjMsLy8xNTEgMjAzIDk5XHJcblx0c2Vjb25kYXJ5LWFjY2VudC1saWdodDogICAgICM5NWZmMmUsLy8xNDkgMjU1IDQ2XHJcblx0c2Vjb25kYXJ5LWJhc2U6ICAgICAgICAgICAgICMwNTU5YmMsLy81ICAgODkgMTg4XHJcblx0c2Vjb25kYXJ5LWxpZ2h0OiAgICAgICAgICAgICMwMGFmZjIsLy8wICAgMTc1IDI0MlxyXG5cclxuXHRhY2NlbnQtZGFya2VyOiAgICAgICAgICAgICAgIzViNTA0MywvLzkxICA4MCAgNjdcclxuXHRhY2NlbnQtZGFyazogICAgICAgICAgICAgICAgI2EyN2E0YSwvLzE2MiAxMjIgNzRcclxuXHRhY2NlbnQtYmFzZS1kYXJrOiAgICAgICAgICAgI2M5OGQwMywvLzIwMSAxNDEgM1xyXG5cdGFjY2VudC1iYXNlOiAgICAgICAgICAgICAgICAjZmZiNDA5LC8vMjU1IDE4MCA5XHJcblx0YWNjZW50LWJhc2UtYnJpZ2h0OiAgICAgICAgICNmZjkwMDAsLy8yNTUgMTQ0IDlcclxuXHRhY2NlbnQtYmFzZS1saWdodDogICAgICAgICAgI2ZiZjdiYiwvLzI1MSAyNDcgMTg3XHJcblx0YWNjZW50LWxpZ2h0OiAgICAgICAgICAgICAgICNmZmZjZDYsLy8yNTUgMjUyIDIxNFxyXG5cdGFjY2VudC1saWdodGVyOiAgICAgICAgICAgICAjZmZmY2ViLC8vMjU1IDI1MiAyMzVcclxuXHJcblx0Ly/QlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INGG0LLQtdGC0LAg0LTQu9GPINC/0L7Qu9GPINGE0L7RgNC80Ysg0L/QvtC40YHQutCwINCyINGI0LDQv9C60LVcclxuXHRib3JkZXItaW5wdXQtZGFyazogICAgICAgICAgIzhjYTNhZSwvLzE0MCAxNjMgMTc0XHJcblx0Ym9yZGVyLWlucHV0LWJhc2U6ICAgICAgICAgICNhMGI0YmUsLy8xNjAgMTgwIDE5MFxyXG5cdGJvcmRlci1pbnB1dC1saWdodDogICAgICAgICAjYjZjOGQxLC8vMTgyIDIwMCAyMDlcclxuXHJcblx0Ly/QlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INGG0LLQtdGC0LAg0LTQu9GPINC60L3QvtC/0L7QuiDRgdC+0YYu0YHQtdGC0LXQuVxyXG5cdGJhY2tncm91bmQtdms6ICAgICAgICAgICAgICAjNTM3Y2E2LC8vODMgMTI0IDE2NlxyXG5cdGJhY2tncm91bmQtZmI6ICAgICAgICAgICAgICAjNGU2YWJhLC8vNzggMTA2IDE4NlxyXG5cclxuXHQvL9CU0L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0Lkg0YbQstC10YIg0LTQu9GPINC+0YLQvtCx0YDQsNC20LXQvdC40Y8g0L7RiNC40LHQutC4XHJcblx0Y29sb3ItZXJyb3I6XHRcdFx0XHQjZmYwMDAwLC8vMjU1ICAwICAgMFxyXG4pO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAzLiDQotCe0KfQmtCYINCf0JXQoNCV0JrQm9Cu0KfQldCd0JjQr1xyXG4kbGliLWJyZWFrcG9pbnRzOiAoXHJcblx0bm9ybWFsOlx0XHQnMTIwMHB4JyxcdC8vU2l0ZS13aWR0aCAxMTcwXHJcblx0bmFycm93Olx0XHQnOTkycHgnLFx0Ly8gU2l0ZS13aWR0aCA5NzBcclxuXHRtb2JpbGU6XHRcdCc3NjhweCcsXHQvLyBTaXRlLXdpZHRoIDc1MFxyXG5cdG1vYmlsZVhMOlx0JzcwMHB4JyxcdC8vIFNpdGUtd2lkdGggLi4uXHJcblx0bW9iaWxlTDpcdCc2MDBweCcsXHQvLyBTaXRlLXdpZHRoIC4uLlxyXG5cdG1vYmlsZU06XHQnNTQwcHgnLFx0Ly8gU2l0ZS13aWR0aCAuLi5cclxuXHRtb2JpbGVTOlx0JzQ2MHB4JyxcdC8vIFNpdGUtd2lkdGggLi4uXHJcblx0bW9iaWxlWFM6XHQnMzYwcHgnLFx0Ly8gU2l0ZS13aWR0aCAuLi5cclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gNC4g0KjQmNCg0JjQndCQINCh0JDQmdCi0JBcclxuJGxpYi13aWR0aC1jb250YWluZXItbGFyZ2UgIDogMTE3MHB4O1xyXG4kbGliLXdpZHRoLWNvbnRhaW5lci1ub3JtYWwgOiA5NzBweDtcdC8vIC0+IGJyZWFrcG9pbnRzOm5vcm1hbFxyXG4kbGliLXdpZHRoLWNvbnRhaW5lci1uYXJyb3cgOiA3NTBweDtcdC8vIC0+IGJyZWFrcG9pbnRzOm5hcnJvd1xyXG4kbGliLXdpZHRoLWNvbnRhaW5lci1tb2JpbGUgOiAxMDAlOyBcdC8vIC0+IGJyZWFrcG9pbnRzOm1vYmlsZVxyXG4kbGliLW1pbi13aWR0aFx0XHRcdCBcdDogMzIwcHg7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDUuICDQqNCg0JjQpNCiXHJcbi8vIDUuMSDQodC10LzQtdC50YHRgtCy0L4g0YjRgNC40YTRgtCwXHJcbiRsaWItZm9udC1mYW1pbHkgOiBPcGVuU2Fuc1JlZ3VsYXIsIHNhbnMtc2VyaWY7XHJcblxyXG4vLyA1LjIg0KDQsNC30LzQtdGAINGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtc2l6ZSA6IDE2cHg7XHJcblxyXG4kbGliLXR5cGUtc2NhbGUgOiAoXHJcblx0XHQtNTogMC42ODhyZW0sIC8vICAgIDE2cHggLT4gMTFweFxyXG5cdFx0LTQ6IDAuNzVyZW0sIC8vICAgICAxNnB4IC0+IDEycHggICAgc21hbGxlciB0ZXh0ICAgIC9zbWFsbGVyIHN1YmhlYWRpbmdcclxuXHRcdC0zOiAwLjgxNXJlbSwgLy8gICAgMTZweCAtPiAxM3B4ICAgIHNtYWxsIHRleHRcclxuXHRcdC0yOiAwLjg3NXJlbSwgLy8gICAgMTZweCAtPiAxNHB4ICAgIG5vcm1hbCB0ZXh0ICAgICAvc21hbGwgc3ViaGVhZGluZ1xyXG5cdFx0LTE6IDAuOTM4cmVtLCAvLyAgICAxNnB4IC0+IDE1cHhcclxuXHRcdDA6IDFyZW0sIC8vICAgICAgICAgMTZweCAtPiAxNnB4ICAgIGJpZyB0ZXh0ICAgICAgICAvc21hbGwgaGVhZGluZ1xyXG5cdFx0MTogMS4xMjVyZW0sIC8vICAgICAxNnB4IC0+IDE4cHggICAgdmVyeSBiaWcgdGV4dCAgIC9oZWFkaW5nXHJcblx0XHQyOiAxLjM3NXJlbSwgLy8gICAgIDE2cHggLT4gMjJweCAgICAgICAgICAgICAgICAgICAgL2JpZyBoZWFkaW5nXHJcblx0XHQzOiAxLjg3NXJlbSwgLy8gICAgIDE2cHggLT4gMzBweCAgICAgICAgICAgICAgICAgICAgL21haW4gaGVhZGluZ1xyXG5cdFx0NDogMS44NzVyZW0sIC8vICAgICAxNnB4IC0+IDMwcHggICAgICAgICAgICAgICAgICAgIC9tYWluIGhlYWRpbmdcclxuXHJcblx0XHQvL0V4dGVuZCBmb250c1xyXG5cdFx0ZTA6IDEuMDYzcmVtLCAvLyAgICAxNnB4IC0+IDE3cHhcclxuXHRcdGUxOiAxLjE4OHJlbSwgLy8gICAgMTZweCAtPiAxOXB4XHJcblx0XHRlMjogMS4yNXJlbSwgLy8gICAgIDE2cHggLT4gMjBweFxyXG5cdFx0ZTM6IDEuNjg4cmVtLCAvLyAgICAxNnB4IC0+IDI3cHhcclxuXHRcdGU0OiAyLjEyNXJlbSAvLyAgICAgMTZweCAtPiAzNHB4XHJcbik7XHJcblxyXG4kbGliLWZvbnQtc2l6ZS1iYXNlIDogbGliLWZvbnQtc2l6ZSgwKTtcclxuJGxpYi1mb250LXNpemUtaW5wdXQgOiBsaWItZm9udC1zaXplKC0yKTtcclxuXHJcbi8vIDUuMyDQndCw0YHRi9GJ0LXQvdC90L7RgdGC0Ywg0YjRgNC40YTRgtCwXHJcbiRsaWItZm9udC13ZWlnaHQtbm9ybWFsOiA0MDA7XHJcbiRsaWItZm9udC13ZWlnaHQtYm9sZDogNzAwO1xyXG5cclxuLy8gNS40INCm0LLQtdGCINGI0YDQuNGE0YLQvtCyXHJcbiRsaWItY29sb3ItbWFpbi10aXRsZSA6IGxpYi1jb2xvcihhY2NlbnQtYmFzZSk7XHJcbiRsaWItY29sb3ItYmlnLXRpdGxlIDogbGliLWNvbG9yKHNlY29uZGFyeS1kYXJrKTtcclxuJGxpYi1jb2xvci10aXRsZSA6IGxpYi1jb2xvcihzZWNvbmRhcnktZGFyayk7XHJcbiRsaWItY29sb3ItdGV4dCA6IGxpYi1jb2xvcihwcmltYXJ5LWRhcmtlcik7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDYuICDQodCi0KDQntCa0JBcclxuLy8gNi4xINCS0YvRgdC+0YLQsCDRgdGC0YDQvtC60LhcclxuJGxpYi1saW5lLWhlaWdodC1iYXNlIDogKCRsaWItZm9udC1zaXplLWJhc2UgKiAxLjI1KTtcclxuXHJcbiRsaWItbGluZS1oZWlnaHRzIDogKFxyXG5cdFx0LTU6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC00OiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtMzogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0LTI6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC0xOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQwOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQxOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4xMjUpLFxyXG5cdFx0MjogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMzc1KSxcclxuXHRcdDM6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjg3NSksXHJcblxyXG5cdFx0Ly9FeHRlbmQgbGluZXNcclxuXHRcdGUwOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4wNjMpLFxyXG5cdFx0ZTE6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjE4OCksXHJcblx0XHRlMjogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMjUpXHJcbik7XHJcblxyXG4vLyA2LjIg0JLQtdGA0YXQvdC40Lkg0L7RgtGB0YPQvyDRgdGC0YDQvtC60LhcclxuJGxpYi1wYWRkaW5nLXRvcC1iYXNlIDogJGxpYi1mb250LXNpemUtYmFzZSAqIDEuMjU7XHJcblxyXG4kbGliLXBhZGRpbmctdG9wIDogKFxyXG5cdFx0LTU6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuNjg4LFxyXG5cdFx0LTQ6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuNzUsXHJcblx0XHQtMzogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC44MTUsXHJcblx0XHQtMjogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC44NzUsXHJcblx0XHQtMTogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC45MzgsXHJcblx0XHQwOiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAxLFxyXG5cdFx0MTogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMS4xMjUsXHJcblx0XHQyOiAoJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMS4zNzUpLFxyXG5cdFx0MzogKCRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuODc1KVxyXG4pO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA3LiDQn9Cw0YDQsNC80LXRgtGA0Ysgei3QvtGB0LhcclxuJGxpYi16LWluZGV4ZXM6IChcclxuXHRcdFwid3JhcHBlci1jb3ZlclwiLC8v0LTQu9GPINCx0LvQvtC60LAg0L/QtdGA0LXQutGA0YvQstCw0Y7RidC10LPQviB3cmFwcGVyINC/0YDQuCDQvtGC0LrRgNGL0YLQvtC8INC80LXQvdGOXHJcblx0XHRcIm1vZGFsXCIsXHJcblx0XHRcImZpeGVkXCIsXHJcblx0XHRcInBvcHVwXCIsXHJcblx0XHRcImhlYWRlci1iYXNrZXRcIixcclxuXHRcdFwiaGVhZGVyLWNvbnRyb2xcIixcclxuXHRcdFwiaGVhZGVyLWJhbm5lclwiLFxyXG5cdFx0XCJoZWFkZXItaW5mb1wiLFxyXG5cdFx0XCJoZWFkZXJcIixcclxuXHRcdFwiYXNpZGVcIixcclxuXHRcdFwicGFnZVwiLFxyXG5cdFx0XCJmb290ZXJcIlxyXG4pO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iLCIvLyDQpNCj0J3QmtCm0JjQmFxyXG5cclxuLy8g0JLQkNCW0J3QniEhIVxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwibGliLVwiINCyINC90LDRh9Cw0LvQtSDRhNGD0L3QutGG0LjQuSDRjdGC0L7Qs9C+INGE0LDQudC70LBcclxuXHJcbi8vIDEuINCf0L7Qu9GD0YfQuNGC0Ywg0LrQu9Cw0YHRgS5cclxuQGZ1bmN0aW9uIGxpYi1nZXQtY2xhc3MoJGNsYXNzLW5hbWUpIHtcclxuXHRAcmV0dXJuICcuJyArICRsaWItY2xhc3MtcHJlZml4ICsgJGNsYXNzLW5hbWU7XHJcbn1cclxuXHJcbi8vIDIuINCf0L7Qu9GD0YfQuNGC0Ywg0LrQu9Cw0YHRgS3QvNC+0LTQuNGE0LjQutCw0YLQvtGALlxyXG5AZnVuY3Rpb24gbGliLWdldC1tb2RpZmllcigkbW9kaWZpZXItbmFtZSkge1xyXG5cdEByZXR1cm4gJy5fJyArICRsaWItY2xhc3MtcHJlZml4ICsgJG1vZGlmaWVyLW5hbWU7XHJcbn1cclxuXHJcbi8vIDMuINCf0L7Qu9GD0YfQuNGC0Ywg0LfQvdCw0YfQtdC90LjQtSDQuNC3INC80LDRgdC40LLQsCAobWFwKS5cclxuQGZ1bmN0aW9uIGxpYi12YWwoJG1hcCwgJGtleSkge1xyXG5cdEBpZiBtYXAtaGFzLWtleSgkbWFwLCAka2V5KSB7XHJcblx0XHRAcmV0dXJuIG1hcC1nZXQoJG1hcCwgJGtleSk7XHJcblx0fSBAZWxzZSB7XHJcblx0XHRAd2FybiBcIlVua25vd24gYCN7JGtleX1gIGluIGAjeyRtYXB9YC5cIjtcclxuXHRcdEByZXR1cm4gbnVsbDtcclxuXHR9XHJcbn1cclxuXHJcbi8vIDQuINCf0L7Qu9GD0YfQuNGC0Ywg0YbQstC10YJcclxuQGZ1bmN0aW9uIGxpYi1jb2xvcigka2V5KSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItcGFsZXR0ZSwgJGtleSk7XHJcbn1cclxuXHJcbi8vIDUuINCf0L7Qu9GD0YfQuNGC0Ywg0YLQvtGH0LrRgyDQv9C10YDQtdC60LvRjtGH0LXQvdC40Y9cclxuQGZ1bmN0aW9uIGxpYi1icmVha3BvaW50cygka2V5KSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItYnJlYWtwb2ludHMsICRrZXkpO1xyXG59XHJcblxyXG4vLyA2LiDQn9C+0LvRg9GH0LjRgtGMINGA0LDQt9C80LXRgCDRiNGA0LjRhNGC0LBcclxuQGZ1bmN0aW9uIGxpYi1mb250LXNpemUoJGxldmVsKSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItdHlwZS1zY2FsZSwgJGxldmVsKTtcclxufVxyXG5cclxuLy8gNy4g0J/QvtC70YPRh9C40YLRjCDQstGL0YHQvtGC0YMg0YHRgtGA0L7QutC4XHJcbkBmdW5jdGlvbiBsaWItbGluZS1oZWlnaHQoJGxldmVsKSB7XHJcblx0QHJldHVybiBtYXAtZ2V0KCRsaWItbGluZS1oZWlnaHRzLCAkbGV2ZWwpO1xyXG59XHJcblxyXG4vLyA4LiDQn9C+0LvRg9GH0LjRgtGMINCy0LXRgNGF0L3QuNC5INC+0YLRgdGC0YPQvyDRgdGC0YDQvtC60LhcclxuQGZ1bmN0aW9uIGxpYi1saW5lLXRvcCgkbGV2ZWwpIHtcclxuXHRAcmV0dXJuIG1hcC1nZXQoJGxpYi1wYWRkaW5nLXRvcCwgJGxldmVsKTtcclxufVxyXG5cclxuLy8gOS4g0J/QvtC70YPRh9C40YLRjCDRgNCw0LfQvNC10YnQtdC90LjQtSDQv9C+IHot0L7RgdC4XHJcbkBmdW5jdGlvbiBsaWIteigkbmFtZSkge1xyXG5cdEBpZiBpbmRleCgkbGliLXotaW5kZXhlcywgJG5hbWUpIHtcclxuXHRcdEByZXR1cm4gKGxlbmd0aCgkbGliLXotaW5kZXhlcykgLSBpbmRleCgkbGliLXotaW5kZXhlcywgJG5hbWUpKSArIDE7XHJcblx0fSBAZWxzZSB7XHJcblx0XHRAd2FybiAnVGhlcmUgaXMgbm8gaXRlbSBcIiN7JG5hbWV9XCIgaW4gdGhpcyBsaXN0OyBjaG9vc2Ugb25lIG9mOiAjeyRsaWItei1pbmRleGVzfSc7XHJcblx0XHRAcmV0dXJuIG51bGw7XHJcblx0fVxyXG59IiwiLy8g0KTQo9Cd0JrQptCY0JhcclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcImxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0YTRg9C90LrRhtC40Lkg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLyAxLiDQn9C+0LvRg9GH0LjRgtGMINC60LvQsNGB0YEuXHJcbkBmdW5jdGlvbiBsaWItZ2V0LWNsYXNzKCRjbGFzcy1uYW1lKSB7XHJcblx0QHJldHVybiAnLicgKyAkbGliLWNsYXNzLXByZWZpeCArICRjbGFzcy1uYW1lO1xyXG59XHJcblxyXG4vLyAyLiDQn9C+0LvRg9GH0LjRgtGMINC60LvQsNGB0YEt0LzQvtC00LjRhNC40LrQsNGC0L7RgC5cclxuQGZ1bmN0aW9uIGxpYi1nZXQtbW9kaWZpZXIoJG1vZGlmaWVyLW5hbWUpIHtcclxuXHRAcmV0dXJuICcuXycgKyAkbGliLWNsYXNzLXByZWZpeCArICRtb2RpZmllci1uYW1lO1xyXG59XHJcblxyXG4vLyAzLiDQn9C+0LvRg9GH0LjRgtGMINC30L3QsNGH0LXQvdC40LUg0LjQtyDQvNCw0YHQuNCy0LAgKG1hcCkuXHJcbkBmdW5jdGlvbiBsaWItdmFsKCRtYXAsICRrZXkpIHtcclxuXHRAaWYgbWFwLWhhcy1rZXkoJG1hcCwgJGtleSkge1xyXG5cdFx0QHJldHVybiBtYXAtZ2V0KCRtYXAsICRrZXkpO1xyXG5cdH0gQGVsc2Uge1xyXG5cdFx0QHdhcm4gXCJVbmtub3duIGAjeyRrZXl9YCBpbiBgI3skbWFwfWAuXCI7XHJcblx0XHRAcmV0dXJuIG51bGw7XHJcblx0fVxyXG59XHJcblxyXG4vLyA0LiDQn9C+0LvRg9GH0LjRgtGMINGG0LLQtdGCXHJcbkBmdW5jdGlvbiBsaWItY29sb3IoJGtleSkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLXBhbGV0dGUsICRrZXkpO1xyXG59XHJcblxyXG4vLyA1LiDQn9C+0LvRg9GH0LjRgtGMINGC0L7Rh9C60YMg0L/QtdGA0LXQutC70Y7Rh9C10L3QuNGPXHJcbkBmdW5jdGlvbiBsaWItYnJlYWtwb2ludHMoJGtleSkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLWJyZWFrcG9pbnRzLCAka2V5KTtcclxufVxyXG5cclxuLy8gNi4g0J/QvtC70YPRh9C40YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwXHJcbkBmdW5jdGlvbiBsaWItZm9udC1zaXplKCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLXR5cGUtc2NhbGUsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDcuINCf0L7Qu9GD0YfQuNGC0Ywg0LLRi9GB0L7RgtGDINGB0YLRgNC+0LrQuFxyXG5AZnVuY3Rpb24gbGliLWxpbmUtaGVpZ2h0KCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbWFwLWdldCgkbGliLWxpbmUtaGVpZ2h0cywgJGxldmVsKTtcclxufVxyXG5cclxuLy8gOC4g0J/QvtC70YPRh9C40YLRjCDQstC10YDRhdC90LjQuSDQvtGC0YHRgtGD0L8g0YHRgtGA0L7QutC4XHJcbkBmdW5jdGlvbiBsaWItbGluZS10b3AoJGxldmVsKSB7XHJcblx0QHJldHVybiBtYXAtZ2V0KCRsaWItcGFkZGluZy10b3AsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDkuINCf0L7Qu9GD0YfQuNGC0Ywg0YDQsNC30LzQtdGJ0LXQvdC40LUg0L/QviB6LdC+0YHQuFxyXG5AZnVuY3Rpb24gbGliLXooJG5hbWUpIHtcclxuXHRAaWYgaW5kZXgoJGxpYi16LWluZGV4ZXMsICRuYW1lKSB7XHJcblx0XHRAcmV0dXJuIChsZW5ndGgoJGxpYi16LWluZGV4ZXMpIC0gaW5kZXgoJGxpYi16LWluZGV4ZXMsICRuYW1lKSkgKyAxO1xyXG5cdH0gQGVsc2Uge1xyXG5cdFx0QHdhcm4gJ1RoZXJlIGlzIG5vIGl0ZW0gXCIjeyRuYW1lfVwiIGluIHRoaXMgbGlzdDsgY2hvb3NlIG9uZSBvZjogI3skbGliLXotaW5kZXhlc30nO1xyXG5cdFx0QHJldHVybiBudWxsO1xyXG5cdH1cclxufSIsIi8vINCY0LzQv9C+0YDRgiDRhNCw0LnQu9C+0LJcclxuQGltcG9ydCAndmFyaWFibGVzJztcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyDQktCQ0JbQndCeISEhIFxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwibGliLVwiINCyINC90LDRh9Cw0LvQtSDQv9C10YDQtdC80LXQvdC90YvRhSDQuCDQv9GA0LjQvNC10YHQtdC5INGN0YLQvtCz0L4g0YTQsNC50LvQsFxyXG5cclxuLy8g0KbQstC10YLQsFxyXG4kbGliLWNvbG9yLXJhdGluZy1pY29uLWJhc2UgOiBsaWItY29sb3IocHJpbWFyeS1iYXNlLWRhcmspO1xyXG4kbGliLWNvbG9yLXNoYWRvdy1yYXRpbmctaWNvbiA6IGxpYi1jb2xvcihwcmltYXJ5LWRhcmtlcik7XHJcbiRsaWItY29sb3ItdHJpYW5nbGUgOiBsaWItY29sb3IoYWNjZW50LWJhc2UpO1xyXG4kbGliLWNvbG9yLWNsb3NlIDogbGliLWNvbG9yKHByaW1hcnktZGFyayk7XHJcbiRsaWItY29sb3ItY2xvc2UtaG92ZXIgOiBsaWItY29sb3IoYWNjZW50LWJhc2UtYnJpZ2h0KTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyDQmtC70LDRgdGB0YtcclxuJGxpYi1ncmlkLWNsYXNzLWRlZmF1bHQgOiBsaWItZ2V0LWNsYXNzKCdncmlkJyk7XHJcbiRsaWItZGV0YWlsIDogbGliLWdldC1jbGFzcygnZGV0YWlsJyk7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gMS4g0KPRgdGC0LDQvdC+0LLQutCwINGC0L7Rh9C60Lgg0L/QtdGA0LXQutC70Y7Rh9C10L3QuNGPXHJcbkBtaXhpbiBsaWItcmVzcG9uZC10bygka2V5KSB7XHJcblxyXG5cdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGggOiAje2xpYi1icmVha3BvaW50cygka2V5KX0pIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyAyLiDQqNC40YDQuNC90LAg0Y/Rh9C10LnQutC4XHJcbi8vIDIuMS4g0JTQu9GPINGB0LXRgtC60Lgg0LjQtyAxNC3RgtC4INC60L7Qu9C+0L3QvtC6XHJcbkBtaXhpbiBsaWItYm94MTQoJGNlbGw6MTQpIHtcclxuXHRmbG9hdCA6IGxlZnQ7XHJcblx0d2lkdGggOiAoMTAwJSAqICRjZWxsIC8gMTQpO1xyXG59XHJcblxyXG4vLyAyLjIuINCU0LvRjyDRgdC10YLQutC4INC40LcgMTIt0YLQuCDQutC+0LvQvtC90L7QulxyXG5AbWl4aW4gbGliLWJveDEyKCRjZWxsOjEyKSB7XHJcblx0ZmxvYXQgOiBsZWZ0O1xyXG5cdHdpZHRoIDogKDEwMCUgKiAkY2VsbCAvIDEyKTtcclxufVxyXG5cclxuLy8gMi4zLiDQlNC70Y8g0YHQtdGC0LrQuCDQuNC3IDEwLdGC0Lgg0LrQvtC70L7QvdC+0LpcclxuQG1peGluIGxpYi1ib3gxMCgkY2VsbDoxMCkge1xyXG5cdGZsb2F0IDogbGVmdDtcclxuXHR3aWR0aCA6ICgxMDAlICogJGNlbGwgLyAxMCk7XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gMy4g0J/QsNGA0LDQvNC10YLRgNGLINGB0LXRgtC60Lgg0LrQvtC90YLQtdC90YLQsFxyXG4vLyDQo9GB0YLQsNC90LDQstC70LjQstCw0LXRgiDQvtGB0L3QvtCy0L3Ri9C1INC/0LDRgNCw0LzQtdGC0YDRiyDQsdC+0LrQvtCy0L7QuSDQv9Cw0L3QtdC70Lgg0Lgg0LrQvtC90YLQtdC90YLQsFxyXG4vLyDRgdCw0LnRgtCwICjQuNGFINC90LDQu9C40YfQuNC1LCDRiNC40YDQuNC90YMg0Lgg0YDQsNGB0L/QvtC70L7QttC10L3QuNC1KSDQsiDQt9Cw0LLQuNGB0LjQvNC+0YLQuCDQvtGCOlxyXG4vLyAtINC90LDQu9C40YfQuNGPINC4INGI0LjRgNC40L3RiyDQsdC+0LrQvtCy0L7QuSDQv9Cw0L3QtdC70Lgg0LIgcHg7XHJcbi8vIC0g0YjQuNGA0LjQvdGLINGB0LDQudGC0LAg0Lgg0LLQtdC70LjRh9C40L3RiyDQstC90YPRgtGA0LXQvdC90LjRhSDQvtGC0YHRg9C/0L7QsiDRgdCw0LnRgtCwINCyIHB4O1xyXG4vLyAtINC90LDQu9C40YfQuNGPINC4INC30L3QsNGH0LXQvdC40Y8g0YHQstC+0LnRgdGC0LLQsCBmbG9hdCDQtNC70Y8g0Y3RgtC40YUg0LrQvtC70L7QvdC+0LouXHJcblxyXG5AbWl4aW4gbGliLWdyaWQtcGFyYW0oXHJcblx0JGdyaWQtY2xhc3M6ICRsaWItZ3JpZC1jbGFzcy1kZWZhdWx0LFxyXG5cdCRwYWRkaW5nLWNvbnRhaW5lci1weDogMTVweCxcclxuXHQkd2lkdGgtY29udGFpbmVyLXB4OiAxMDAwcHgsXHJcblx0JHdpZHRoLWFzaWRlLXB4OiAyMDBweCxcclxuXHQkYXNpZGUtZmxvYXQ6IG5vbmUsLy9ub25lLGxlZnQscmlnaHQsb25seS13aWR0aFxyXG5cdCRjb250ZW50LWZsb2F0OiBvbmx5LXdpZHRoLy9sZWZ0LHJpZ2h0LG9ubHktd2lkdGgsb25seS1mdWxsLXdpZHRoXHJcbikge1xyXG5cdCR3aWR0aC1jb250YWluZXItYWJzb2x1dGUgOiAoJHdpZHRoLWNvbnRhaW5lci1weCAvIDFweCk7IC8v0L/RgNC10L7QsdGA0LDQt9C+0LLQsNC90LjQtSDQuiDRh9C40YHQu9GDXHJcblx0JHBhZGRpbmctY29udGFpbmVyLWFic29sdXRlIDogKCRwYWRkaW5nLWNvbnRhaW5lci1weCAvIDFweCk7IC8v0L/RgNC10L7QsdGA0LDQt9C+0LLQsNC90LjQtSDQuiDRh9C40YHQu9GDXHJcblx0JHdpZHRoLWFzaWRlLWFic29sdXRlIDogKCR3aWR0aC1hc2lkZS1weCAvIDFweCk7IC8v0L/RgNC10L7QsdGA0LDQt9C+0LLQsNC90LjQtSDQuiDRh9C40YHQu9GDXHJcblx0JHdpZHRoLWNhbGN1bGF0ZWQgOiAoJHdpZHRoLWNvbnRhaW5lci1hYnNvbHV0ZSAtICgyICogJHBhZGRpbmctY29udGFpbmVyLWFic29sdXRlKSk7XHJcblx0JHdpZHRoLWFzaWRlIDogKCR3aWR0aC1hc2lkZS1hYnNvbHV0ZSAqIDEwMCUgLyAkd2lkdGgtY2FsY3VsYXRlZCk7XHJcblx0JHdpZHRoLWNvbnRlbnQgOiAoKCR3aWR0aC1jYWxjdWxhdGVkIC0gJHdpZHRoLWFzaWRlLWFic29sdXRlKSAqIDEwMCUgLyAkd2lkdGgtY2FsY3VsYXRlZCk7XHJcblxyXG5cdEBpZiAkYXNpZGUtZmxvYXQgPT0gbm9uZSB7XHJcblx0fSBAZWxzZSBpZiAkYXNpZGUtZmxvYXQgPT0gb25seS13aWR0aCB7XHJcblx0XHQjeyRncmlkLWNsYXNzfV9hc2lkZSB7XHJcblx0XHRcdHdpZHRoIDogJHdpZHRoLWFzaWRlO1xyXG5cdFx0fVxyXG5cdH0gQGVsc2Uge1xyXG5cdFx0I3skZ3JpZC1jbGFzc31fYXNpZGUge1xyXG5cdFx0XHRmbG9hdCA6ICRhc2lkZS1mbG9hdDtcclxuXHRcdFx0d2lkdGggOiAkd2lkdGgtYXNpZGU7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRAaWYgJGNvbnRlbnQtZmxvYXQgPT0gb25seS13aWR0aCB7XHJcblx0XHQjeyRncmlkLWNsYXNzfV9jb250ZW50IHtcclxuXHRcdFx0d2lkdGggOiAkd2lkdGgtY29udGVudDtcclxuXHRcdH1cclxuXHR9IEBlbHNlIGlmICRjb250ZW50LWZsb2F0ID09IG9ubHktZnVsbC13aWR0aCB7XHJcblx0XHQjeyRncmlkLWNsYXNzfV9jb250ZW50IHtcclxuXHRcdFx0d2lkdGggOiAxMDAlO1xyXG5cdFx0fVxyXG5cdH0gQGVsc2Uge1xyXG5cdFx0I3skZ3JpZC1jbGFzc31fY29udGVudCB7XHJcblx0XHRcdGZsb2F0IDogJGNvbnRlbnQtZmxvYXQ7XHJcblx0XHRcdHdpZHRoIDogJHdpZHRoLWNvbnRlbnQ7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDQuINCf0LDRgNCw0LzQtdGC0YDRiyDRgtC10LrRgdGC0LBcclxuLy8gNC4xINCe0YHQvdC+0LLQvdGL0LUg0L/QsNGA0LDQvNC10YLRgNGLXHJcbkBtaXhpbiBsaWItdGV4dC1iYXNlLXBhcmFtKCRsZXZlbDogMCkge1xyXG5cdHBhZGRpbmctdG9wIDogbGliLWxpbmUtdG9wKCRsZXZlbCk7XHJcblxyXG5cdGZvbnQtc2l6ZSAgIDogbGliLWZvbnQtc2l6ZSgkbGV2ZWwpO1xyXG5cdGxpbmUtaGVpZ2h0IDogbGliLWxpbmUtaGVpZ2h0KCRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDQuMiDQl9Cw0YLQtdC80L3QtdC90LjQtSDRgtC10LrRgdGC0LBcclxuQG1peGluIGxpYi10ZXh0LWJsYWNrb3V0KFxyXG5cdCR2ZXJ0aWNhbC1wb3NpdGlvbiAgOiBcImJvdHRvbVwiLFxyXG5cdCRyaWdodFx0XHRcdFx0OiAwLFxyXG5cdCRoZWlnaHQgICAgICAgICAgICAgOiAxMDAlLFxyXG5cdCR3aWR0aCAgICAgICAgICAgICAgOiA4cHgsXHJcblx0JGNvbG9yMSAgICAgICAgICAgICA6IDI1NSxcclxuXHQkY29sb3IyICAgICAgICAgICAgIDogMjU1LFxyXG5cdCRjb2xvcjMgICAgICAgICAgICAgOiAyNTVcclxuKSB7XHJcblx0JGJnMSA6IHJnYmEoJGNvbG9yMSwgJGNvbG9yMiwgJGNvbG9yMywgMC4wKTtcclxuXHQkYmcyIDogcmdiYSgkY29sb3IxLCAkY29sb3IyLCAkY29sb3IzLCAwLjgpO1xyXG5cdCRiZzMgOiByZ2JhKCRjb2xvcjEsICRjb2xvcjIsICRjb2xvcjMsIDEuMCk7XHJcblxyXG5cdCY6YmVmb3JlIHtcclxuXHRcdGNvbnRlbnQgICAgICAgICAgICAgICAgICAgOiAnJztcclxuXHRcdHBvc2l0aW9uICAgICAgICAgICAgICAgICAgOiBhYnNvbHV0ZTtcclxuXHRcdCN7JHZlcnRpY2FsLXBvc2l0aW9ufSAgICAgOiAwO1xyXG5cdFx0cmlnaHQgICAgICAgICAgICAgICAgICAgICA6ICRyaWdodDtcclxuXHRcdGhlaWdodCAgICAgICAgICAgICAgICAgICAgOiAkaGVpZ2h0O1xyXG5cdFx0d2lkdGggICAgICAgICAgICAgICAgICAgICA6ICR3aWR0aDtcclxuXHRcdHotaW5kZXggICAgICAgICAgICAgICAgICAgOiAxO1xyXG5cclxuXHRcdGJhY2tncm91bmQgICAgICAgICAgICAgICAgOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRiZzEsICRiZzIsICRiZzMpO1xyXG5cdH1cclxufVxyXG5cclxuLy8gNC4zINCY0LfQvNC10L3QtdC90LjQtSDRhtCy0LXRgtCwINC30LDRgtC10LzQvdC10L3QuNGPINGC0LXQutGB0YLQsFxyXG5AbWl4aW4gbGliLXRleHQtYmxhY2tvdXQtY2hhbmdlKFxyXG5cdCRjb2xvcjEgICAgIDogMjU1LFxyXG5cdCRjb2xvcjIgICAgIDogMjUyLFxyXG5cdCRjb2xvcjMgICAgIDogMjM1XHJcbikge1xyXG5cdCRiZzEgOiByZ2JhKCRjb2xvcjEsICRjb2xvcjIsICRjb2xvcjMsIDAuMCk7XHJcblx0JGJnMiA6IHJnYmEoJGNvbG9yMSwgJGNvbG9yMiwgJGNvbG9yMywgMC44KTtcclxuXHQkYmczIDogcmdiYSgkY29sb3IxLCAkY29sb3IyLCAkY29sb3IzLCAxLjApO1xyXG5cclxuXHQmOmJlZm9yZSB7XHJcblx0XHRiYWNrZ3JvdW5kIDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAkYmcxLCAkYmcyLCAkYmczKTtcclxuXHR9XHJcblxyXG59XHJcblxyXG4vLyA0LjQg0J/QtdGA0LXQvdC+0YEv0L7QsdGA0YvQsiDRgtC10LrRgdGC0LBcclxuQG1peGluIGxpYi10ZXh0LWh5cGhlbnMoJHR5cGUgOiBoeXBoZW5zKSB7XHJcblx0QGlmICR0eXBlID09IGxhc3RFbGxpcHNpcyB7XHJcblx0XHRvdmVyZmxvdyAgICAgIDogaGlkZGVuO1xyXG5cdFx0dGV4dC1vdmVyZmxvdyA6IGVsbGlwc2lzO1xyXG5cdFx0d2hpdGUtc3BhY2UgICA6IG5vd3JhcDtcclxuXHRcdG92ZXJmbG93LXdyYXAgOiBub3JtYWw7XHJcblx0XHR3b3JkLXdyYXAgICAgIDogbm9ybWFsO1xyXG5cdFx0aHlwaGVucyAgICAgICA6IG5vbmU7XHJcblx0fSBAZWxzZSBpZiAkdHlwZSA9PSBsYXN0Q2xpcCB7XHJcblx0XHRvdmVyZmxvdyAgICAgIDogaGlkZGVuO1xyXG5cdFx0dGV4dC1vdmVyZmxvdyA6IGNsaXA7XHJcblx0XHR3aGl0ZS1zcGFjZSAgIDogbm93cmFwO1xyXG5cdFx0b3ZlcmZsb3ctd3JhcCA6IG5vcm1hbDtcclxuXHRcdHdvcmQtd3JhcCAgICAgOiBub3JtYWw7XHJcblx0XHRoeXBoZW5zICAgICAgIDogbm9uZTtcclxuXHR9IEBlbHNlIGlmICR0eXBlID09IGJyZWFrd29yZCB7XHJcblx0XHRvdmVyZmxvdy13cmFwIDogYnJlYWstd29yZDtcclxuXHRcdHdvcmQtd3JhcCAgICAgOiBicmVhay13b3JkO1xyXG5cdH0gQGVsc2UgaWYgJHR5cGUgPT0gbGltaXTQoHlwaGVucyB7XHJcblx0XHRvdmVyZmxvdyAgICAgIDogaGlkZGVuO1xyXG5cdFx0b3ZlcmZsb3ctd3JhcCA6IGJyZWFrLXdvcmQ7XHJcblx0XHR3b3JkLXdyYXAgICAgIDogYnJlYWstd29yZDtcclxuXHRcdGh5cGhlbnMgICAgICAgOiBhdXRvO1xyXG5cdH0gQGVsc2UgeyAvL2h5cGhlbnNcclxuXHRcdG92ZXJmbG93LXdyYXAgOiBicmVhay13b3JkO1xyXG5cdFx0d29yZC13cmFwICAgICA6IGJyZWFrLXdvcmQ7XHJcblx0XHRoeXBoZW5zICAgICAgIDogYXV0bztcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gNS4g0J/QsNGA0LDQvNC10YLRgNGLINC40LrQvtC90L7Rh9C90L7Qs9C+INGI0YDQuNGE0YLQsFxyXG5AbWl4aW4gbGliLWZvbnQtaWNvbihcclxuXHQkZm9udC13ZWlnaHQ6IG5vcm1hbCxcclxuXHQkbGluZS1oZWlnaHQ6IDFcclxuKSB7XHJcblx0Zm9udC1mYW1pbHkgICAgICAgICAgICAgOiAnaWNvbW9vbic7XHJcblx0Zm9udC1zdHlsZSAgICAgICAgICAgICAgOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQgICAgICAgICAgICAgOiAkZm9udC13ZWlnaHQ7XHJcblx0Zm9udC12YXJpYW50ICAgICAgICAgICAgOiBub3JtYWw7XHJcblx0dGV4dC10cmFuc2Zvcm0gICAgICAgICAgOiBub25lO1xyXG5cdGxpbmUtaGVpZ2h0ICAgICAgICAgICAgIDogJGxpbmUtaGVpZ2h0O1xyXG5cclxuXHQvLyBCZXR0ZXIgRm9udCBSZW5kZXJpbmcgPT09PT09PT09PT09XHJcblx0LXdlYmtpdC1mb250LXNtb290aGluZyAgOiBhbnRpYWxpYXNlZDtcclxuXHQtbW96LW9zeC1mb250LXNtb290aGluZyA6IGdyYXlzY2FsZTtcclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyA2LiDQmNC60L7QvdC60Lgg0YDQtdC50YLQuNC90LPQsCAo0LfQstC10LfQtNGLKVxyXG5AbWl4aW4gbGliLXJhdGluZy1pY29uKFxyXG5cdCRjb2xvcjogJGxpYi1jb2xvci1yYXRpbmctaWNvbi1iYXNlLFxyXG5cdCR0ZXh0LXNoYWRvdzogZmFsc2VcclxuKSB7XHJcblx0JjpiZWZvcmUge1xyXG5cdFx0Y29udGVudCAgICAgICAgOiAnXFxmMDA1XFxmMDA1XFxmMDA1XFxmMDA1XFxmMDA1JztcclxuXHRcdGRpc3BsYXkgICAgICAgIDogaW5saW5lLWJsb2NrO1xyXG5cdFx0cGFkZGluZy1sZWZ0ICAgOiAycHg7XHJcblxyXG5cdFx0Y29sb3IgICAgICAgICAgOiAkY29sb3I7XHJcblx0XHRsZXR0ZXItc3BhY2luZyA6IDJweDtcclxuXHRcdHdoaXRlLXNwYWNlICAgIDogbm93cmFwO1xyXG5cclxuXHRcdEBpZiAkdGV4dC1zaGFkb3cgPT0gdHJ1ZSB7XHJcblx0XHRcdHRleHQtc2hhZG93IDogMXB4IDFweCAycHggJGxpYi1jb2xvci1zaGFkb3ctcmF0aW5nLWljb247XHJcblx0XHR9XHJcblxyXG5cdFx0QGluY2x1ZGUgbGliLWZvbnQtaWNvbjtcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gNy4g0KbQtdC90LAg0LIg0LTQtdGC0LDQu9GP0YVcclxuQG1peGluIGxpYi1wcmljZS1kZXRhaWwoXHJcblx0JHBvc2l0aW9uOiByZWxhdGl2ZSxcclxuXHQkd2lkdGg6IDEwMCVcclxuKSB7XHJcblx0ZGlzcGxheSAgICAgOiBpbmxpbmUtYmxvY2s7XHJcblx0cG9zaXRpb24gICAgOiAkcG9zaXRpb247XHJcblx0bWFyZ2luLXRvcCAgOiAxMHB4O1xyXG5cdHBhZGRpbmctdG9wIDogOHB4O1xyXG5cdHdpZHRoICAgICAgIDogJHdpZHRoO1xyXG5cdCN7JGxpYi1kZXRhaWx9X2xhYmVsIHtcclxuXHRcdGRpc3BsYXkgOiBpbmxpbmUtYmxvY2s7XHJcblx0fVxyXG5cdCN7JGxpYi1kZXRhaWx9X3ZhbHVlIHtcclxuXHRcdGRpc3BsYXkgICAgIDogaW5saW5lLWJsb2NrO1xyXG5cdFx0bWFyZ2luLWxlZnQgOiA1cHg7XHJcblxyXG5cdFx0Zm9udC13ZWlnaHQgOiAkbGliLWZvbnQtd2VpZ2h0LWJvbGQ7XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDguINCf0LDRgNCw0LzQtdGC0YDRiyDRgdGB0YvQu9C60Lgg0LIg0LHQu9C+0LrQtSDQv9GA0LXQtNCy0LDRgNC40YLQtdC70YzQvdC+0LPQviDQv9GA0L7RgdC80L7RgtGA0LBcclxuQG1peGluIGxpYi1saW5rLWltZy1wYXJhbSgvL9C/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOIC0g0LrQstCw0LTRgNCw0YJcclxuXHQkaGVpZ2h0OiAxNTBweCxcclxuXHQkcmF0aW86IDEsXHJcblx0JGJnOiBub25lLFxyXG5cdCRib3JkZXI6IG5vbmUsXHJcblx0JHRleHQtYWxpZ246IG5vbmUsXHJcblx0JHZlcnRpY2FsLWFsaWduOiBub25lXHJcbikge1xyXG5cdCRoZWlnaHQtbGluay1pbWcgOiAkaGVpZ2h0O1xyXG5cdCR3aWR0aC1saW5rLWltZyA6ICgkaGVpZ2h0LWxpbmstaW1nICogJHJhdGlvKTtcclxuXHQvL9GH0YLQvtCx0Ysg0LrQsNGA0YLQuNC90LrQsCDQs9Cw0YDQsNC90YLQuNGA0L7QstCw0L3QvdC+INC90LUg0LLRi9C10LfQttCw0LvQsCDQt9CwINC/0YDQtdC00LXQu9GLINCx0LvQvtC60LAsXHJcblx0Ly8g0YPRgdGC0LDQvdCw0LLQu9C40LLQsNC10Lwg0LLRi9GB0L7RgtGDINGB0YLRgNC+0LrQuCDQvdCwIDbRgNGFINC80LXQvdGM0YjQtVxyXG5cdCRsaW5lLWhlaWdodC1saW5rLWltZyA6ICgkaGVpZ2h0LWxpbmstaW1nIC0gNik7XHJcblxyXG5cdGhlaWdodCAgICAgIDogJGhlaWdodC1saW5rLWltZztcclxuXHR3aWR0aCAgICAgICA6ICR3aWR0aC1saW5rLWltZztcclxuXHJcblx0bGluZS1oZWlnaHQgOiAkbGluZS1oZWlnaHQtbGluay1pbWc7XHJcblxyXG5cdEBpZiAoJGJnICE9IG5vbmUpIHtcclxuXHRcdGJhY2tncm91bmQgOiAkYmcsXHJcblx0fVxyXG5cdEBpZiAoJGJvcmRlciAhPSBub25lKSB7XHJcblx0XHRib3JkZXIgOiAxcHggc29saWQgJGJvcmRlcjtcclxuXHR9XHJcblx0QGlmICgkdGV4dC1hbGlnbiAhPSBub25lKSB7XHJcblx0XHR0ZXh0LWFsaWduIDogJHRleHQtYWxpZ247XHJcblx0fVxyXG5cdEBpZiAoJHZlcnRpY2FsLWFsaWduICE9IG5vbmUpIHtcclxuXHRcdHZlcnRpY2FsLWFsaWduIDogJHZlcnRpY2FsLWFsaWduO1xyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gOS4g0J7RgtC30YvQstGH0LjQstC+0LUg0YHQvtC+0YLQvdC+0YjQtdC90LjQtVxyXG4vLyDQnNC40LrRgdC40L0g0LTQu9GPINGB0L7Qt9C00LDQvdC40Y8g0LzQsNGB0YjRgtCw0LHQuNGA0YPQtdC80YvRhSDRjdC70LXQvNC10L3RgtC+0LIo0L7QsdGL0YfQvdC+INC40LfQvtCx0YDQsNC20LXQvdC40Y8v0LrQsNGA0YLQuNC90LrQuCDQt9Cw0LTQvdC10LPQviDRhNC+0L3QsCksXHJcbi8vINGH0YLQvtCx0Ysg0L/QvtC00LTQtdGA0LbQuNCy0LDRgtGMINGB0L7QvtGC0L3QvtGI0LXQvdC40LUuXHJcbkBtaXhpbiBsaWItcmVzcG9uc2l2ZS1yYXRpbygvL9C/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOIC0g0LrQstCw0LTRgNCw0YJcclxuXHQkeDoxLFxyXG5cdCR5OjFcclxuKSB7XHJcblx0JHBhZGRpbmcgOiB1bnF1b3RlKCggJHkgLyAkeCApICogMTAwICsgJyUnKTtcclxuXHJcblx0JjpiZWZvcmUge1xyXG5cdFx0Y29udGVudCAgICAgOiAnJztcclxuXHRcdGRpc3BsYXkgICAgIDogYmxvY2s7XHJcblx0XHR3aWR0aCAgICAgICA6IDEwMCU7XHJcblx0XHRwYWRkaW5nLXRvcCA6ICRwYWRkaW5nO1xyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyAxMC4gQ1NTINGC0YDQtdGD0LPQvtC70YzQvdC40LrQuFxyXG5AbWl4aW4gY3NzLXRyaWFuZ2xlKFxyXG5cdCRjb2xvcjogJGxpYi1jb2xvci10cmlhbmdsZSxcclxuXHQkZGlyZWN0aW9uOiAnZG93bicsXHJcblx0JHNpemU6IDhweCxcclxuXHQkcmF0aW86IDMsXHJcblx0JG9mZnNldDogMnB4LFxyXG5cdCRjZW50ZXI6IGZhbHNlLFxyXG5cdCRyb3VuZDogZmFsc2VcclxuKSB7XHJcblx0JHNpZGUtc2l6ZSA6ICgkc2l6ZSAqICRyYXRpbyAvIDIpO1xyXG5cclxuXHRjb250ZW50ICA6ICcnO1xyXG5cdGRpc3BsYXkgIDogYmxvY2s7XHJcblx0cG9zaXRpb24gOiBhYnNvbHV0ZTtcclxuXHRoZWlnaHQgICA6IDA7XHJcblx0d2lkdGggICAgOiAwO1xyXG5cclxuXHRAaWYgJHJvdW5kIHtcclxuXHRcdGJvcmRlci1yYWRpdXMgOiAzcHg7XHJcblx0fVxyXG5cdEBpZiAkZGlyZWN0aW9uID09IGRvd24ge1xyXG5cdFx0Ym9yZGVyLWxlZnQgICA6ICRzaWRlLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItcmlnaHQgIDogJHNpZGUtc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdGJvcmRlci10b3AgICAgOiAkc2l6ZSBzb2xpZCAkY29sb3I7XHJcblx0XHR0b3AgICAgICAgICAgIDogJG9mZnNldDtcclxuXHRcdEBpZiAkY2VudGVyIHtcclxuXHRcdFx0bWFyZ2luLWxlZnQgOiA1MCU7XHJcblx0XHRcdGxlZnQgICAgICAgIDogLSRzaWRlLXNpemU7XHJcblx0XHR9XHJcblx0fSBAZWxzZSBpZiAkZGlyZWN0aW9uID09IHVwIHtcclxuXHRcdGJvcmRlci1sZWZ0ICAgOiAkc2lkZS1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLXJpZ2h0ICA6ICRzaWRlLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItYm90dG9tIDogJHNpemUgc29saWQgJGNvbG9yO1xyXG5cdFx0Ym90dG9tICAgICAgICA6ICRvZmZzZXQ7XHJcblx0XHRAaWYgJGNlbnRlciB7XHJcblx0XHRcdG1hcmdpbi1sZWZ0IDogNTAlO1xyXG5cdFx0XHRsZWZ0ICAgICAgICA6IC0kc2lkZS1zaXplO1xyXG5cdFx0fVxyXG5cdH0gQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSByaWdodCB7XHJcblx0XHRib3JkZXItdG9wICAgIDogJHNpZGUtc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdGJvcmRlci1ib3R0b20gOiAkc2lkZS1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLWxlZnQgICA6ICRzaXplIHNvbGlkICRjb2xvcjtcclxuXHRcdHJpZ2h0ICAgICAgICAgOiAkb2Zmc2V0O1xyXG5cdFx0QGlmICRjZW50ZXIge1xyXG5cdFx0XHRtYXJnaW4tdG9wIDogNTAlO1xyXG5cdFx0XHR0b3AgICAgICAgIDogLSRzaWRlLXNpemU7XHJcblx0XHR9XHJcblx0fSBAZWxzZSBpZiAkZGlyZWN0aW9uID09IGxlZnQge1xyXG5cdFx0Ym9yZGVyLXRvcCAgICA6ICRzaWRlLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItYm90dG9tIDogJHNpZGUtc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdGJvcmRlci1yaWdodCAgOiAkc2l6ZSBzb2xpZCAkY29sb3I7XHJcblx0XHRsZWZ0ICAgICAgICAgIDogJG9mZnNldDtcclxuXHRcdEBpZiAkY2VudGVyIHtcclxuXHRcdFx0bWFyZ2luLXRvcCA6IDUwJTtcclxuXHRcdFx0dG9wICAgICAgICA6IC0kc2lkZS1zaXplO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyAxMS4g0JrQvdC+0L/QutCwINC30LDQutGA0YvRgtGMXHJcbkBtaXhpbiBsaWItY2xvc2UoXHJcblx0JHRvcDogOHB4LFxyXG5cdCRyaWdodDogOHB4XHJcbikge1xyXG5cdHBvc2l0aW9uICA6IGFic29sdXRlO1xyXG5cdHRvcCAgICAgICA6ICR0b3A7XHJcblx0cmlnaHQgICAgIDogJHJpZ2h0O1xyXG5cdHotaW5kZXggICA6IDE7XHJcblxyXG5cdGN1cnNvciAgICA6IHBvaW50ZXI7XHJcblx0Y29sb3IgICAgIDogJGxpYi1jb2xvci1jbG9zZTtcclxuXHRmb250LXNpemUgOiBsaWItZm9udC1zaXplKGUyKTtcclxuXHQmOmhvdmVyIHtcclxuXHRcdGNvbG9yIDogJGxpYi1jb2xvci1jbG9zZS1ob3ZlcjtcclxuXHR9XHJcblx0JjphZnRlciB7XHJcblx0XHRjb250ZW50IDogJ1xcZjA1Nyc7XHJcblxyXG5cdFx0QGluY2x1ZGUgbGliLWZvbnQtaWNvbjtcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIsIi8v0JjQvNC/0L7RgNGCINGE0LDQudC70L7QslxyXG5AaW1wb3J0ICdmdW5jdGlvbnMnO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcImxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0L/QtdGA0LXQvNC10L3QvdGL0YUg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMS4g0J/QoNCV0KTQmNCa0KEg0JrQm9CQ0KHQodCe0JJcclxuJGxpYi1jbGFzcy1wcmVmaXg6ICdzdS0nO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAyLiDQn9CQ0JvQmNCi0KDQkFxyXG4kbGliLXBhbGV0dGU6IChcclxuXHRwcmltYXJ5LWRhcmtlcjogICAgICAgICAgICAgIzIzMjMyMywvLzM1ICAzNSAgMzVcclxuXHRwcmltYXJ5LWRhcms6ICAgICAgICAgICAgICAgIzcxNzE3MSwvLzExMyAxMTMgMTEzXHJcblx0cHJpbWFyeS1iYXNlLWRhcms6ICAgICAgICAgICNhOGE4YTgsLy8xNjggMTY4IDE2OFxyXG5cdHByaW1hcnktYmFzZTogICAgICAgICAgICAgICAjY2NjY2NjLC8vMjA0IDIwNCAyMDRcclxuXHRwcmltYXJ5LWJhc2UtbGlnaHQ6ICAgICAgICAgI2UzZTNlMywvLzIyNyAyMjcgMjI3XHJcblx0cHJpbWFyeS1saWdodDogICAgICAgICAgICAgICNlY2VjZWMsLy8yMzYgMjM2IDIzNlxyXG5cdHByaW1hcnktbGlnaHRlcjogICAgICAgICAgICAjZmZmZmZmLC8vMjU1IDI1NSAyNTVcclxuXHJcblx0c2Vjb25kYXJ5LWRhcms6ICAgICAgICAgICAgICM2NjMzMzMsLy8xMDIgNTEgIDUxXHJcblx0c2Vjb25kYXJ5LXZpc2l0ZWQ6ICAgICAgICAgICM3YzNlZDcsLy8xMjQgNjIgIDIxNVxyXG5cdHNlY29uZGFyeS1hY2NlbnQtZGFyazogICAgICAjNjhhMjJlLC8vMTA0IDE2MiA0NlxyXG5cdHNlY29uZGFyeS1hY2NlbnQ6ICAgICAgICAgICAjOTdjYjYzLC8vMTUxIDIwMyA5OVxyXG5cdHNlY29uZGFyeS1hY2NlbnQtbGlnaHQ6ICAgICAjOTVmZjJlLC8vMTQ5IDI1NSA0NlxyXG5cdHNlY29uZGFyeS1iYXNlOiAgICAgICAgICAgICAjMDU1OWJjLC8vNSAgIDg5IDE4OFxyXG5cdHNlY29uZGFyeS1saWdodDogICAgICAgICAgICAjMDBhZmYyLC8vMCAgIDE3NSAyNDJcclxuXHJcblx0YWNjZW50LWRhcmtlcjogICAgICAgICAgICAgICM1YjUwNDMsLy85MSAgODAgIDY3XHJcblx0YWNjZW50LWRhcms6ICAgICAgICAgICAgICAgICNhMjdhNGEsLy8xNjIgMTIyIDc0XHJcblx0YWNjZW50LWJhc2UtZGFyazogICAgICAgICAgICNjOThkMDMsLy8yMDEgMTQxIDNcclxuXHRhY2NlbnQtYmFzZTogICAgICAgICAgICAgICAgI2ZmYjQwOSwvLzI1NSAxODAgOVxyXG5cdGFjY2VudC1iYXNlLWJyaWdodDogICAgICAgICAjZmY5MDAwLC8vMjU1IDE0NCA5XHJcblx0YWNjZW50LWJhc2UtbGlnaHQ6ICAgICAgICAgICNmYmY3YmIsLy8yNTEgMjQ3IDE4N1xyXG5cdGFjY2VudC1saWdodDogICAgICAgICAgICAgICAjZmZmY2Q2LC8vMjU1IDI1MiAyMTRcclxuXHRhY2NlbnQtbGlnaHRlcjogICAgICAgICAgICAgI2ZmZmNlYiwvLzI1NSAyNTIgMjM1XHJcblxyXG5cdC8v0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQtSDRhtCy0LXRgtCwINC00LvRjyDQv9C+0LvRjyDRhNC+0YDQvNGLINC/0L7QuNGB0LrQsCDQsiDRiNCw0L/QutC1XHJcblx0Ym9yZGVyLWlucHV0LWRhcms6ICAgICAgICAgICM4Y2EzYWUsLy8xNDAgMTYzIDE3NFxyXG5cdGJvcmRlci1pbnB1dC1iYXNlOiAgICAgICAgICAjYTBiNGJlLC8vMTYwIDE4MCAxOTBcclxuXHRib3JkZXItaW5wdXQtbGlnaHQ6ICAgICAgICAgI2I2YzhkMSwvLzE4MiAyMDAgMjA5XHJcblxyXG5cdC8v0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQtSDRhtCy0LXRgtCwINC00LvRjyDQutC90L7Qv9C+0Log0YHQvtGGLtGB0LXRgtC10LlcclxuXHRiYWNrZ3JvdW5kLXZrOiAgICAgICAgICAgICAgIzUzN2NhNiwvLzgzIDEyNCAxNjZcclxuXHRiYWNrZ3JvdW5kLWZiOiAgICAgICAgICAgICAgIzRlNmFiYSwvLzc4IDEwNiAxODZcclxuXHJcblx0Ly/QlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C5INGG0LLQtdGCINC00LvRjyDQvtGC0L7QsdGA0LDQttC10L3QuNGPINC+0YjQuNCx0LrQuFxyXG5cdGNvbG9yLWVycm9yOlx0XHRcdFx0I2ZmMDAwMCwvLzI1NSAgMCAgIDBcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMy4g0KLQntCn0JrQmCDQn9CV0KDQldCa0JvQrtCn0JXQndCY0K9cclxuJGxpYi1icmVha3BvaW50czogKFxyXG5cdG5vcm1hbDpcdFx0JzEyMDBweCcsXHQvL1NpdGUtd2lkdGggMTE3MFxyXG5cdG5hcnJvdzpcdFx0Jzk5MnB4JyxcdC8vIFNpdGUtd2lkdGggOTcwXHJcblx0bW9iaWxlOlx0XHQnNzY4cHgnLFx0Ly8gU2l0ZS13aWR0aCA3NTBcclxuXHRtb2JpbGVYTDpcdCc3MDBweCcsXHQvLyBTaXRlLXdpZHRoIC4uLlxyXG5cdG1vYmlsZUw6XHQnNjAwcHgnLFx0Ly8gU2l0ZS13aWR0aCAuLi5cclxuXHRtb2JpbGVNOlx0JzU0MHB4JyxcdC8vIFNpdGUtd2lkdGggLi4uXHJcblx0bW9iaWxlUzpcdCc0NjBweCcsXHQvLyBTaXRlLXdpZHRoIC4uLlxyXG5cdG1vYmlsZVhTOlx0JzM2MHB4JyxcdC8vIFNpdGUtd2lkdGggLi4uXHJcbik7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDQuINCo0JjQoNCY0J3QkCDQodCQ0JnQotCQXHJcbiRsaWItd2lkdGgtY29udGFpbmVyLWxhcmdlICA6IDExNzBweDtcclxuJGxpYi13aWR0aC1jb250YWluZXItbm9ybWFsIDogOTcwcHg7XHQvLyAtPiBicmVha3BvaW50czpub3JtYWxcclxuJGxpYi13aWR0aC1jb250YWluZXItbmFycm93IDogNzUwcHg7XHQvLyAtPiBicmVha3BvaW50czpuYXJyb3dcclxuJGxpYi13aWR0aC1jb250YWluZXItbW9iaWxlIDogMTAwJTsgXHQvLyAtPiBicmVha3BvaW50czptb2JpbGVcclxuJGxpYi1taW4td2lkdGhcdFx0XHQgXHQ6IDMyMHB4O1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA1LiAg0KjQoNCY0KTQolxyXG4vLyA1LjEg0KHQtdC80LXQudGB0YLQstC+INGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtZmFtaWx5IDogT3BlblNhbnNSZWd1bGFyLCBzYW5zLXNlcmlmO1xyXG5cclxuLy8gNS4yINCg0LDQt9C80LXRgCDRiNGA0LjRhNGC0LBcclxuJGxpYi1mb250LXNpemUgOiAxNnB4O1xyXG5cclxuJGxpYi10eXBlLXNjYWxlIDogKFxyXG5cdFx0LTU6IDAuNjg4cmVtLCAvLyAgICAxNnB4IC0+IDExcHhcclxuXHRcdC00OiAwLjc1cmVtLCAvLyAgICAgMTZweCAtPiAxMnB4ICAgIHNtYWxsZXIgdGV4dCAgICAvc21hbGxlciBzdWJoZWFkaW5nXHJcblx0XHQtMzogMC44MTVyZW0sIC8vICAgIDE2cHggLT4gMTNweCAgICBzbWFsbCB0ZXh0XHJcblx0XHQtMjogMC44NzVyZW0sIC8vICAgIDE2cHggLT4gMTRweCAgICBub3JtYWwgdGV4dCAgICAgL3NtYWxsIHN1YmhlYWRpbmdcclxuXHRcdC0xOiAwLjkzOHJlbSwgLy8gICAgMTZweCAtPiAxNXB4XHJcblx0XHQwOiAxcmVtLCAvLyAgICAgICAgIDE2cHggLT4gMTZweCAgICBiaWcgdGV4dCAgICAgICAgL3NtYWxsIGhlYWRpbmdcclxuXHRcdDE6IDEuMTI1cmVtLCAvLyAgICAgMTZweCAtPiAxOHB4ICAgIHZlcnkgYmlnIHRleHQgICAvaGVhZGluZ1xyXG5cdFx0MjogMS4zNzVyZW0sIC8vICAgICAxNnB4IC0+IDIycHggICAgICAgICAgICAgICAgICAgIC9iaWcgaGVhZGluZ1xyXG5cdFx0MzogMS44NzVyZW0sIC8vICAgICAxNnB4IC0+IDMwcHggICAgICAgICAgICAgICAgICAgIC9tYWluIGhlYWRpbmdcclxuXHRcdDQ6IDEuODc1cmVtLCAvLyAgICAgMTZweCAtPiAzMHB4ICAgICAgICAgICAgICAgICAgICAvbWFpbiBoZWFkaW5nXHJcblxyXG5cdFx0Ly9FeHRlbmQgZm9udHNcclxuXHRcdGUwOiAxLjA2M3JlbSwgLy8gICAgMTZweCAtPiAxN3B4XHJcblx0XHRlMTogMS4xODhyZW0sIC8vICAgIDE2cHggLT4gMTlweFxyXG5cdFx0ZTI6IDEuMjVyZW0sIC8vICAgICAxNnB4IC0+IDIwcHhcclxuXHRcdGUzOiAxLjY4OHJlbSwgLy8gICAgMTZweCAtPiAyN3B4XHJcblx0XHRlNDogMi4xMjVyZW0gLy8gICAgIDE2cHggLT4gMzRweFxyXG4pO1xyXG5cclxuJGxpYi1mb250LXNpemUtYmFzZSA6IGxpYi1mb250LXNpemUoMCk7XHJcbiRsaWItZm9udC1zaXplLWlucHV0IDogbGliLWZvbnQtc2l6ZSgtMik7XHJcblxyXG4vLyA1LjMg0J3QsNGB0YvRidC10L3QvdC+0YHRgtGMINGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtd2VpZ2h0LW5vcm1hbDogNDAwO1xyXG4kbGliLWZvbnQtd2VpZ2h0LWJvbGQ6IDcwMDtcclxuXHJcbi8vIDUuNCDQptCy0LXRgiDRiNGA0LjRhNGC0L7QslxyXG4kbGliLWNvbG9yLW1haW4tdGl0bGUgOiBsaWItY29sb3IoYWNjZW50LWJhc2UpO1xyXG4kbGliLWNvbG9yLWJpZy10aXRsZSA6IGxpYi1jb2xvcihzZWNvbmRhcnktZGFyayk7XHJcbiRsaWItY29sb3ItdGl0bGUgOiBsaWItY29sb3Ioc2Vjb25kYXJ5LWRhcmspO1xyXG4kbGliLWNvbG9yLXRleHQgOiBsaWItY29sb3IocHJpbWFyeS1kYXJrZXIpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA2LiAg0KHQotCg0J7QmtCQXHJcbi8vIDYuMSDQktGL0YHQvtGC0LAg0YHRgtGA0L7QutC4XHJcbiRsaWItbGluZS1oZWlnaHQtYmFzZSA6ICgkbGliLWZvbnQtc2l6ZS1iYXNlICogMS4yNSk7XHJcblxyXG4kbGliLWxpbmUtaGVpZ2h0cyA6IChcclxuXHRcdC01OiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtNDogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0LTM6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC0yOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtMTogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0MDogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0MTogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMTI1KSxcclxuXHRcdDI6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjM3NSksXHJcblx0XHQzOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS44NzUpLFxyXG5cclxuXHRcdC8vRXh0ZW5kIGxpbmVzXHJcblx0XHRlMDogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMDYzKSxcclxuXHRcdGUxOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4xODgpLFxyXG5cdFx0ZTI6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjI1KVxyXG4pO1xyXG5cclxuLy8gNi4yINCS0LXRgNGF0L3QuNC5INC+0YLRgdGD0L8g0YHRgtGA0L7QutC4XHJcbiRsaWItcGFkZGluZy10b3AtYmFzZSA6ICRsaWItZm9udC1zaXplLWJhc2UgKiAxLjI1O1xyXG5cclxuJGxpYi1wYWRkaW5nLXRvcCA6IChcclxuXHRcdC01OiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAwLjY4OCxcclxuXHRcdC00OiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAwLjc1LFxyXG5cdFx0LTM6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuODE1LFxyXG5cdFx0LTI6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuODc1LFxyXG5cdFx0LTE6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuOTM4LFxyXG5cdFx0MDogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMSxcclxuXHRcdDE6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuMTI1LFxyXG5cdFx0MjogKCRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuMzc1KSxcclxuXHRcdDM6ICgkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAxLjg3NSlcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gNy4g0J/QsNGA0LDQvNC10YLRgNGLIHot0L7RgdC4XHJcbiRsaWItei1pbmRleGVzOiAoXHJcblx0XHRcIndyYXBwZXItY292ZXJcIiwvL9C00LvRjyDQsdC70L7QutCwINC/0LXRgNC10LrRgNGL0LLQsNGO0YnQtdCz0L4gd3JhcHBlciDQv9GA0Lgg0L7RgtC60YDRi9GC0L7QvCDQvNC10L3RjlxyXG5cdFx0XCJtb2RhbFwiLFxyXG5cdFx0XCJmaXhlZFwiLFxyXG5cdFx0XCJwb3B1cFwiLFxyXG5cdFx0XCJoZWFkZXItYmFza2V0XCIsXHJcblx0XHRcImhlYWRlci1jb250cm9sXCIsXHJcblx0XHRcImhlYWRlci1iYW5uZXJcIixcclxuXHRcdFwiaGVhZGVyLWluZm9cIixcclxuXHRcdFwiaGVhZGVyXCIsXHJcblx0XHRcImFzaWRlXCIsXHJcblx0XHRcInBhZ2VcIixcclxuXHRcdFwiZm9vdGVyXCJcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIiwiLy8g0KTQo9Cd0JrQptCY0JhcclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcImxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0YTRg9C90LrRhtC40Lkg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLyAxLiDQn9C+0LvRg9GH0LjRgtGMINC60LvQsNGB0YEuXHJcbkBmdW5jdGlvbiBsaWItZ2V0LWNsYXNzKCRjbGFzcy1uYW1lKSB7XHJcblx0QHJldHVybiAnLicgKyAkbGliLWNsYXNzLXByZWZpeCArICRjbGFzcy1uYW1lO1xyXG59XHJcblxyXG4vLyAyLiDQn9C+0LvRg9GH0LjRgtGMINC60LvQsNGB0YEt0LzQvtC00LjRhNC40LrQsNGC0L7RgC5cclxuQGZ1bmN0aW9uIGxpYi1nZXQtbW9kaWZpZXIoJG1vZGlmaWVyLW5hbWUpIHtcclxuXHRAcmV0dXJuICcuXycgKyAkbGliLWNsYXNzLXByZWZpeCArICRtb2RpZmllci1uYW1lO1xyXG59XHJcblxyXG4vLyAzLiDQn9C+0LvRg9GH0LjRgtGMINC30L3QsNGH0LXQvdC40LUg0LjQtyDQvNCw0YHQuNCy0LAgKG1hcCkuXHJcbkBmdW5jdGlvbiBsaWItdmFsKCRtYXAsICRrZXkpIHtcclxuXHRAaWYgbWFwLWhhcy1rZXkoJG1hcCwgJGtleSkge1xyXG5cdFx0QHJldHVybiBtYXAtZ2V0KCRtYXAsICRrZXkpO1xyXG5cdH0gQGVsc2Uge1xyXG5cdFx0QHdhcm4gXCJVbmtub3duIGAjeyRrZXl9YCBpbiBgI3skbWFwfWAuXCI7XHJcblx0XHRAcmV0dXJuIG51bGw7XHJcblx0fVxyXG59XHJcblxyXG4vLyA0LiDQn9C+0LvRg9GH0LjRgtGMINGG0LLQtdGCXHJcbkBmdW5jdGlvbiBsaWItY29sb3IoJGtleSkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLXBhbGV0dGUsICRrZXkpO1xyXG59XHJcblxyXG4vLyA1LiDQn9C+0LvRg9GH0LjRgtGMINGC0L7Rh9C60YMg0L/QtdGA0LXQutC70Y7Rh9C10L3QuNGPXHJcbkBmdW5jdGlvbiBsaWItYnJlYWtwb2ludHMoJGtleSkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLWJyZWFrcG9pbnRzLCAka2V5KTtcclxufVxyXG5cclxuLy8gNi4g0J/QvtC70YPRh9C40YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwXHJcbkBmdW5jdGlvbiBsaWItZm9udC1zaXplKCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLXR5cGUtc2NhbGUsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDcuINCf0L7Qu9GD0YfQuNGC0Ywg0LLRi9GB0L7RgtGDINGB0YLRgNC+0LrQuFxyXG5AZnVuY3Rpb24gbGliLWxpbmUtaGVpZ2h0KCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbWFwLWdldCgkbGliLWxpbmUtaGVpZ2h0cywgJGxldmVsKTtcclxufVxyXG5cclxuLy8gOC4g0J/QvtC70YPRh9C40YLRjCDQstC10YDRhdC90LjQuSDQvtGC0YHRgtGD0L8g0YHRgtGA0L7QutC4XHJcbkBmdW5jdGlvbiBsaWItbGluZS10b3AoJGxldmVsKSB7XHJcblx0QHJldHVybiBtYXAtZ2V0KCRsaWItcGFkZGluZy10b3AsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDkuINCf0L7Qu9GD0YfQuNGC0Ywg0YDQsNC30LzQtdGJ0LXQvdC40LUg0L/QviB6LdC+0YHQuFxyXG5AZnVuY3Rpb24gbGliLXooJG5hbWUpIHtcclxuXHRAaWYgaW5kZXgoJGxpYi16LWluZGV4ZXMsICRuYW1lKSB7XHJcblx0XHRAcmV0dXJuIChsZW5ndGgoJGxpYi16LWluZGV4ZXMpIC0gaW5kZXgoJGxpYi16LWluZGV4ZXMsICRuYW1lKSkgKyAxO1xyXG5cdH0gQGVsc2Uge1xyXG5cdFx0QHdhcm4gJ1RoZXJlIGlzIG5vIGl0ZW0gXCIjeyRuYW1lfVwiIGluIHRoaXMgbGlzdDsgY2hvb3NlIG9uZSBvZjogI3skbGliLXotaW5kZXhlc30nO1xyXG5cdFx0QHJldHVybiBudWxsO1xyXG5cdH1cclxufSIsIi8vINCX0JDQn9Ce0JvQndCY0KLQldCb0JhcclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcIiVsaWItXCIg0LIg0L3QsNGH0LDQu9C1INC30LDQv9C+0LvQvdC40YLQtdC70LXQuSDRjdGC0L7Qs9C+INGE0LDQudC70LBcclxuXHJcbiVsaWItY2xlYXJmaXgge1xyXG5cclxuXHQmOmJlZm9yZSxcclxuXHQmOmFmdGVyIHtcclxuXHRcdGNvbnRlbnQgOiAnICc7XHJcblx0XHRkaXNwbGF5IDogdGFibGU7XHJcblx0fVxyXG5cclxuXHQmOmFmdGVyIHtcclxuXHRcdGNsZWFyIDogYm90aDtcclxuXHR9XHJcblxyXG59IiwiLy8g0JLQkNCW0J3QniEhIVxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwibWl4LVwiINCyINC90LDRh9Cw0LvQtSDQv9C10YDQtdC80LXQvdC90YvRhSDQuCDQv9GA0LjQvNC10YHQtdC5INGN0YLQvtCz0L4g0YTQsNC50LvQsFxyXG5cclxuLy8g0JIg0Y3RgtC+0YIg0YTQsNC50Lsg0LLRi9C90LXRgdC10L3RiyDQvtCx0YnQuNC1INGB0YLQuNC70Lgg0YHRgtGA0LDQvdC40YYsINC60L7RgtC+0YDRi9C1INC90LUg0LzQvtCz0YPRgiDQsdGL0YLRjCDQtNC+0LHQsNCy0LvQtdC90YtcclxuLy8g0LIg0LHQuNCx0LvQuNC+0YLQtdC60YMgKNC+0YLQvdC+0YHRj9GC0YHRjyDRgtC+0LvRjNC60L4g0Log0YLQtdC60YPRidC10LzRgyDQv9GA0L7QtdC60YLRgylcclxuXHJcbi8vINCm0LLQtdGC0LBcclxuJG1peC1jb2xvci1mb290ZXItdGl0bGUgOiBsaWItY29sb3IocHJpbWFyeS1saWdodGVyKTtcclxuJG1peC1iZy1jb21tZW50cy1saXN0IDogbGliLWNvbG9yKHByaW1hcnktbGlnaHRlcik7XHJcbiRtaXgtYmctanNwLXZlcnRpY2FsLWJhciA6IGxpYi1jb2xvcihwcmltYXJ5LWxpZ2h0ZXIpO1xyXG4kbWl4LWJnLWpzcC1kcmFnIDogbGliLWNvbG9yKHByaW1hcnktbGlnaHRlcik7XHJcbiRtaXgtYmctcGVyc29uYWwtb2ZmZXIgOiB0cmFuc3BhcmVudDtcclxuJG1peC1jb2xvci1ib3JkZXItanNwLXZlcnRpY2FsLWJhciA6IGxpYi1jb2xvcihwcmltYXJ5LWJhc2UpO1xyXG4kbWl4LWNvbG9yLWJvcmRlci1qc3AtZHJhZyA6IGxpYi1jb2xvcihwcmltYXJ5LWJhc2UpO1xyXG4kbWl4LWNvbG9yLWJvcmRlci1uZXctcHJpY2UgOiBsaWItY29sb3IocHJpbWFyeS1iYXNlLWxpZ2h0KTtcclxuJG1peC1jb2xvci1ib3JkZXItaW1nIDogbGliLWNvbG9yKHByaW1hcnktYmFzZS1saWdodCk7XHJcbiRtaXgtY29sb3ItYm9yZGVyLXBlcnNvbmFsLW9mZmVyLWltZyA6IGxpYi1jb2xvcihwcmltYXJ5LWJhc2UtbGlnaHQpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vINCa0LvQsNGB0YHRi1xyXG4kbWl4LXRpbGUgOiBsaWItZ2V0LWNsYXNzKCd0aWxlJyk7XHJcbiRtaXgtb2ZmZXIgOiBsaWItZ2V0LWNsYXNzKCdvZmZlcicpO1xyXG4kbWl4LW9mZmVyLWRlc2NyaXB0aW9uIDogbGliLWdldC1jbGFzcygnb2ZmZXItZGVzY3JpcHRpb24nKTtcclxuJG1peC1vZmZlci10aXRsZSA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLXRpdGxlJyk7XHJcbiRtaXgtb2ZmZXItdGV4dCA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLXRleHQnKTtcclxuJG1peC1vZmZlci1hbm5vdGF0aW9uIDogbGliLWdldC1jbGFzcygnb2ZmZXItYW5ub3RhdGlvbicpO1xyXG4kbWl4LW9mZmVyLW5ldy1wcmljZSA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLW5ldy1wcmljZScpO1xyXG4kbWl4LW9mZmVyLW9sZC1wcmljZSA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLW9sZC1wcmljZScpO1xyXG4kbWl4LW9mZmVyLXByaWNlIDogbGliLWdldC1jbGFzcygnb2ZmZXItcHJpY2UnKTtcclxuJG1peC1vZmZlci1idXR0b24gOiBsaWItZ2V0LWNsYXNzKCdvZmZlci1idXR0b24nKTtcclxuJG1peC1saW5rLWltZyA6IGxpYi1nZXQtY2xhc3MoJ2xpbmstaW1nJyk7XHJcbiRtaXgtbGluay1idG4gOiBsaWItZ2V0LWNsYXNzKCdsaW5rLWJ0bicpO1xyXG4kbWl4LWxpc3QgOiBsaWItZ2V0LWNsYXNzKCdsaXN0Jyk7XHJcbiRtaXgtYmxvY2sgOiBsaWItZ2V0LWNsYXNzKCdibG9jaycpO1xyXG4kbWl4LXByZXZpZXcgOiBsaWItZ2V0LWNsYXNzKCdwcmV2aWV3Jyk7XHJcbiRtaXgtcmF0aW5nIDogbGliLWdldC1jbGFzcygncmF0aW5nJyk7XHJcbiRtaXgtZGV0YWlsIDogbGliLWdldC1jbGFzcygnZGV0YWlsJyk7XHJcbiRtaXgtc29jaWFsLWxpbmtzIDogbGliLWdldC1jbGFzcygnc29jaWFsLWxpbmtzJyk7XHJcbiRtaXgtc29jaWFsLWxpbmsgOiBsaWItZ2V0LWNsYXNzKCdzb2NpYWwtbGluaycpO1xyXG4kbWl4LWZyZWUtbWFpbCA6IGxpYi1nZXQtY2xhc3MoJ2ZyZWUtbWFpbCcpO1xyXG4kbWl4LXNsaWRlciA6IGxpYi1nZXQtY2xhc3MoJ3NsaWRlcicpO1xyXG4kbWl4LWZpZWxkLXRleHQgOiBsaWItZ2V0LWNsYXNzKCdmaWVsZC10ZXh0Jyk7XHJcbiRtaXgtZmllbGQtc2VsZWN0IDogbGliLWdldC1jbGFzcygnZmllbGQtc2VsZWN0Jyk7XHJcbiRtaXgtZmllbGQtdGV4dGFyZWEgOiBsaWItZ2V0LWNsYXNzKCdmaWVsZC10ZXh0YXJlYScpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMS4g0J7QsdGJ0LjQtSDQv9Cw0YDQsNC80LXRgtGA0Ysg0LrQvtC90YLQtdC90YLQsFxyXG4vLyAxLjEg0J/QviDRg9C80L7Qu9GH0LDQvdC40Y5cclxuQG1peGluIG1peC1jb250ZW50LWNvbW1vbi1wYXJhbShcclxuXHQkcGFkZGluZy10b3A6IDIwcHgsXHJcblx0JHBhZGRpbmctYm90dG9tOiAxNXB4XHJcbikge1xyXG5cdHBvc2l0aW9uICA6IHJlbGF0aXZlO1xyXG5cdG1hcmdpbiAgICA6IDAgYXV0bztcclxuXHRwYWRkaW5nICAgOiAkcGFkZGluZy10b3AgNDBweCAkcGFkZGluZy1ib3R0b20gNDBweDtcclxuXHRtYXgtd2lkdGggOiAxMjgwcHg7XHJcbn1cclxuXHJcbi8vIDEuMiDQn9GA0Lgg0YDQsNC30YDQtdGI0LXQvdC40Lgg0Y3QutGA0LDQvdCwIFwibmFycm93XCJcclxuQG1peGluIG1peC1jb250ZW50LWNvbW1vbi1uYXJyb3ctcGFyYW0oKSB7XHJcblx0cGFkZGluZzoge1xyXG5cdFx0cmlnaHQgOiAyMHB4O1xyXG5cdFx0bGVmdCAgOiAyMHB4O1xyXG5cdH1cclxuXHRtYXgtd2lkdGggOiAxMjgwcHg7XHJcbn1cclxuXHJcbi8vIDEuMyDQn9GA0Lgg0YDQsNC30YDQtdGI0LXQvdC40Lgg0Y3QutGA0LDQvdCwIFwibW9iaWxlXCJcclxuQG1peGluIG1peC1jb250ZW50LWNvbW1vbi1tb2JpbGUtcGFyYW0oKSB7XHJcblx0cGFkZGluZzoge1xyXG5cdFx0cmlnaHQgOiAwO1xyXG5cdFx0bGVmdCAgOiAwO1xyXG5cdH1cclxufVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMi4g0J/QtdGA0LXQvtC/0YDQtdC00LXQu9C10L3QuNC1INGB0YLQuNC70LXQuSDQv9C00LDQs9C40L3QsCBcImpzY3JvbGxwYW5lXCJcclxuQG1peGluIG1peC1vdmVycmlkZS1qc2Nyb2xscGFuZShcclxuXHQkYWZ0ZXItaGVpZ2h0OiA0NXB4LFxyXG5cdCRiZWZvcmUtaGVpZ2h0OiA0NXB4XHJcbikge1xyXG5cdCR3aWR0aC12ZXJ0aWNhbC1iYXIgOiAxNHB4O1xyXG5cdCRvZmZzZXQtY29udGFpbmVyLXBzZXVkbyA6ICR3aWR0aC12ZXJ0aWNhbC1iYXIgKyAzO1xyXG5cdC8v0LrQu9Cw0YHRgdGLINC/0LvQsNCz0LjQvdCwIFwianNjcm9sbHBhbmVcIlxyXG5cdC5qc3BDb250YWluZXIge1xyXG5cdFx0JjpiZWZvcmUsXHJcblx0XHQmOmFmdGVyIHtcclxuXHRcdFx0Y29udGVudCAgOiAnJztcclxuXHRcdFx0cG9zaXRpb24gOiBhYnNvbHV0ZTtcclxuXHRcdFx0bGVmdCAgICAgOiAwO1xyXG5cdFx0XHR3aWR0aCAgICA6IDEwMCU7XHJcblx0XHRcdHotaW5kZXggIDogMjtcclxuXHRcdH1cclxuXHRcdCY6YmVmb3JlIHtcclxuXHRcdFx0dG9wICAgICAgICA6IDA7XHJcblx0XHRcdGhlaWdodCAgICAgOiAkYmVmb3JlLWhlaWdodDtcclxuXHJcblx0XHRcdGJhY2tncm91bmQgOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSksICNmZmZmZmYsICNmZmZmZmYpO1xyXG5cdFx0fVxyXG5cdFx0JjphZnRlciB7XHJcblx0XHRcdGJvdHRvbSAgICAgOiAwO1xyXG5cdFx0XHRoZWlnaHQgICAgIDogJGFmdGVyLWhlaWdodDtcclxuXHJcblx0XHRcdGJhY2tncm91bmQgOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSksICNmZmZmZmYsICNmZmZmZmYpO1xyXG5cdFx0fVxyXG5cdFx0Ly/QlNC+0LHQsNCy0LvQtdC90L3Ri9C5INC80L7QtNC40YTQuNC60LDRgtC+0YAg0LTQu9GPINC+0YLRgdC70LXQttC40LLQsNC90LjRjyDQstC10YDRgtC40LrQsNC70YzQvdC+0Lkg0L/QvtC70L7RgdGLINC/0YDQvtC60YDRg9GC0LrQuFxyXG5cdFx0Ji5fanNwT2Zmc2V0IHtcclxuXHRcdFx0JjphZnRlcixcclxuXHRcdFx0JjpiZWZvcmUge1xyXG5cdFx0XHRcdGxlZnQgOiAtICRvZmZzZXQtY29udGFpbmVyLXBzZXVkbztcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0LmpzcFBhbmUge1xyXG5cdFx0XHRtaW4taGVpZ2h0IDogMTAwJTtcclxuXHJcblx0XHRcdGJhY2tncm91bmQgOiAkbWl4LWJnLWNvbW1lbnRzLWxpc3Q7XHJcblx0XHR9XHJcblx0XHQuanNwVmVydGljYWxCYXIge1xyXG5cdFx0XHR3aWR0aCAgICAgICAgIDogJHdpZHRoLXZlcnRpY2FsLWJhcjtcclxuXHRcdFx0ei1pbmRleCAgICAgICA6IDM7XHJcblxyXG5cdFx0XHRiYWNrZ3JvdW5kICAgIDogJG1peC1iZy1qc3AtdmVydGljYWwtYmFyO1xyXG5cdFx0XHRib3JkZXIgICAgICAgIDogMXB4IHNvbGlkICRtaXgtY29sb3ItYm9yZGVyLWpzcC12ZXJ0aWNhbC1iYXI7XHJcblx0XHRcdGJvcmRlci1yYWRpdXMgOiAzcHg7XHJcblx0XHRcdC5qc3BUcmFjayB7XHJcblx0XHRcdFx0YmFja2dyb3VuZCA6IHRyYW5zcGFyZW50O1xyXG5cdFx0XHRcdC5qc3BEcmFnIHtcclxuXHRcdFx0XHRcdGJhY2tncm91bmQgICAgOiAkbWl4LWJnLWpzcC1kcmFnIHVybCguLi8uLi9pbWcvc2Nyb2xsYmFyL3Njcm9sbGJhci5wbmcpIGNlbnRlciBjZW50ZXIgbm8tcmVwZWF0O1xyXG5cdFx0XHRcdFx0Ym9yZGVyICAgICAgICA6IDFweCBzb2xpZCAkbWl4LWNvbG9yLWJvcmRlci1qc3AtZHJhZztcclxuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXMgOiAzcHg7XHJcblx0XHRcdFx0XHRjdXJzb3IgICAgICAgIDogcG9pbnRlcjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDMuINCf0LDRgNCw0LzQtdGC0YDRiyDRjdC70LXQvNC10L3RgtC+0LIg0Y/Rh9C10YfQtdC10Log0L/QvtC00LLQsNC70LBcclxuLy8gMy4xINCX0LDQs9C+0LvQvtCy0LrQuFxyXG5AbWl4aW4gbWl4LWZvb3Rlci10aXRsZSgpIHtcclxuXHRjb2xvciAgICAgICA6ICRtaXgtY29sb3ItZm9vdGVyLXRpdGxlO1xyXG5cdGZvbnQtZmFtaWx5IDogJ09wZW5TYW5zQm9sZCc7XHJcblx0Zm9udC1zaXplICAgOiBsaWItZm9udC1zaXplKC0yKTtcclxufVxyXG5cclxuLy8gMy4yINCh0L/QuNGB0LrQuFxyXG5AbWl4aW4gbWl4LWZvb3Rlci1saXN0KCkge1xyXG5cdG1hcmdpbi10b3AgOiAxMHB4O1xyXG5cclxuXHRmb250LXNpemUgIDogbGliLWZvbnQtc2l6ZSgtMik7XHJcblx0I3skbWl4LWxpc3R9X2l0ZW0ge1xyXG5cdFx0bWFyZ2luLXRvcCA6IDVweDtcclxuXHR9XHJcbn1cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDQuINCe0LHRidC40LUg0YHRgtC40LvQuCDQtNC70Y8g0LrQvtGA0LfQuNC90Ysg0L3QsCDQstGC0L7RgNC+0Lwg0YjQsNCz0LUg0L7RhNC+0YDQvNC70LXQvdC40Y8g0LfQsNC60LDQt9CwLlxyXG4vLyA0LjEg0JLRhdC+0LQv0YDQtdCz0LjRgdGC0YDQsNGG0LjRjyDRh9C10YDQtdC3INGB0L7Rhi7RgdC10YLQuFxyXG5AbWl4aW4gbWl4LWNvbW1vbi1vcmRlci1zb2NpYWwtbGlua3MtbmFycm93KCkge1xyXG5cdCN7JG1peC1zb2NpYWwtbGlua3N9X3RpdGxlIHtcclxuXHRcdGRpc3BsYXkgOiBibG9jaztcclxuXHR9XHJcblx0I3skbWl4LXNvY2lhbC1saW5rc31fbGlzdCN7JG1peC1saXN0fSB7XHJcblx0XHRtYXJnaW4tdG9wIDogMjBweDtcclxuXHRcdCN7JG1peC1saXN0fV9pdGVtIHtcclxuXHRcdFx0I3skbWl4LXNvY2lhbC1saW5rfSN7JG1peC1saW5rLWJ0bn0ge1xyXG5cdFx0XHRcdCN7JG1peC1saW5rLWJ0bn1fYWRkaXRpb24ge1xyXG5cdFx0XHRcdFx0ZGlzcGxheSA6IG5vbmU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vLyA0LjIuINCi0LXQutGB0YLQvtCy0L7QtSDQv9C+0LvQtSDQsdC70L7QutCwIFwib3JkZXItbWFrZVwiXHJcbkBtaXhpbiBvcmRlci1tYWtlLWZpZWxkLXRleHQoXHJcblx0JG1hcmdpbi10b3A6IDIwcHgsXHJcblx0JGZsb2F0LWxhYmVsOiBsZWZ0LFxyXG5cdCRmbG9hdC1pbnB1dDogcmlnaHQsXHJcblx0JHdpZHRoLWxhYmVsOiA0NSUsXHJcblx0JHdpZHRoLWlucHV0OiA1MCUsXHJcblx0JHBhZGRpbmctbGVmdDogJHdpZHRoLWlucHV0XHJcbikge1xyXG5cdGRpc3BsYXkgICAgICAgIDogaW5saW5lLWJsb2NrO1xyXG5cdG1hcmdpbi10b3AgICAgIDogJG1hcmdpbi10b3A7XHJcblx0d2lkdGggICAgICAgICAgOiAxMDAlO1xyXG5cclxuXHR2ZXJ0aWNhbC1hbGlnbiA6IGJvdHRvbTtcclxuXHQjeyRtaXgtZmllbGQtdGV4dH0ge1xyXG5cdFx0Jl9sYWJlbCB7XHJcblx0XHRcdGZsb2F0IDogJGZsb2F0LWxhYmVsO1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1sYWJlbDtcclxuXHRcdH1cclxuXHRcdCZfaW5wdXQge1xyXG5cdFx0XHRmbG9hdCA6ICRmbG9hdC1pbnB1dDtcclxuXHRcdFx0d2lkdGggOiAkd2lkdGgtaW5wdXQ7XHJcblx0XHR9XHJcblx0XHQmX2hlbHAge1xyXG5cdFx0XHRmbG9hdCA6IGxlZnQ7XHJcblx0XHRcdHBhZGRpbmctbGVmdDogJHBhZGRpbmctbGVmdDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8vIDQuMy4g0JLRi9C/0LDQtNCw0Y7RidC40Lkg0YHQv9C40YHQvtC6INCx0LvQvtC60LAgXCJvcmRlci1tYWtlXCJcclxuQG1peGluIG9yZGVyLW1ha2UtZmllbGQtc2VsZWN0KFxyXG5cdCRtYXJnaW4tdG9wOiAyMHB4LFxyXG5cdCRmbG9hdC1sYWJlbDogbGVmdCxcclxuXHQkZmxvYXQtc2VsZWN0OiByaWdodCxcclxuXHQkd2lkdGgtbGFiZWw6IDQ1JSxcclxuXHQkd2lkdGgtc2VsZWN0OiA1MCUsXHJcblx0JHBhZGRpbmctbGVmdDogJHdpZHRoLXNlbGVjdFxyXG4pIHtcclxuXHRkaXNwbGF5ICAgICAgICA6IGlubGluZS1ibG9jaztcclxuXHRtYXJnaW4tdG9wICAgICA6ICRtYXJnaW4tdG9wO1xyXG5cdHdpZHRoICAgICAgICAgIDogMTAwJTtcclxuXHJcblx0dmVydGljYWwtYWxpZ24gOiBib3R0b207XHJcblx0I3skbWl4LWZpZWxkLXNlbGVjdH0ge1xyXG5cdFx0Jl9sYWJlbCB7XHJcblx0XHRcdGZsb2F0IDogJGZsb2F0LWxhYmVsO1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1sYWJlbDtcclxuXHRcdH1cclxuXHRcdCZfc2VsZWN0IHtcclxuXHRcdFx0ZmxvYXQgOiAkZmxvYXQtc2VsZWN0O1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1zZWxlY3Q7XHJcblx0XHR9XHJcblx0XHQmX2hlbHAge1xyXG5cdFx0XHRmbG9hdCA6IGxlZnQ7XHJcblx0XHRcdHBhZGRpbmctbGVmdDogJHBhZGRpbmctbGVmdDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8vIDQuNC4g0KLQtdC60YHRgtC+0LLQsNGPINC+0LHQu9Cw0YHRgtGMINCx0LvQvtC60LAgXCJvcmRlci1tYWtlXCJcclxuQG1peGluIG9yZGVyLW1ha2UtZmllbGQtdGV4dGFyZWEoXHJcblx0JG1hcmdpbi10b3A6IDIwcHgsXHJcblx0JGZsb2F0LWxhYmVsOiBsZWZ0LFxyXG5cdCRmbG9hdC10ZXh0YXJlYTogcmlnaHQsXHJcblx0JHdpZHRoLWxhYmVsOiA0NSUsXHJcblx0JHdpZHRoLXRleHRhcmVhOiA1MCUsXHJcblx0JHJlc2l6ZTogdmVydGljYWwsXHJcblx0JHBhZGRpbmctbGVmdDogJHdpZHRoLXRleHRhcmVhXHJcbikge1xyXG5cdGRpc3BsYXkgICAgICAgIDogaW5saW5lLWJsb2NrO1xyXG5cdG1hcmdpbi10b3AgICAgIDogJG1hcmdpbi10b3A7XHJcblx0d2lkdGggICAgICAgICAgOiAxMDAlO1xyXG5cclxuXHR2ZXJ0aWNhbC1hbGlnbiA6IGJvdHRvbTtcclxuXHQjeyRtaXgtZmllbGQtdGV4dGFyZWF9IHtcclxuXHRcdCZfbGFiZWwge1xyXG5cdFx0XHRmbG9hdCA6ICRmbG9hdC1sYWJlbDtcclxuXHRcdFx0d2lkdGggOiAkd2lkdGgtbGFiZWw7XHJcblx0XHR9XHJcblx0XHQmX3RleHRhcmVhIHtcclxuXHRcdFx0ZmxvYXQgIDogJGZsb2F0LXRleHRhcmVhO1xyXG5cdFx0XHR3aWR0aCAgOiAkd2lkdGgtdGV4dGFyZWE7XHJcblxyXG5cdFx0XHRyZXNpemUgOiAkcmVzaXplO1xyXG5cdFx0fVxyXG5cdFx0Jl9oZWxwIHtcclxuXHRcdFx0ZmxvYXQgOiBsZWZ0O1xyXG5cdFx0XHRwYWRkaW5nLWxlZnQ6ICRwYWRkaW5nLWxlZnQ7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA1LiDQntCx0YnQuNC1INGB0YLQuNC70Lgg0L/RgNC10LTQu9C+0LbQtdC90LjQuSDQsiDQu9C40YfQvdC+0Lwg0LrQsNCx0LjQvdC10YLQtVxyXG5AbWl4aW4gbWl4LWNvbW1vbi1wZXJzb25hbC1vZmZlcigpIHtcclxuXHRoZWlnaHQgICAgICAgICAgIDogNTFweDtcclxuXHJcblx0Ym9yZGVyICAgICAgICAgICA6IG5vbmU7XHJcblx0Ym9yZGVyLXJhZGl1cyAgICA6IDA7XHJcblx0YmFja2dyb3VuZC1jb2xvciA6ICRtaXgtYmctcGVyc29uYWwtb2ZmZXI7XHJcblx0Ym94LXNoYWRvdyAgICAgICA6IG5vbmU7XHJcblx0I3skbWl4LW9mZmVyfV9wcmV2aWV3I3skbWl4LXByZXZpZXd9IHtcclxuXHRcdGxlZnQgOiA1cHg7XHJcblx0XHQjeyRtaXgtcHJldmlld31fbGluayN7JG1peC1saW5rLWltZ30ge1xyXG5cdFx0XHRAaW5jbHVkZSBsaWItbGluay1pbWctcGFyYW0oXHJcblx0XHRcdFx0JGhlaWdodCA6IDQwcHgsXHJcblx0XHRcdFx0JHJhdGlvIDogKDE2LzkpLFxyXG5cdFx0XHRcdCRib3JkZXIgOiAkbWl4LWNvbG9yLWJvcmRlci1wZXJzb25hbC1vZmZlci1pbWdcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHR9XHJcblx0I3skbWl4LW9mZmVyLWRlc2NyaXB0aW9ufSB7XHJcblx0XHRwb3NpdGlvbiA6IHJlbGF0aXZlO1xyXG5cdFx0Jjpob3ZlciB7XHJcblx0XHRcdCN7JG1peC1vZmZlci1kZXNjcmlwdGlvbn1fY29udGFpbmVyLFxyXG5cdFx0XHQjeyRtaXgtb2ZmZXItbmV3LXByaWNlfSN7JG1peC1kZXRhaWx9IHtcclxuXHRcdFx0XHRAaW5jbHVkZSBsaWItdGV4dC1ibGFja291dC1jaGFuZ2UgKFxyXG5cdFx0XHRcdFx0JGNvbG9yMSA6IDIzNixcclxuXHRcdFx0XHRcdCRjb2xvcjIgOiAyMzYsXHJcblx0XHRcdFx0XHQkY29sb3IzIDogMjM2XHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Jl9jb250YWluZXIge1xyXG5cdFx0XHRoZWlnaHQgOiAxMDAlO1xyXG5cclxuXHRcdFx0QGluY2x1ZGUgbGliLXRleHQtYmxhY2tvdXQoXHJcblx0XHRcdFx0JGNvbG9yMSA6IDIzNixcclxuXHRcdFx0XHQkY29sb3IyIDogMjM2LFxyXG5cdFx0XHRcdCRjb2xvcjMgOiAyMzZcclxuXHRcdFx0KTtcclxuXHRcdFx0I3skbWl4LW9mZmVyLXRpdGxlfSN7JG1peC1ibG9ja30ge1xyXG5cdFx0XHRcdHBhZGRpbmctbGVmdCA6IDA7XHJcblx0XHRcdFx0QGluY2x1ZGUgbGliLXRleHQtaHlwaGVucyhcclxuXHRcdFx0XHRcdCR0eXBlIDogbGFzdENsaXBcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHRcdCN7JG1peC1vZmZlcn1fdGV4dCB7XHJcblx0XHRcdFx0cGFkZGluZy10b3AgOiAxMHB4O1xyXG5cclxuXHRcdFx0XHRmb250LXNpemUgICA6IGxpYi1mb250LXNpemUoLTQpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQjeyRtaXgtb2ZmZXItbmV3LXByaWNlfSN7JG1peC1kZXRhaWx9IHtcclxuXHRcdFx0Ym90dG9tICAgICAgOiAtMjBweDtcclxuXHRcdFx0bWFyZ2luLXRvcCAgOiAwO1xyXG5cdFx0XHRwYWRkaW5nLXRvcCA6IDA7XHJcblxyXG5cdFx0XHRAaW5jbHVkZSBsaWItdGV4dC1ibGFja291dChcclxuXHRcdFx0XHQkY29sb3IxIDogMjM2LFxyXG5cdFx0XHRcdCRjb2xvcjIgOiAyMzYsXHJcblx0XHRcdFx0JGNvbG9yMyA6IDIzNlxyXG5cdFx0XHQpO1xyXG5cdFx0fVxyXG5cdFx0I3skbWl4LW9mZmVyLWJ1dHRvbn0jeyRtaXgtYmxvY2t9IHtcclxuXHRcdFx0cmlnaHQgIDogLTExNXB4O1xyXG5cdFx0XHRib3R0b20gOiAtMTZweDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiIsIi8v0JjQvNC/0L7RgNGCINGE0LDQudC70L7QslxyXG5AaW1wb3J0ICdtYWluLXZhcmlhYmxlcyc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuI3skd3JhcHBlcn0ge1xyXG5cclxuXHRAaW5jbHVkZSBtaXgtY29udGVudC1jb21tb24tcGFyYW0oKTtcclxuXHJcblx0Jl9vZmZlciN7JHRpbGV9IHtcclxuXHRcdG1hcmdpbi10b3AgOiBsaWItbGluZS10b3AoMSk7XHJcblx0fVxyXG59XHJcbiIsIi8v0JrQu9Cw0YHRgdGLXHJcbiR3cmFwcGVyIDogbGliLWdldC1jbGFzcygnbWFpbicpO1xyXG4kdGlsZSA6IGxpYi1nZXQtY2xhc3MoJ3RpbGUnKTtcclxuJHRpdGxlLWNvbXBsZXggOiBsaWItZ2V0LWNsYXNzKCd0aXRsZS1jb21wbGV4Jyk7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4iLCIvL9CY0LzQv9C+0YDRgiDRhNCw0LnQu9C+0LJcclxuQGltcG9ydCAnbWFpbi12YXJpYWJsZXMnO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiN7JHdyYXBwZXJ9IHtcclxuXHJcblx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obmFycm93KSB7XHJcblx0XHRAaW5jbHVkZSBtaXgtY29udGVudC1jb21tb24tbmFycm93LXBhcmFtKCk7XHJcblx0fVxyXG5cdEBpbmNsdWRlIGxpYi1yZXNwb25kLXRvKG1vYmlsZSkge1xyXG5cdFx0QGluY2x1ZGUgbWl4LWNvbnRlbnQtY29tbW9uLW1vYmlsZS1wYXJhbSgpO1xyXG5cdH1cclxuXHQjeyR0aXRsZS1jb21wbGV4fSB7XHJcblx0XHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhtb2JpbGVNKSB7XHJcblx0XHRcdHBhZGRpbmctbGVmdCA6IDA7XHJcblx0XHR9XHJcblx0XHQmOmFmdGVyIHtcclxuXHRcdFx0QGluY2x1ZGUgbGliLXJlc3BvbmQtdG8obW9iaWxlTSkge1xyXG5cdFx0XHRcdGRpc3BsYXkgOiBub25lO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59XHJcbiIsIi8v0JrQu9Cw0YHRgdGLXHJcbiR3cmFwcGVyIDogbGliLWdldC1jbGFzcygnbWFpbicpO1xyXG4kdGlsZSA6IGxpYi1nZXQtY2xhc3MoJ3RpbGUnKTtcclxuJHRpdGxlLWNvbXBsZXggOiBsaWItZ2V0LWNsYXNzKCd0aXRsZS1jb21wbGV4Jyk7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFVSUEsQUFBQSxRQUFRLENBQUk7RURtRFgsUUFBUSxFQUFJLFFBQVE7RUFDcEIsTUFBTSxFQUFNLE1BQU07RUFDbEIsT0FBTyxFQUxPLElBQUksQ0FLTyxJQUFJLENBSlosSUFBSSxDQUl5QixJQUFJO0VBQ2xELFNBQVMsRUFBRyxNQUFNLEdDL0NsQjtFQUhBLEFBQUEsY0FBTyxBQUFBLFFBQVEsQ0FBQztJQUNmLFVBQVUsRVIrSVAsVUFBNkIsR1E5SWhDOztBTGNELE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RU9wQnBDLEFBQUEsUUFBUSxDQUFJO0lINERWLGFBQUssRUFBRyxJQUFJO0lBQ1osWUFBSSxFQUFJLElBQUk7SUFFYixTQUFTLEVBQUcsTUFBTSxHRzdDbEI7O0FQRUEsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFT3BCcEMsQUFBQSxRQUFRLENBQUk7SUhxRVYsYUFBSyxFQUFHLENBQUM7SUFDVCxZQUFJLEVBQUksQ0FBQyxHR3BEVjs7QVBFQSxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VPcEJwQyxBQVFDLFFBUk8sQ0FRUCxpQkFBaUIsQ0FBQztJQUVoQixZQUFZLEVBQUcsQ0FBQyxHQU9qQjs7QVBHRCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VPcEJwQyxBQVFDLFFBUk8sQ0FRUCxpQkFBaUIsQUFJaEIsTUFBTyxDQUFDO0lBRU4sT0FBTyxFQUFHLElBQUksR0FFZiJ9 */","// Импорт файлов\r\n@import 'variables';\r\n//-------------------------------\r\n\r\n// ВАЖНО!!! \r\n// Для избежания конфликтов с подключаемыми scss фреймфорками и библиотеками\r\n// обязательно добавляйте \"lib-\" в начале переменных и примесей этого файла\r\n\r\n// Цвета\r\n$lib-color-rating-icon-base : lib-color(primary-base-dark);\r\n$lib-color-shadow-rating-icon : lib-color(primary-darker);\r\n$lib-color-triangle : lib-color(accent-base);\r\n$lib-color-close : lib-color(primary-dark);\r\n$lib-color-close-hover : lib-color(accent-base-bright);\r\n//-------------------------------\r\n\r\n// Классы\r\n$lib-grid-class-default : lib-get-class('grid');\r\n$lib-detail : lib-get-class('detail');\r\n//-------------------------------\r\n\r\n// 1. Установка точки переключения\r\n@mixin lib-respond-to($key) {\r\n\r\n\t@media screen and (max-width : #{lib-breakpoints($key)}) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 2. Ширина ячейки\r\n// 2.1. Для сетки из 14-ти колонок\r\n@mixin lib-box14($cell:14) {\r\n\tfloat : left;\r\n\twidth : (100% * $cell / 14);\r\n}\r\n\r\n// 2.2. Для сетки из 12-ти колонок\r\n@mixin lib-box12($cell:12) {\r\n\tfloat : left;\r\n\twidth : (100% * $cell / 12);\r\n}\r\n\r\n// 2.3. Для сетки из 10-ти колонок\r\n@mixin lib-box10($cell:10) {\r\n\tfloat : left;\r\n\twidth : (100% * $cell / 10);\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 3. Параметры сетки контента\r\n// Устанавливает основные параметры боковой панели и контента\r\n// сайта (их наличие, ширину и расположение) в зависимоти от:\r\n// - наличия и ширины боковой панели в px;\r\n// - ширины сайта и величины внутренних отсупов сайта в px;\r\n// - наличия и значения свойства float для этих колонок.\r\n\r\n@mixin lib-grid-param(\r\n\t$grid-class: $lib-grid-class-default,\r\n\t$padding-container-px: 15px,\r\n\t$width-container-px: 1000px,\r\n\t$width-aside-px: 200px,\r\n\t$aside-float: none,//none,left,right,only-width\r\n\t$content-float: only-width//left,right,only-width,only-full-width\r\n) {\r\n\t$width-container-absolute : ($width-container-px / 1px); //преобразование к числу\r\n\t$padding-container-absolute : ($padding-container-px / 1px); //преобразование к числу\r\n\t$width-aside-absolute : ($width-aside-px / 1px); //преобразование к числу\r\n\t$width-calculated : ($width-container-absolute - (2 * $padding-container-absolute));\r\n\t$width-aside : ($width-aside-absolute * 100% / $width-calculated);\r\n\t$width-content : (($width-calculated - $width-aside-absolute) * 100% / $width-calculated);\r\n\r\n\t@if $aside-float == none {\r\n\t} @else if $aside-float == only-width {\r\n\t\t#{$grid-class}_aside {\r\n\t\t\twidth : $width-aside;\r\n\t\t}\r\n\t} @else {\r\n\t\t#{$grid-class}_aside {\r\n\t\t\tfloat : $aside-float;\r\n\t\t\twidth : $width-aside;\r\n\t\t}\r\n\t}\r\n\r\n\t@if $content-float == only-width {\r\n\t\t#{$grid-class}_content {\r\n\t\t\twidth : $width-content;\r\n\t\t}\r\n\t} @else if $content-float == only-full-width {\r\n\t\t#{$grid-class}_content {\r\n\t\t\twidth : 100%;\r\n\t\t}\r\n\t} @else {\r\n\t\t#{$grid-class}_content {\r\n\t\t\tfloat : $content-float;\r\n\t\t\twidth : $width-content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 4. Параметры текста\r\n// 4.1 Основные параметры\r\n@mixin lib-text-base-param($level: 0) {\r\n\tpadding-top : lib-line-top($level);\r\n\r\n\tfont-size   : lib-font-size($level);\r\n\tline-height : lib-line-height($level);\r\n}\r\n\r\n// 4.2 Затемнение текста\r\n@mixin lib-text-blackout(\r\n\t$vertical-position  : \"bottom\",\r\n\t$right\t\t\t\t: 0,\r\n\t$height             : 100%,\r\n\t$width              : 8px,\r\n\t$color1             : 255,\r\n\t$color2             : 255,\r\n\t$color3             : 255\r\n) {\r\n\t$bg1 : rgba($color1, $color2, $color3, 0.0);\r\n\t$bg2 : rgba($color1, $color2, $color3, 0.8);\r\n\t$bg3 : rgba($color1, $color2, $color3, 1.0);\r\n\r\n\t&:before {\r\n\t\tcontent                   : '';\r\n\t\tposition                  : absolute;\r\n\t\t#{$vertical-position}     : 0;\r\n\t\tright                     : $right;\r\n\t\theight                    : $height;\r\n\t\twidth                     : $width;\r\n\t\tz-index                   : 1;\r\n\r\n\t\tbackground                : linear-gradient(to right, $bg1, $bg2, $bg3);\r\n\t}\r\n}\r\n\r\n// 4.3 Изменение цвета затемнения текста\r\n@mixin lib-text-blackout-change(\r\n\t$color1     : 255,\r\n\t$color2     : 252,\r\n\t$color3     : 235\r\n) {\r\n\t$bg1 : rgba($color1, $color2, $color3, 0.0);\r\n\t$bg2 : rgba($color1, $color2, $color3, 0.8);\r\n\t$bg3 : rgba($color1, $color2, $color3, 1.0);\r\n\r\n\t&:before {\r\n\t\tbackground : linear-gradient(to right, $bg1, $bg2, $bg3);\r\n\t}\r\n\r\n}\r\n\r\n// 4.4 Перенос/обрыв текста\r\n@mixin lib-text-hyphens($type : hyphens) {\r\n\t@if $type == lastEllipsis {\r\n\t\toverflow      : hidden;\r\n\t\ttext-overflow : ellipsis;\r\n\t\twhite-space   : nowrap;\r\n\t\toverflow-wrap : normal;\r\n\t\tword-wrap     : normal;\r\n\t\thyphens       : none;\r\n\t} @else if $type == lastClip {\r\n\t\toverflow      : hidden;\r\n\t\ttext-overflow : clip;\r\n\t\twhite-space   : nowrap;\r\n\t\toverflow-wrap : normal;\r\n\t\tword-wrap     : normal;\r\n\t\thyphens       : none;\r\n\t} @else if $type == breakword {\r\n\t\toverflow-wrap : break-word;\r\n\t\tword-wrap     : break-word;\r\n\t} @else if $type == limitРyphens {\r\n\t\toverflow      : hidden;\r\n\t\toverflow-wrap : break-word;\r\n\t\tword-wrap     : break-word;\r\n\t\thyphens       : auto;\r\n\t} @else { //hyphens\r\n\t\toverflow-wrap : break-word;\r\n\t\tword-wrap     : break-word;\r\n\t\thyphens       : auto;\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 5. Параметры иконочного шрифта\r\n@mixin lib-font-icon(\r\n\t$font-weight: normal,\r\n\t$line-height: 1\r\n) {\r\n\tfont-family             : 'icomoon';\r\n\tfont-style              : normal;\r\n\tfont-weight             : $font-weight;\r\n\tfont-variant            : normal;\r\n\ttext-transform          : none;\r\n\tline-height             : $line-height;\r\n\r\n\t// Better Font Rendering ============\r\n\t-webkit-font-smoothing  : antialiased;\r\n\t-moz-osx-font-smoothing : grayscale;\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 6. Иконки рейтинга (звезды)\r\n@mixin lib-rating-icon(\r\n\t$color: $lib-color-rating-icon-base,\r\n\t$text-shadow: false\r\n) {\r\n\t&:before {\r\n\t\tcontent        : '\\f005\\f005\\f005\\f005\\f005';\r\n\t\tdisplay        : inline-block;\r\n\t\tpadding-left   : 2px;\r\n\r\n\t\tcolor          : $color;\r\n\t\tletter-spacing : 2px;\r\n\t\twhite-space    : nowrap;\r\n\r\n\t\t@if $text-shadow == true {\r\n\t\t\ttext-shadow : 1px 1px 2px $lib-color-shadow-rating-icon;\r\n\t\t}\r\n\r\n\t\t@include lib-font-icon;\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 7. Цена в деталях\r\n@mixin lib-price-detail(\r\n\t$position: relative,\r\n\t$width: 100%\r\n) {\r\n\tdisplay     : inline-block;\r\n\tposition    : $position;\r\n\tmargin-top  : 10px;\r\n\tpadding-top : 8px;\r\n\twidth       : $width;\r\n\t#{$lib-detail}_label {\r\n\t\tdisplay : inline-block;\r\n\t}\r\n\t#{$lib-detail}_value {\r\n\t\tdisplay     : inline-block;\r\n\t\tmargin-left : 5px;\r\n\r\n\t\tfont-weight : $lib-font-weight-bold;\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 8. Параметры ссылки в блоке предварительного просмотра\r\n@mixin lib-link-img-param(//по умолчанию - квадрат\r\n\t$height: 150px,\r\n\t$ratio: 1,\r\n\t$bg: none,\r\n\t$border: none,\r\n\t$text-align: none,\r\n\t$vertical-align: none\r\n) {\r\n\t$height-link-img : $height;\r\n\t$width-link-img : ($height-link-img * $ratio);\r\n\t//чтобы картинка гарантированно не выезжала за пределы блока,\r\n\t// устанавливаем высоту строки на 6рх меньше\r\n\t$line-height-link-img : ($height-link-img - 6);\r\n\r\n\theight      : $height-link-img;\r\n\twidth       : $width-link-img;\r\n\r\n\tline-height : $line-height-link-img;\r\n\r\n\t@if ($bg != none) {\r\n\t\tbackground : $bg,\r\n\t}\r\n\t@if ($border != none) {\r\n\t\tborder : 1px solid $border;\r\n\t}\r\n\t@if ($text-align != none) {\r\n\t\ttext-align : $text-align;\r\n\t}\r\n\t@if ($vertical-align != none) {\r\n\t\tvertical-align : $vertical-align;\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n//-------------------------------\r\n// 9. Отзывчивое соотношение\r\n// Миксин для создания масштабируемых элементов(обычно изображения/картинки заднего фона),\r\n// чтобы поддерживать соотношение.\r\n@mixin lib-responsive-ratio(//по умолчанию - квадрат\r\n\t$x:1,\r\n\t$y:1\r\n) {\r\n\t$padding : unquote(( $y / $x ) * 100 + '%');\r\n\r\n\t&:before {\r\n\t\tcontent     : '';\r\n\t\tdisplay     : block;\r\n\t\twidth       : 100%;\r\n\t\tpadding-top : $padding;\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 10. CSS треугольники\r\n@mixin css-triangle(\r\n\t$color: $lib-color-triangle,\r\n\t$direction: 'down',\r\n\t$size: 8px,\r\n\t$ratio: 3,\r\n\t$offset: 2px,\r\n\t$center: false,\r\n\t$round: false\r\n) {\r\n\t$side-size : ($size * $ratio / 2);\r\n\r\n\tcontent  : '';\r\n\tdisplay  : block;\r\n\tposition : absolute;\r\n\theight   : 0;\r\n\twidth    : 0;\r\n\r\n\t@if $round {\r\n\t\tborder-radius : 3px;\r\n\t}\r\n\t@if $direction == down {\r\n\t\tborder-left   : $side-size solid transparent;\r\n\t\tborder-right  : $side-size solid transparent;\r\n\t\tborder-top    : $size solid $color;\r\n\t\ttop           : $offset;\r\n\t\t@if $center {\r\n\t\t\tmargin-left : 50%;\r\n\t\t\tleft        : -$side-size;\r\n\t\t}\r\n\t} @else if $direction == up {\r\n\t\tborder-left   : $side-size solid transparent;\r\n\t\tborder-right  : $side-size solid transparent;\r\n\t\tborder-bottom : $size solid $color;\r\n\t\tbottom        : $offset;\r\n\t\t@if $center {\r\n\t\t\tmargin-left : 50%;\r\n\t\t\tleft        : -$side-size;\r\n\t\t}\r\n\t} @else if $direction == right {\r\n\t\tborder-top    : $side-size solid transparent;\r\n\t\tborder-bottom : $side-size solid transparent;\r\n\t\tborder-left   : $size solid $color;\r\n\t\tright         : $offset;\r\n\t\t@if $center {\r\n\t\t\tmargin-top : 50%;\r\n\t\t\ttop        : -$side-size;\r\n\t\t}\r\n\t} @else if $direction == left {\r\n\t\tborder-top    : $side-size solid transparent;\r\n\t\tborder-bottom : $side-size solid transparent;\r\n\t\tborder-right  : $size solid $color;\r\n\t\tleft          : $offset;\r\n\t\t@if $center {\r\n\t\t\tmargin-top : 50%;\r\n\t\t\ttop        : -$side-size;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-------------------------------\r\n\r\n// 11. Кнопка закрыть\r\n@mixin lib-close(\r\n\t$top: 8px,\r\n\t$right: 8px\r\n) {\r\n\tposition  : absolute;\r\n\ttop       : $top;\r\n\tright     : $right;\r\n\tz-index   : 1;\r\n\r\n\tcursor    : pointer;\r\n\tcolor     : $lib-color-close;\r\n\tfont-size : lib-font-size(e2);\r\n\t&:hover {\r\n\t\tcolor : $lib-color-close-hover;\r\n\t}\r\n\t&:after {\r\n\t\tcontent : '\\f057';\r\n\r\n\t\t@include lib-font-icon;\r\n\t}\r\n}\r\n\r\n//-------------------------------","//Импорт файлов\r\n@import 'main-variables';\r\n//-------------------------------\r\n\r\n#{$wrapper} {\r\n\r\n\t@include lib-respond-to(narrow) {\r\n\t\t@include mix-content-common-narrow-param();\r\n\t}\r\n\t@include lib-respond-to(mobile) {\r\n\t\t@include mix-content-common-mobile-param();\r\n\t}\r\n\t#{$title-complex} {\r\n\t\t@include lib-respond-to(mobileM) {\r\n\t\t\tpadding-left : 0;\r\n\t\t}\r\n\t\t&:after {\r\n\t\t\t@include lib-respond-to(mobileM) {\r\n\t\t\t\tdisplay : none;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]} */
/*# sourceMappingURL=main.css.map*/