.su-about-purchase {
  position: relative;
  margin: 0 auto;
  padding: 20px 40px 15px 40px;
  max-width: 1280px;
}

.su-about-purchase_tabs.su-tabs-block,
.su-about-purchase_tabs.su-payment-icons {
  margin-top: 30px;
}

@media screen and (max-width: 992px) {
  .su-about-purchase {
    padding-right: 20px;
    padding-left: 20px;
  }
}
/*# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["/OpenServer/domains/manicurshop/frontend/scss/2_project/pages/about-purchase/_about-purchase.scss","/OpenServer/domains/manicurshop/frontend/scss/utils/_mixins.scss","scss/2_project/pages/about-purchase/index.scss","/OpenServer/domains/manicurshop/frontend/scss/2_project/pages/about-purchase/_about-purchase-media.scss"],"names":[],"mappings":"AAIA;ECmDC,mBAAoB;EACpB,eAAkB;EAClB,6BAAkD;EAClD,kBAAkB;CCrDlB;;AAED;;ECHA,iBAAA;CDMC;;AAED;EACE;IACE,oBAAoB;IACpB,mBAAmB;GACpB;CACF","file":"scss/2_project/pages/about-purchase/index.scss","sourcesContent":["//Импорт файлов\r\n@import 'about-purchase-variables';\r\n//-------------------------------\r\n\r\n#{$wrapper} {\r\n\t@include mix-content-common-param();\r\n\t&_tabs#{$tabs},\r\n\t&_tabs#{$payment} {\r\n\t\tmargin-top : 30px;\r\n\t}\r\n}","// ВАЖНО!!!\r\n// Для избежания конфликтов с подключаемыми scss фреймфорками и библиотеками\r\n// обязательно добавляйте \"mix-\" в начале переменных и примесей этого файла\r\n\r\n// В этот файл вынесены общие стили страниц, которые не могут быть добавлены\r\n// в библиотеку (относятся только к текущему проекту)\r\n\r\n// Цвета\r\n$mix-color-footer-title : lib-color(primary-lighter);\r\n$mix-bg-comments-list : lib-color(primary-lighter);\r\n$mix-bg-jsp-vertical-bar : lib-color(primary-lighter);\r\n$mix-bg-jsp-drag : lib-color(primary-lighter);\r\n$mix-bg-personal-offer : transparent;\r\n$mix-color-border-jsp-vertical-bar : lib-color(primary-base);\r\n$mix-color-border-jsp-drag : lib-color(primary-base);\r\n$mix-color-border-new-price : lib-color(primary-base-light);\r\n$mix-color-border-img : lib-color(primary-base-light);\r\n$mix-color-border-personal-offer-img : lib-color(primary-base-light);\r\n//-------------------------------\r\n\r\n// Классы\r\n$mix-tile : lib-get-class('tile');\r\n$mix-offer : lib-get-class('offer');\r\n$mix-offer-description : lib-get-class('offer-description');\r\n$mix-offer-title : lib-get-class('offer-title');\r\n$mix-offer-text : lib-get-class('offer-text');\r\n$mix-offer-annotation : lib-get-class('offer-annotation');\r\n$mix-offer-new-price : lib-get-class('offer-new-price');\r\n$mix-offer-old-price : lib-get-class('offer-old-price');\r\n$mix-offer-price : lib-get-class('offer-price');\r\n$mix-offer-button : lib-get-class('offer-button');\r\n$mix-link-img : lib-get-class('link-img');\r\n$mix-link-btn : lib-get-class('link-btn');\r\n$mix-list : lib-get-class('list');\r\n$mix-block : lib-get-class('block');\r\n$mix-preview : lib-get-class('preview');\r\n$mix-rating : lib-get-class('rating');\r\n$mix-detail : lib-get-class('detail');\r\n$mix-social-links : lib-get-class('social-links');\r\n$mix-social-link : lib-get-class('social-link');\r\n$mix-free-mail : lib-get-class('free-mail');\r\n$mix-slider : lib-get-class('slider');\r\n$mix-field-text : lib-get-class('field-text');\r\n$mix-field-select : lib-get-class('field-select');\r\n$mix-field-textarea : lib-get-class('field-textarea');\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 1. Общие параметры контента\r\n// 1.1 По умолчанию\r\n@mixin mix-content-common-param(\r\n\t$padding-top: 20px,\r\n\t$padding-bottom: 15px\r\n) {\r\n\tposition  : relative;\r\n\tmargin    : 0 auto;\r\n\tpadding   : $padding-top 40px $padding-bottom 40px;\r\n\tmax-width : 1280px;\r\n}\r\n\r\n// 1.2 При разрешении экрана \"narrow\"\r\n@mixin mix-content-common-narrow-param() {\r\n\tpadding: {\r\n\t\tright : 20px;\r\n\t\tleft  : 20px;\r\n\t}\r\n}\r\n\r\n// 1.3 При разрешении экрана \"mobile\"\r\n@mixin mix-content-common-mobile-mobile() {\r\n\tpadding: {\r\n\t\tright : 0;\r\n\t\tleft  : 0;\r\n\t}\r\n}\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 2. Переопределение стилей пдагина \"jscrollpane\"\r\n@mixin mix-override-jscrollpane(\r\n\t$after-height: 45px,\r\n\t$before-height: 45px\r\n) {\r\n\t$width-vertical-bar : 14px;\r\n\t$offset-container-pseudo : $width-vertical-bar + 3;\r\n\t//классы плагина \"jscrollpane\"\r\n\t.jspContainer {\r\n\t\t&:before,\r\n\t\t&:after {\r\n\t\t\tcontent  : '';\r\n\t\t\tposition : absolute;\r\n\t\t\tleft     : 0;\r\n\t\t\twidth    : 100%;\r\n\t\t\tz-index  : 2;\r\n\t\t}\r\n\t\t&:before {\r\n\t\t\ttop        : 0;\r\n\t\t\theight     : $before-height;\r\n\r\n\t\t\tbackground : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9), #ffffff, #ffffff);\r\n\t\t}\r\n\t\t&:after {\r\n\t\t\tbottom     : 0;\r\n\t\t\theight     : $after-height;\r\n\r\n\t\t\tbackground : linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9), #ffffff, #ffffff);\r\n\t\t}\r\n\t\t//Добавленный модификатор для отслеживания вертикальной полосы прокрутки\r\n\t\t&._jspOffset {\r\n\t\t\t&:after,\r\n\t\t\t&:before {\r\n\t\t\t\tleft : - $offset-container-pseudo;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.jspPane {\r\n\t\t\tmin-height : 100%;\r\n\r\n\t\t\tbackground : $mix-bg-comments-list;\r\n\t\t}\r\n\t\t.jspVerticalBar {\r\n\t\t\twidth         : $width-vertical-bar;\r\n\t\t\tz-index       : 3;\r\n\r\n\t\t\tbackground    : $mix-bg-jsp-vertical-bar;\r\n\t\t\tborder        : 1px solid $mix-color-border-jsp-vertical-bar;\r\n\t\t\tborder-radius : 3px;\r\n\t\t\t.jspTrack {\r\n\t\t\t\tbackground : transparent;\r\n\t\t\t\t.jspDrag {\r\n\t\t\t\t\tbackground    : $mix-bg-jsp-drag url(../../img/scrollbar/scrollbar.png) center center no-repeat;\r\n\t\t\t\t\tborder        : 1px solid $mix-color-border-jsp-drag;\r\n\t\t\t\t\tborder-radius : 3px;\r\n\t\t\t\t\tcursor        : pointer;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 3. Параметры элементов ячечеек подвала\r\n// 3.1 Заголовки\r\n@mixin mix-footer-title() {\r\n\tcolor       : $mix-color-footer-title;\r\n\tfont-family : 'OpenSansBold';\r\n\tfont-size   : lib-font-size(-2);\r\n}\r\n\r\n// 3.2 Списки\r\n@mixin mix-footer-list() {\r\n\tmargin-top : 10px;\r\n\r\n\tfont-size  : lib-font-size(-2);\r\n\t#{$mix-list}_item {\r\n\t\tmargin-top : 5px;\r\n\t}\r\n}\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 4. Общие стили для корзины на втором шаге оформления заказа.\r\n// 4.1 Вход/регистрация через соц.сети\r\n@mixin mix-common-order-social-links-narrow() {\r\n\t#{$mix-social-links}_title {\r\n\t\tdisplay : block;\r\n\t}\r\n\t#{$mix-social-links}_list#{$mix-list} {\r\n\t\tmargin-top : 20px;\r\n\t\t#{$mix-list}_item {\r\n\t\t\t#{$mix-social-link}#{$mix-link-btn} {\r\n\t\t\t\t#{$mix-link-btn}_addition {\r\n\t\t\t\t\tdisplay : none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 4.2. Текстовое поле блока \"order-make\"\r\n@mixin order-make-field-text(\r\n\t$margin-top: 20px,\r\n\t$float-label: left,\r\n\t$float-input: right,\r\n\t$width-label: 45%,\r\n\t$width-input: 50%,\r\n\t$padding-left: $width-input\r\n) {\r\n\tdisplay        : inline-block;\r\n\tmargin-top     : $margin-top;\r\n\twidth          : 100%;\r\n\r\n\tvertical-align : bottom;\r\n\t#{$mix-field-text} {\r\n\t\t&_label {\r\n\t\t\tfloat : $float-label;\r\n\t\t\twidth : $width-label;\r\n\t\t}\r\n\t\t&_input {\r\n\t\t\tfloat : $float-input;\r\n\t\t\twidth : $width-input;\r\n\t\t}\r\n\t\t&_help {\r\n\t\t\tfloat : left;\r\n\t\t\tpadding-left: $padding-left;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 4.3. Выпадающий список блока \"order-make\"\r\n@mixin order-make-field-select(\r\n\t$margin-top: 20px,\r\n\t$float-label: left,\r\n\t$float-select: right,\r\n\t$width-label: 45%,\r\n\t$width-select: 50%,\r\n\t$padding-left: $width-select\r\n) {\r\n\tdisplay        : inline-block;\r\n\tmargin-top     : $margin-top;\r\n\twidth          : 100%;\r\n\r\n\tvertical-align : bottom;\r\n\t#{$mix-field-select} {\r\n\t\t&_label {\r\n\t\t\tfloat : $float-label;\r\n\t\t\twidth : $width-label;\r\n\t\t}\r\n\t\t&_select {\r\n\t\t\tfloat : $float-select;\r\n\t\t\twidth : $width-select;\r\n\t\t}\r\n\t\t&_help {\r\n\t\t\tfloat : left;\r\n\t\t\tpadding-left: $padding-left;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 4.4. Текстовая область блока \"order-make\"\r\n@mixin order-make-field-textarea(\r\n\t$margin-top: 20px,\r\n\t$float-label: left,\r\n\t$float-textarea: right,\r\n\t$width-label: 45%,\r\n\t$width-textarea: 50%,\r\n\t$resize: vertical,\r\n\t$padding-left: $width-textarea\r\n) {\r\n\tdisplay        : inline-block;\r\n\tmargin-top     : $margin-top;\r\n\twidth          : 100%;\r\n\r\n\tvertical-align : bottom;\r\n\t#{$mix-field-textarea} {\r\n\t\t&_label {\r\n\t\t\tfloat : $float-label;\r\n\t\t\twidth : $width-label;\r\n\t\t}\r\n\t\t&_textarea {\r\n\t\t\tfloat  : $float-textarea;\r\n\t\t\twidth  : $width-textarea;\r\n\r\n\t\t\tresize : $resize;\r\n\t\t}\r\n\t\t&_help {\r\n\t\t\tfloat : left;\r\n\t\t\tpadding-left: $padding-left;\r\n\t\t}\r\n\t}\r\n}\r\n//-------------------------------\r\n\r\n\r\n//-------------------------------\r\n// 5. Общие стили предложений в личном кабинете\r\n@mixin mix-common-personal-offer() {\r\n\theight           : 51px;\r\n\r\n\tborder           : none;\r\n\tborder-radius    : 0;\r\n\tbackground-color : $mix-bg-personal-offer;\r\n\tbox-shadow       : none;\r\n\t#{$mix-offer}_preview#{$mix-preview} {\r\n\t\tleft : 5px;\r\n\t\t#{$mix-preview}_link#{$mix-link-img} {\r\n\t\t\t@include lib-link-img-param(\r\n\t\t\t\t$height : 40px,\r\n\t\t\t\t$ratio : (16/9),\r\n\t\t\t\t$border : $mix-color-border-personal-offer-img\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t#{$mix-offer-description} {\r\n\t\tposition : relative;\r\n\t\t&:hover {\r\n\t\t\t#{$mix-offer-description}_container,\r\n\t\t\t#{$mix-offer-new-price}#{$mix-detail} {\r\n\t\t\t\t@include lib-text-blackout-change (\r\n\t\t\t\t\t$color1 : 236,\r\n\t\t\t\t\t$color2 : 236,\r\n\t\t\t\t\t$color3 : 236\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t&_container {\r\n\t\t\theight : 100%;\r\n\r\n\t\t\t@include lib-text-blackout(\r\n\t\t\t\t$color1 : 236,\r\n\t\t\t\t$color2 : 236,\r\n\t\t\t\t$color3 : 236\r\n\t\t\t);\r\n\t\t\t#{$mix-offer-title}#{$mix-block} {\r\n\t\t\t\tpadding-left : 0;\r\n\t\t\t\t@include lib-text-hyphens(\r\n\t\t\t\t\t$type : lastClip\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t#{$mix-offer}_text {\r\n\t\t\t\tpadding-top : 10px;\r\n\r\n\t\t\t\tfont-size   : lib-font-size(-4);\r\n\t\t\t}\r\n\t\t}\r\n\t\t#{$mix-offer-new-price}#{$mix-detail} {\r\n\t\t\tbottom      : -20px;\r\n\t\t\tmargin-top  : 0;\r\n\t\t\tpadding-top : 0;\r\n\r\n\t\t\t@include lib-text-blackout(\r\n\t\t\t\t$color1 : 236,\r\n\t\t\t\t$color2 : 236,\r\n\t\t\t\t$color3 : 236\r\n\t\t\t);\r\n\t\t}\r\n\t\t#{$mix-offer-button}#{$mix-block} {\r\n\t\t\tright  : -115px;\r\n\t\t\tbottom : -16px;\r\n\t\t}\r\n\t}\r\n}\r\n//-------------------------------\r\n",".su-about-purchase {\n  position: relative;\n  margin: 0 auto;\n  padding: 20px 40px 15px 40px;\n  max-width: 1280px;\n}\n\n.su-about-purchase_tabs.su-tabs-block,\n.su-about-purchase_tabs.su-payment-icons {\n  margin-top: 30px;\n}\n\n@media screen and (max-width: 992px) {\n  .su-about-purchase {\n    padding-right: 20px;\n    padding-left: 20px;\n  }\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXG1hbmljdXJzaG9wXFxmcm9udGVuZFxcc2Nzc1xcMl9wcm9qZWN0XFxwYWdlc1xcYWJvdXQtcHVyY2hhc2VcXGluZGV4LnNjc3MiLCJzb3VyY2VzIjpbIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy8yX3Byb2plY3QvcGFnZXMvYWJvdXQtcHVyY2hhc2UvaW5kZXguc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy91dGlscy9fbGliLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvbGlicmFyeS9fdmFyaWFibGVzLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvbGlicmFyeS9fZnVuY3Rpb25zLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvbGlicmFyeS9fZnVuY3Rpb25zLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvbGlicmFyeS9fbWl4aW5zLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvbGlicmFyeS9fdmFyaWFibGVzLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvbGlicmFyeS9fZnVuY3Rpb25zLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvbGlicmFyeS9fcGxhY2Vob2xkZXJzLnNjc3MiLCIvT3BlblNlcnZlci9kb21haW5zL21hbmljdXJzaG9wL2Zyb250ZW5kL3Njc3MvdXRpbHMvX21peGlucy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzLzJfcHJvamVjdC9wYWdlcy9hYm91dC1wdXJjaGFzZS9fYWJvdXQtcHVyY2hhc2Uuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy8yX3Byb2plY3QvcGFnZXMvYWJvdXQtcHVyY2hhc2UvX2Fib3V0LXB1cmNoYXNlLXZhcmlhYmxlcy5zY3NzIiwiL09wZW5TZXJ2ZXIvZG9tYWlucy9tYW5pY3Vyc2hvcC9mcm9udGVuZC9zY3NzLzJfcHJvamVjdC9wYWdlcy9hYm91dC1wdXJjaGFzZS9fYWJvdXQtcHVyY2hhc2UtbWVkaWEuc2NzcyIsIi9PcGVuU2VydmVyL2RvbWFpbnMvbWFuaWN1cnNob3AvZnJvbnRlbmQvc2Nzcy8yX3Byb2plY3QvcGFnZXMvYWJvdXQtcHVyY2hhc2UvX2Fib3V0LXB1cmNoYXNlLXZhcmlhYmxlcy5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8v0JjQvNC/0L7RgNGCINGE0LDQudC70L7QslxyXG5AaW1wb3J0ICcuLi8uLi8uLi91dGlscy9fbGliJztcclxuQGltcG9ydCAnLi4vLi4vLi4vdXRpbHMvX21peGlucyc7XHJcbkBpbXBvcnQgJ2Fib3V0LXB1cmNoYXNlJztcclxuQGltcG9ydCAnYWJvdXQtcHVyY2hhc2UtbWVkaWEnO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuIiwiQGltcG9ydCAnbGlicmFyeS92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICdsaWJyYXJ5L2Z1bmN0aW9ucyc7XHJcbkBpbXBvcnQgJ2xpYnJhcnkvbWl4aW5zJztcclxuQGltcG9ydCAnbGlicmFyeS9wbGFjZWhvbGRlcnMnOyIsIi8v0JjQvNC/0L7RgNGCINGE0LDQudC70L7QslxyXG5AaW1wb3J0ICdmdW5jdGlvbnMnO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcImxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0L/QtdGA0LXQvNC10L3QvdGL0YUg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMS4g0J/QoNCV0KTQmNCa0KEg0JrQm9CQ0KHQodCe0JJcclxuJGxpYi1jbGFzcy1wcmVmaXg6ICdzdS0nO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAyLiDQn9CQ0JvQmNCi0KDQkFxyXG4kbGliLXBhbGV0dGU6IChcclxuXHRwcmltYXJ5LWRhcmtlcjogICAgICAgICAgICAgIzIzMjMyMywvLzM1ICAzNSAgMzVcclxuXHRwcmltYXJ5LWRhcms6ICAgICAgICAgICAgICAgIzcxNzE3MSwvLzExMyAxMTMgMTEzXHJcblx0cHJpbWFyeS1iYXNlLWRhcms6ICAgICAgICAgICNhOGE4YTgsLy8xNjggMTY4IDE2OFxyXG5cdHByaW1hcnktYmFzZTogICAgICAgICAgICAgICAjY2NjY2NjLC8vMjA0IDIwNCAyMDRcclxuXHRwcmltYXJ5LWJhc2UtbGlnaHQ6ICAgICAgICAgI2UzZTNlMywvLzIyNyAyMjcgMjI3XHJcblx0cHJpbWFyeS1saWdodDogICAgICAgICAgICAgICNlY2VjZWMsLy8yMzYgMjM2IDIzNlxyXG5cdHByaW1hcnktbGlnaHRlcjogICAgICAgICAgICAjZmZmZmZmLC8vMjU1IDI1NSAyNTVcclxuXHJcblx0c2Vjb25kYXJ5LWRhcms6ICAgICAgICAgICAgICM2NjMzMzMsLy8xMDIgNTEgIDUxXHJcblx0c2Vjb25kYXJ5LXZpc2l0ZWQ6ICAgICAgICAgICM3YzNlZDcsLy8xMjQgNjIgIDIxNVxyXG5cdHNlY29uZGFyeS1hY2NlbnQtZGFyazogICAgICAjNjhhMjJlLC8vMTA0IDE2MiA0NlxyXG5cdHNlY29uZGFyeS1hY2NlbnQ6ICAgICAgICAgICAjOTdjYjYzLC8vMTUxIDIwMyA5OVxyXG5cdHNlY29uZGFyeS1hY2NlbnQtbGlnaHQ6ICAgICAjOTVmZjJlLC8vMTQ5IDI1NSA0NlxyXG5cdHNlY29uZGFyeS1iYXNlOiAgICAgICAgICAgICAjMDU1OWJjLC8vNSAgIDg5IDE4OFxyXG5cdHNlY29uZGFyeS1saWdodDogICAgICAgICAgICAjMDBhZmYyLC8vMCAgIDE3NSAyNDJcclxuXHJcblx0YWNjZW50LWRhcmtlcjogICAgICAgICAgICAgICM1YjUwNDMsLy85MSAgODAgIDY3XHJcblx0YWNjZW50LWRhcms6ICAgICAgICAgICAgICAgICNhMjdhNGEsLy8xNjIgMTIyIDc0XHJcblx0YWNjZW50LWJhc2UtZGFyazogICAgICAgICAgICNjOThkMDMsLy8yMDEgMTQxIDNcclxuXHRhY2NlbnQtYmFzZTogICAgICAgICAgICAgICAgI2ZmYjQwOSwvLzI1NSAxODAgOVxyXG5cdGFjY2VudC1iYXNlLWJyaWdodDogICAgICAgICAjZmY5MDAwLC8vMjU1IDE0NCA5XHJcblx0YWNjZW50LWJhc2UtbGlnaHQ6ICAgICAgICAgICNmYmY3YmIsLy8yNTEgMjQ3IDE4N1xyXG5cdGFjY2VudC1saWdodDogICAgICAgICAgICAgICAjZmZmY2Q2LC8vMjU1IDI1MiAyMTRcclxuXHRhY2NlbnQtbGlnaHRlcjogICAgICAgICAgICAgI2ZmZmNlYiwvLzI1NSAyNTIgMjM1XHJcblxyXG5cdC8v0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQtSDRhtCy0LXRgtCwINC00LvRjyDQv9C+0LvRjyDRhNC+0YDQvNGLINC/0L7QuNGB0LrQsCDQsiDRiNCw0L/QutC1XHJcblx0Ym9yZGVyLWlucHV0LWRhcms6ICAgICAgICAgICM4Y2EzYWUsLy8xNDAgMTYzIDE3NFxyXG5cdGJvcmRlci1pbnB1dC1iYXNlOiAgICAgICAgICAjYTBiNGJlLC8vMTYwIDE4MCAxOTBcclxuXHRib3JkZXItaW5wdXQtbGlnaHQ6ICAgICAgICAgI2I2YzhkMSwvLzE4MiAyMDAgMjA5XHJcblxyXG5cdC8v0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQtSDRhtCy0LXRgtCwINC00LvRjyDQutC90L7Qv9C+0Log0YHQvtGGLtGB0LXRgtC10LlcclxuXHRiYWNrZ3JvdW5kLXZrOiAgICAgICAgICAgICAgIzUzN2NhNiwvLzgzIDEyNCAxNjZcclxuXHRiYWNrZ3JvdW5kLWZiOiAgICAgICAgICAgICAgIzRlNmFiYSwvLzc4IDEwNiAxODZcclxuXHJcblx0Ly/QlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C5INGG0LLQtdGCINC00LvRjyDQvtGC0L7QsdGA0LDQttC10L3QuNGPINC+0YjQuNCx0LrQuFxyXG5cdGNvbG9yLWVycm9yOlx0XHRcdFx0I2ZmMDAwMCwvLzI1NSAgMCAgIDBcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMy4g0KLQntCn0JrQmCDQn9CV0KDQldCa0JvQrtCn0JXQndCY0K9cclxuJGxpYi1icmVha3BvaW50czogKFxyXG5cdG5vcm1hbDpcdFx0JzEyMDBweCcsXHQvL1NpdGUtd2lkdGggMTE3MFxyXG5cdG5hcnJvdzpcdFx0Jzk5MnB4JyxcdC8vIFNpdGUtd2lkdGggOTcwXHJcblx0bW9iaWxlOlx0XHQnNzY4cHgnLFx0Ly8gU2l0ZS13aWR0aCA3NTBcclxuXHRtb2JpbGVYTDpcdCc3MDBweCcsXHQvLyBTaXRlLXdpZHRoIC4uLlxyXG5cdG1vYmlsZUw6XHQnNjAwcHgnLFx0Ly8gU2l0ZS13aWR0aCAuLi5cclxuXHRtb2JpbGVNOlx0JzU0MHB4JyxcdC8vIFNpdGUtd2lkdGggLi4uXHJcblx0bW9iaWxlUzpcdCc0NjBweCcsXHQvLyBTaXRlLXdpZHRoIC4uLlxyXG5cdG1vYmlsZVhTOlx0JzM2MHB4JyxcdC8vIFNpdGUtd2lkdGggLi4uXHJcbik7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDQuINCo0JjQoNCY0J3QkCDQodCQ0JnQotCQXHJcbiRsaWItd2lkdGgtY29udGFpbmVyLWxhcmdlICA6IDExNzBweDtcclxuJGxpYi13aWR0aC1jb250YWluZXItbm9ybWFsIDogOTcwcHg7XHQvLyAtPiBicmVha3BvaW50czpub3JtYWxcclxuJGxpYi13aWR0aC1jb250YWluZXItbmFycm93IDogNzUwcHg7XHQvLyAtPiBicmVha3BvaW50czpuYXJyb3dcclxuJGxpYi13aWR0aC1jb250YWluZXItbW9iaWxlIDogMTAwJTsgXHQvLyAtPiBicmVha3BvaW50czptb2JpbGVcclxuJGxpYi1taW4td2lkdGhcdFx0XHQgXHQ6IDMyMHB4O1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA1LiAg0KjQoNCY0KTQolxyXG4vLyA1LjEg0KHQtdC80LXQudGB0YLQstC+INGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtZmFtaWx5IDogT3BlblNhbnNSZWd1bGFyLCBzYW5zLXNlcmlmO1xyXG5cclxuLy8gNS4yINCg0LDQt9C80LXRgCDRiNGA0LjRhNGC0LBcclxuJGxpYi1mb250LXNpemUgOiAxNnB4O1xyXG5cclxuJGxpYi10eXBlLXNjYWxlIDogKFxyXG5cdFx0LTU6IDAuNjg4cmVtLCAvLyAgICAxNnB4IC0+IDExcHhcclxuXHRcdC00OiAwLjc1cmVtLCAvLyAgICAgMTZweCAtPiAxMnB4ICAgIHNtYWxsZXIgdGV4dCAgICAvc21hbGxlciBzdWJoZWFkaW5nXHJcblx0XHQtMzogMC44MTVyZW0sIC8vICAgIDE2cHggLT4gMTNweCAgICBzbWFsbCB0ZXh0XHJcblx0XHQtMjogMC44NzVyZW0sIC8vICAgIDE2cHggLT4gMTRweCAgICBub3JtYWwgdGV4dCAgICAgL3NtYWxsIHN1YmhlYWRpbmdcclxuXHRcdC0xOiAwLjkzOHJlbSwgLy8gICAgMTZweCAtPiAxNXB4XHJcblx0XHQwOiAxcmVtLCAvLyAgICAgICAgIDE2cHggLT4gMTZweCAgICBiaWcgdGV4dCAgICAgICAgL3NtYWxsIGhlYWRpbmdcclxuXHRcdDE6IDEuMTI1cmVtLCAvLyAgICAgMTZweCAtPiAxOHB4ICAgIHZlcnkgYmlnIHRleHQgICAvaGVhZGluZ1xyXG5cdFx0MjogMS4zNzVyZW0sIC8vICAgICAxNnB4IC0+IDIycHggICAgICAgICAgICAgICAgICAgIC9iaWcgaGVhZGluZ1xyXG5cdFx0MzogMS44NzVyZW0sIC8vICAgICAxNnB4IC0+IDMwcHggICAgICAgICAgICAgICAgICAgIC9tYWluIGhlYWRpbmdcclxuXHRcdDQ6IDEuODc1cmVtLCAvLyAgICAgMTZweCAtPiAzMHB4ICAgICAgICAgICAgICAgICAgICAvbWFpbiBoZWFkaW5nXHJcblxyXG5cdFx0Ly9FeHRlbmQgZm9udHNcclxuXHRcdGUwOiAxLjA2M3JlbSwgLy8gICAgMTZweCAtPiAxN3B4XHJcblx0XHRlMTogMS4xODhyZW0sIC8vICAgIDE2cHggLT4gMTlweFxyXG5cdFx0ZTI6IDEuMjVyZW0sIC8vICAgICAxNnB4IC0+IDIwcHhcclxuXHRcdGUzOiAxLjY4OHJlbSwgLy8gICAgMTZweCAtPiAyN3B4XHJcblx0XHRlNDogMi4xMjVyZW0gLy8gICAgIDE2cHggLT4gMzRweFxyXG4pO1xyXG5cclxuJGxpYi1mb250LXNpemUtYmFzZSA6IGxpYi1mb250LXNpemUoMCk7XHJcbiRsaWItZm9udC1zaXplLWlucHV0IDogbGliLWZvbnQtc2l6ZSgtMik7XHJcblxyXG4vLyA1LjMg0J3QsNGB0YvRidC10L3QvdC+0YHRgtGMINGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtd2VpZ2h0LW5vcm1hbDogNDAwO1xyXG4kbGliLWZvbnQtd2VpZ2h0LWJvbGQ6IDcwMDtcclxuXHJcbi8vIDUuNCDQptCy0LXRgiDRiNGA0LjRhNGC0L7QslxyXG4kbGliLWNvbG9yLW1haW4tdGl0bGUgOiBsaWItY29sb3IoYWNjZW50LWJhc2UpO1xyXG4kbGliLWNvbG9yLWJpZy10aXRsZSA6IGxpYi1jb2xvcihzZWNvbmRhcnktZGFyayk7XHJcbiRsaWItY29sb3ItdGl0bGUgOiBsaWItY29sb3Ioc2Vjb25kYXJ5LWRhcmspO1xyXG4kbGliLWNvbG9yLXRleHQgOiBsaWItY29sb3IocHJpbWFyeS1kYXJrZXIpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA2LiAg0KHQotCg0J7QmtCQXHJcbi8vIDYuMSDQktGL0YHQvtGC0LAg0YHRgtGA0L7QutC4XHJcbiRsaWItbGluZS1oZWlnaHQtYmFzZSA6ICgkbGliLWZvbnQtc2l6ZS1iYXNlICogMS4yNSk7XHJcblxyXG4kbGliLWxpbmUtaGVpZ2h0cyA6IChcclxuXHRcdC01OiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtNDogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0LTM6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC0yOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtMTogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0MDogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0MTogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMTI1KSxcclxuXHRcdDI6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjM3NSksXHJcblx0XHQzOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS44NzUpLFxyXG5cclxuXHRcdC8vRXh0ZW5kIGxpbmVzXHJcblx0XHRlMDogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMDYzKSxcclxuXHRcdGUxOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4xODgpLFxyXG5cdFx0ZTI6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjI1KVxyXG4pO1xyXG5cclxuLy8gNi4yINCS0LXRgNGF0L3QuNC5INC+0YLRgdGD0L8g0YHRgtGA0L7QutC4XHJcbiRsaWItcGFkZGluZy10b3AtYmFzZSA6ICRsaWItZm9udC1zaXplLWJhc2UgKiAxLjI1O1xyXG5cclxuJGxpYi1wYWRkaW5nLXRvcCA6IChcclxuXHRcdC01OiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAwLjY4OCxcclxuXHRcdC00OiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAwLjc1LFxyXG5cdFx0LTM6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuODE1LFxyXG5cdFx0LTI6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuODc1LFxyXG5cdFx0LTE6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuOTM4LFxyXG5cdFx0MDogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMSxcclxuXHRcdDE6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuMTI1LFxyXG5cdFx0MjogKCRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuMzc1KSxcclxuXHRcdDM6ICgkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAxLjg3NSlcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gNy4g0J/QsNGA0LDQvNC10YLRgNGLIHot0L7RgdC4XHJcbiRsaWItei1pbmRleGVzOiAoXHJcblx0XHRcIndyYXBwZXItY292ZXJcIiwvL9C00LvRjyDQsdC70L7QutCwINC/0LXRgNC10LrRgNGL0LLQsNGO0YnQtdCz0L4gd3JhcHBlciDQv9GA0Lgg0L7RgtC60YDRi9GC0L7QvCDQvNC10L3RjlxyXG5cdFx0XCJtb2RhbFwiLFxyXG5cdFx0XCJmaXhlZFwiLFxyXG5cdFx0XCJwb3B1cFwiLFxyXG5cdFx0XCJoZWFkZXItYmFza2V0XCIsXHJcblx0XHRcImhlYWRlci1jb250cm9sXCIsXHJcblx0XHRcImhlYWRlci1iYW5uZXJcIixcclxuXHRcdFwiaGVhZGVyLWluZm9cIixcclxuXHRcdFwiaGVhZGVyXCIsXHJcblx0XHRcImFzaWRlXCIsXHJcblx0XHRcInBhZ2VcIixcclxuXHRcdFwiZm9vdGVyXCJcclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIiwiLy8g0KTQo9Cd0JrQptCY0JhcclxuXHJcbi8vINCS0JDQltCd0J4hISFcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcImxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0YTRg9C90LrRhtC40Lkg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLyAxLiDQn9C+0LvRg9GH0LjRgtGMINC60LvQsNGB0YEuXHJcbkBmdW5jdGlvbiBsaWItZ2V0LWNsYXNzKCRjbGFzcy1uYW1lKSB7XHJcblx0QHJldHVybiAnLicgKyAkbGliLWNsYXNzLXByZWZpeCArICRjbGFzcy1uYW1lO1xyXG59XHJcblxyXG4vLyAyLiDQn9C+0LvRg9GH0LjRgtGMINC60LvQsNGB0YEt0LzQvtC00LjRhNC40LrQsNGC0L7RgC5cclxuQGZ1bmN0aW9uIGxpYi1nZXQtbW9kaWZpZXIoJG1vZGlmaWVyLW5hbWUpIHtcclxuXHRAcmV0dXJuICcuXycgKyAkbGliLWNsYXNzLXByZWZpeCArICRtb2RpZmllci1uYW1lO1xyXG59XHJcblxyXG4vLyAzLiDQn9C+0LvRg9GH0LjRgtGMINC30L3QsNGH0LXQvdC40LUg0LjQtyDQvNCw0YHQuNCy0LAgKG1hcCkuXHJcbkBmdW5jdGlvbiBsaWItdmFsKCRtYXAsICRrZXkpIHtcclxuXHRAaWYgbWFwLWhhcy1rZXkoJG1hcCwgJGtleSkge1xyXG5cdFx0QHJldHVybiBtYXAtZ2V0KCRtYXAsICRrZXkpO1xyXG5cdH0gQGVsc2Uge1xyXG5cdFx0QHdhcm4gXCJVbmtub3duIGAjeyRrZXl9YCBpbiBgI3skbWFwfWAuXCI7XHJcblx0XHRAcmV0dXJuIG51bGw7XHJcblx0fVxyXG59XHJcblxyXG4vLyA0LiDQn9C+0LvRg9GH0LjRgtGMINGG0LLQtdGCXHJcbkBmdW5jdGlvbiBsaWItY29sb3IoJGtleSkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLXBhbGV0dGUsICRrZXkpO1xyXG59XHJcblxyXG4vLyA1LiDQn9C+0LvRg9GH0LjRgtGMINGC0L7Rh9C60YMg0L/QtdGA0LXQutC70Y7Rh9C10L3QuNGPXHJcbkBmdW5jdGlvbiBsaWItYnJlYWtwb2ludHMoJGtleSkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLWJyZWFrcG9pbnRzLCAka2V5KTtcclxufVxyXG5cclxuLy8gNi4g0J/QvtC70YPRh9C40YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwXHJcbkBmdW5jdGlvbiBsaWItZm9udC1zaXplKCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbGliLXZhbCgkbGliLXR5cGUtc2NhbGUsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDcuINCf0L7Qu9GD0YfQuNGC0Ywg0LLRi9GB0L7RgtGDINGB0YLRgNC+0LrQuFxyXG5AZnVuY3Rpb24gbGliLWxpbmUtaGVpZ2h0KCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbWFwLWdldCgkbGliLWxpbmUtaGVpZ2h0cywgJGxldmVsKTtcclxufVxyXG5cclxuLy8gOC4g0J/QvtC70YPRh9C40YLRjCDQstC10YDRhdC90LjQuSDQvtGC0YHRgtGD0L8g0YHRgtGA0L7QutC4XHJcbkBmdW5jdGlvbiBsaWItbGluZS10b3AoJGxldmVsKSB7XHJcblx0QHJldHVybiBtYXAtZ2V0KCRsaWItcGFkZGluZy10b3AsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDkuINCf0L7Qu9GD0YfQuNGC0Ywg0YDQsNC30LzQtdGJ0LXQvdC40LUg0L/QviB6LdC+0YHQuFxyXG5AZnVuY3Rpb24gbGliLXooJG5hbWUpIHtcclxuXHRAaWYgaW5kZXgoJGxpYi16LWluZGV4ZXMsICRuYW1lKSB7XHJcblx0XHRAcmV0dXJuIChsZW5ndGgoJGxpYi16LWluZGV4ZXMpIC0gaW5kZXgoJGxpYi16LWluZGV4ZXMsICRuYW1lKSkgKyAxO1xyXG5cdH0gQGVsc2Uge1xyXG5cdFx0QHdhcm4gJ1RoZXJlIGlzIG5vIGl0ZW0gXCIjeyRuYW1lfVwiIGluIHRoaXMgbGlzdDsgY2hvb3NlIG9uZSBvZjogI3skbGliLXotaW5kZXhlc30nO1xyXG5cdFx0QHJldHVybiBudWxsO1xyXG5cdH1cclxufSIsIi8vINCk0KPQndCa0KbQmNCYXHJcblxyXG4vLyDQktCQ0JbQndCeISEhXHJcbi8vINCU0LvRjyDQuNC30LHQtdC20LDQvdC40Y8g0LrQvtC90YTQu9C40LrRgtC+0LIg0YEg0L/QvtC00LrQu9GO0YfQsNC10LzRi9C80Lggc2NzcyDRhNGA0LXQudC80YTQvtGA0LrQsNC80Lgg0Lgg0LHQuNCx0LvQuNC+0YLQtdC60LDQvNC4XHJcbi8vINC+0LHRj9C30LDRgtC10LvRjNC90L4g0LTQvtCx0LDQstC70Y/QudGC0LUgXCJsaWItXCIg0LIg0L3QsNGH0LDQu9C1INGE0YPQvdC60YbQuNC5INGN0YLQvtCz0L4g0YTQsNC50LvQsFxyXG5cclxuLy8gMS4g0J/QvtC70YPRh9C40YLRjCDQutC70LDRgdGBLlxyXG5AZnVuY3Rpb24gbGliLWdldC1jbGFzcygkY2xhc3MtbmFtZSkge1xyXG5cdEByZXR1cm4gJy4nICsgJGxpYi1jbGFzcy1wcmVmaXggKyAkY2xhc3MtbmFtZTtcclxufVxyXG5cclxuLy8gMi4g0J/QvtC70YPRh9C40YLRjCDQutC70LDRgdGBLdC80L7QtNC40YTQuNC60LDRgtC+0YAuXHJcbkBmdW5jdGlvbiBsaWItZ2V0LW1vZGlmaWVyKCRtb2RpZmllci1uYW1lKSB7XHJcblx0QHJldHVybiAnLl8nICsgJGxpYi1jbGFzcy1wcmVmaXggKyAkbW9kaWZpZXItbmFtZTtcclxufVxyXG5cclxuLy8gMy4g0J/QvtC70YPRh9C40YLRjCDQt9C90LDRh9C10L3QuNC1INC40Lcg0LzQsNGB0LjQstCwIChtYXApLlxyXG5AZnVuY3Rpb24gbGliLXZhbCgkbWFwLCAka2V5KSB7XHJcblx0QGlmIG1hcC1oYXMta2V5KCRtYXAsICRrZXkpIHtcclxuXHRcdEByZXR1cm4gbWFwLWdldCgkbWFwLCAka2V5KTtcclxuXHR9IEBlbHNlIHtcclxuXHRcdEB3YXJuIFwiVW5rbm93biBgI3ska2V5fWAgaW4gYCN7JG1hcH1gLlwiO1xyXG5cdFx0QHJldHVybiBudWxsO1xyXG5cdH1cclxufVxyXG5cclxuLy8gNC4g0J/QvtC70YPRh9C40YLRjCDRhtCy0LXRglxyXG5AZnVuY3Rpb24gbGliLWNvbG9yKCRrZXkpIHtcclxuXHRAcmV0dXJuIGxpYi12YWwoJGxpYi1wYWxldHRlLCAka2V5KTtcclxufVxyXG5cclxuLy8gNS4g0J/QvtC70YPRh9C40YLRjCDRgtC+0YfQutGDINC/0LXRgNC10LrQu9GO0YfQtdC90LjRj1xyXG5AZnVuY3Rpb24gbGliLWJyZWFrcG9pbnRzKCRrZXkpIHtcclxuXHRAcmV0dXJuIGxpYi12YWwoJGxpYi1icmVha3BvaW50cywgJGtleSk7XHJcbn1cclxuXHJcbi8vIDYuINCf0L7Qu9GD0YfQuNGC0Ywg0YDQsNC30LzQtdGAINGI0YDQuNGE0YLQsFxyXG5AZnVuY3Rpb24gbGliLWZvbnQtc2l6ZSgkbGV2ZWwpIHtcclxuXHRAcmV0dXJuIGxpYi12YWwoJGxpYi10eXBlLXNjYWxlLCAkbGV2ZWwpO1xyXG59XHJcblxyXG4vLyA3LiDQn9C+0LvRg9GH0LjRgtGMINCy0YvRgdC+0YLRgyDRgdGC0YDQvtC60LhcclxuQGZ1bmN0aW9uIGxpYi1saW5lLWhlaWdodCgkbGV2ZWwpIHtcclxuXHRAcmV0dXJuIG1hcC1nZXQoJGxpYi1saW5lLWhlaWdodHMsICRsZXZlbCk7XHJcbn1cclxuXHJcbi8vIDguINCf0L7Qu9GD0YfQuNGC0Ywg0LLQtdGA0YXQvdC40Lkg0L7RgtGB0YLRg9C/INGB0YLRgNC+0LrQuFxyXG5AZnVuY3Rpb24gbGliLWxpbmUtdG9wKCRsZXZlbCkge1xyXG5cdEByZXR1cm4gbWFwLWdldCgkbGliLXBhZGRpbmctdG9wLCAkbGV2ZWwpO1xyXG59XHJcblxyXG4vLyA5LiDQn9C+0LvRg9GH0LjRgtGMINGA0LDQt9C80LXRidC10L3QuNC1INC/0L4gei3QvtGB0LhcclxuQGZ1bmN0aW9uIGxpYi16KCRuYW1lKSB7XHJcblx0QGlmIGluZGV4KCRsaWItei1pbmRleGVzLCAkbmFtZSkge1xyXG5cdFx0QHJldHVybiAobGVuZ3RoKCRsaWItei1pbmRleGVzKSAtIGluZGV4KCRsaWItei1pbmRleGVzLCAkbmFtZSkpICsgMTtcclxuXHR9IEBlbHNlIHtcclxuXHRcdEB3YXJuICdUaGVyZSBpcyBubyBpdGVtIFwiI3skbmFtZX1cIiBpbiB0aGlzIGxpc3Q7IGNob29zZSBvbmUgb2Y6ICN7JGxpYi16LWluZGV4ZXN9JztcclxuXHRcdEByZXR1cm4gbnVsbDtcclxuXHR9XHJcbn0iLCIvLyDQmNC80L/QvtGA0YIg0YTQsNC50LvQvtCyXHJcbkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8g0JLQkNCW0J3QniEhISBcclxuLy8g0JTQu9GPINC40LfQsdC10LbQsNC90LjRjyDQutC+0L3RhNC70LjQutGC0L7QsiDRgSDQv9C+0LTQutC70Y7Rh9Cw0LXQvNGL0LzQuCBzY3NzINGE0YDQtdC50LzRhNC+0YDQutCw0LzQuCDQuCDQsdC40LHQu9C40L7RgtC10LrQsNC80LhcclxuLy8g0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC+0LHQsNCy0LvRj9C50YLQtSBcImxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0L/QtdGA0LXQvNC10L3QvdGL0YUg0Lgg0L/RgNC40LzQtdGB0LXQuSDRjdGC0L7Qs9C+INGE0LDQudC70LBcclxuXHJcbi8vINCm0LLQtdGC0LBcclxuJGxpYi1jb2xvci1yYXRpbmctaWNvbi1iYXNlIDogbGliLWNvbG9yKHByaW1hcnktYmFzZS1kYXJrKTtcclxuJGxpYi1jb2xvci1zaGFkb3ctcmF0aW5nLWljb24gOiBsaWItY29sb3IocHJpbWFyeS1kYXJrZXIpO1xyXG4kbGliLWNvbG9yLXRyaWFuZ2xlIDogbGliLWNvbG9yKGFjY2VudC1iYXNlKTtcclxuJGxpYi1jb2xvci1jbG9zZSA6IGxpYi1jb2xvcihwcmltYXJ5LWRhcmspO1xyXG4kbGliLWNvbG9yLWNsb3NlLWhvdmVyIDogbGliLWNvbG9yKGFjY2VudC1iYXNlLWJyaWdodCk7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8g0JrQu9Cw0YHRgdGLXHJcbiRsaWItZ3JpZC1jbGFzcy1kZWZhdWx0IDogbGliLWdldC1jbGFzcygnZ3JpZCcpO1xyXG4kbGliLWRldGFpbCA6IGxpYi1nZXQtY2xhc3MoJ2RldGFpbCcpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDEuINCj0YHRgtCw0L3QvtCy0LrQsCDRgtC+0YfQutC4INC/0LXRgNC10LrQu9GO0YfQtdC90LjRj1xyXG5AbWl4aW4gbGliLXJlc3BvbmQtdG8oJGtleSkge1xyXG5cclxuXHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoIDogI3tsaWItYnJlYWtwb2ludHMoJGtleSl9KSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gMi4g0KjQuNGA0LjQvdCwINGP0YfQtdC50LrQuFxyXG4vLyAyLjEuINCU0LvRjyDRgdC10YLQutC4INC40LcgMTQt0YLQuCDQutC+0LvQvtC90L7QulxyXG5AbWl4aW4gbGliLWJveDE0KCRjZWxsOjE0KSB7XHJcblx0ZmxvYXQgOiBsZWZ0O1xyXG5cdHdpZHRoIDogKDEwMCUgKiAkY2VsbCAvIDE0KTtcclxufVxyXG5cclxuLy8gMi4yLiDQlNC70Y8g0YHQtdGC0LrQuCDQuNC3IDEyLdGC0Lgg0LrQvtC70L7QvdC+0LpcclxuQG1peGluIGxpYi1ib3gxMigkY2VsbDoxMikge1xyXG5cdGZsb2F0IDogbGVmdDtcclxuXHR3aWR0aCA6ICgxMDAlICogJGNlbGwgLyAxMik7XHJcbn1cclxuXHJcbi8vIDIuMy4g0JTQu9GPINGB0LXRgtC60Lgg0LjQtyAxMC3RgtC4INC60L7Qu9C+0L3QvtC6XHJcbkBtaXhpbiBsaWItYm94MTAoJGNlbGw6MTApIHtcclxuXHRmbG9hdCA6IGxlZnQ7XHJcblx0d2lkdGggOiAoMTAwJSAqICRjZWxsIC8gMTApO1xyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDMuINCf0LDRgNCw0LzQtdGC0YDRiyDRgdC10YLQutC4INC60L7QvdGC0LXQvdGC0LBcclxuLy8g0KPRgdGC0LDQvdCw0LLQu9C40LLQsNC10YIg0L7RgdC90L7QstC90YvQtSDQv9Cw0YDQsNC80LXRgtGA0Ysg0LHQvtC60L7QstC+0Lkg0L/QsNC90LXQu9C4INC4INC60L7QvdGC0LXQvdGC0LBcclxuLy8g0YHQsNC50YLQsCAo0LjRhSDQvdCw0LvQuNGH0LjQtSwg0YjQuNGA0LjQvdGDINC4INGA0LDRgdC/0L7Qu9C+0LbQtdC90LjQtSkg0LIg0LfQsNCy0LjRgdC40LzQvtGC0Lgg0L7RgjpcclxuLy8gLSDQvdCw0LvQuNGH0LjRjyDQuCDRiNC40YDQuNC90Ysg0LHQvtC60L7QstC+0Lkg0L/QsNC90LXQu9C4INCyIHB4O1xyXG4vLyAtINGI0LjRgNC40L3RiyDRgdCw0LnRgtCwINC4INCy0LXQu9C40YfQuNC90Ysg0LLQvdGD0YLRgNC10L3QvdC40YUg0L7RgtGB0YPQv9C+0LIg0YHQsNC50YLQsCDQsiBweDtcclxuLy8gLSDQvdCw0LvQuNGH0LjRjyDQuCDQt9C90LDRh9C10L3QuNGPINGB0LLQvtC50YHRgtCy0LAgZmxvYXQg0LTQu9GPINGN0YLQuNGFINC60L7Qu9C+0L3QvtC6LlxyXG5cclxuQG1peGluIGxpYi1ncmlkLXBhcmFtKFxyXG5cdCRncmlkLWNsYXNzOiAkbGliLWdyaWQtY2xhc3MtZGVmYXVsdCxcclxuXHQkcGFkZGluZy1jb250YWluZXItcHg6IDE1cHgsXHJcblx0JHdpZHRoLWNvbnRhaW5lci1weDogMTAwMHB4LFxyXG5cdCR3aWR0aC1hc2lkZS1weDogMjAwcHgsXHJcblx0JGFzaWRlLWZsb2F0OiBub25lLC8vbm9uZSxsZWZ0LHJpZ2h0LG9ubHktd2lkdGhcclxuXHQkY29udGVudC1mbG9hdDogb25seS13aWR0aC8vbGVmdCxyaWdodCxvbmx5LXdpZHRoLG9ubHktZnVsbC13aWR0aFxyXG4pIHtcclxuXHQkd2lkdGgtY29udGFpbmVyLWFic29sdXRlIDogKCR3aWR0aC1jb250YWluZXItcHggLyAxcHgpOyAvL9C/0YDQtdC+0LHRgNCw0LfQvtCy0LDQvdC40LUg0Log0YfQuNGB0LvRg1xyXG5cdCRwYWRkaW5nLWNvbnRhaW5lci1hYnNvbHV0ZSA6ICgkcGFkZGluZy1jb250YWluZXItcHggLyAxcHgpOyAvL9C/0YDQtdC+0LHRgNCw0LfQvtCy0LDQvdC40LUg0Log0YfQuNGB0LvRg1xyXG5cdCR3aWR0aC1hc2lkZS1hYnNvbHV0ZSA6ICgkd2lkdGgtYXNpZGUtcHggLyAxcHgpOyAvL9C/0YDQtdC+0LHRgNCw0LfQvtCy0LDQvdC40LUg0Log0YfQuNGB0LvRg1xyXG5cdCR3aWR0aC1jYWxjdWxhdGVkIDogKCR3aWR0aC1jb250YWluZXItYWJzb2x1dGUgLSAoMiAqICRwYWRkaW5nLWNvbnRhaW5lci1hYnNvbHV0ZSkpO1xyXG5cdCR3aWR0aC1hc2lkZSA6ICgkd2lkdGgtYXNpZGUtYWJzb2x1dGUgKiAxMDAlIC8gJHdpZHRoLWNhbGN1bGF0ZWQpO1xyXG5cdCR3aWR0aC1jb250ZW50IDogKCgkd2lkdGgtY2FsY3VsYXRlZCAtICR3aWR0aC1hc2lkZS1hYnNvbHV0ZSkgKiAxMDAlIC8gJHdpZHRoLWNhbGN1bGF0ZWQpO1xyXG5cclxuXHRAaWYgJGFzaWRlLWZsb2F0ID09IG5vbmUge1xyXG5cdH0gQGVsc2UgaWYgJGFzaWRlLWZsb2F0ID09IG9ubHktd2lkdGgge1xyXG5cdFx0I3skZ3JpZC1jbGFzc31fYXNpZGUge1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1hc2lkZTtcclxuXHRcdH1cclxuXHR9IEBlbHNlIHtcclxuXHRcdCN7JGdyaWQtY2xhc3N9X2FzaWRlIHtcclxuXHRcdFx0ZmxvYXQgOiAkYXNpZGUtZmxvYXQ7XHJcblx0XHRcdHdpZHRoIDogJHdpZHRoLWFzaWRlO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0QGlmICRjb250ZW50LWZsb2F0ID09IG9ubHktd2lkdGgge1xyXG5cdFx0I3skZ3JpZC1jbGFzc31fY29udGVudCB7XHJcblx0XHRcdHdpZHRoIDogJHdpZHRoLWNvbnRlbnQ7XHJcblx0XHR9XHJcblx0fSBAZWxzZSBpZiAkY29udGVudC1mbG9hdCA9PSBvbmx5LWZ1bGwtd2lkdGgge1xyXG5cdFx0I3skZ3JpZC1jbGFzc31fY29udGVudCB7XHJcblx0XHRcdHdpZHRoIDogMTAwJTtcclxuXHRcdH1cclxuXHR9IEBlbHNlIHtcclxuXHRcdCN7JGdyaWQtY2xhc3N9X2NvbnRlbnQge1xyXG5cdFx0XHRmbG9hdCA6ICRjb250ZW50LWZsb2F0O1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1jb250ZW50O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyA0LiDQn9Cw0YDQsNC80LXRgtGA0Ysg0YLQtdC60YHRgtCwXHJcbi8vIDQuMSDQntGB0L3QvtCy0L3Ri9C1INC/0LDRgNCw0LzQtdGC0YDRi1xyXG5AbWl4aW4gbGliLXRleHQtYmFzZS1wYXJhbSgkbGV2ZWw6IDApIHtcclxuXHRwYWRkaW5nLXRvcCA6IGxpYi1saW5lLXRvcCgkbGV2ZWwpO1xyXG5cclxuXHRmb250LXNpemUgICA6IGxpYi1mb250LXNpemUoJGxldmVsKTtcclxuXHRsaW5lLWhlaWdodCA6IGxpYi1saW5lLWhlaWdodCgkbGV2ZWwpO1xyXG59XHJcblxyXG4vLyA0LjIg0JfQsNGC0LXQvNC90LXQvdC40LUg0YLQtdC60YHRgtCwXHJcbkBtaXhpbiBsaWItdGV4dC1ibGFja291dChcclxuXHQkdmVydGljYWwtcG9zaXRpb24gIDogXCJib3R0b21cIixcclxuXHQkaGVpZ2h0ICAgICAgICAgICAgIDogMTAwJSxcclxuXHQkd2lkdGggICAgICAgICAgICAgIDogOHB4LFxyXG5cdCRjb2xvcjEgICAgICAgICAgICAgOiAyNTUsXHJcblx0JGNvbG9yMiAgICAgICAgICAgICA6IDI1NSxcclxuXHQkY29sb3IzICAgICAgICAgICAgIDogMjU1XHJcbikge1xyXG5cdCRiZzEgOiByZ2JhKCRjb2xvcjEsICRjb2xvcjIsICRjb2xvcjMsIDAuMCk7XHJcblx0JGJnMiA6IHJnYmEoJGNvbG9yMSwgJGNvbG9yMiwgJGNvbG9yMywgMC44KTtcclxuXHQkYmczIDogcmdiYSgkY29sb3IxLCAkY29sb3IyLCAkY29sb3IzLCAxLjApO1xyXG5cclxuXHQmOmJlZm9yZSB7XHJcblx0XHRjb250ZW50ICAgICAgICAgICAgICAgICA6ICcnO1xyXG5cdFx0cG9zaXRpb24gICAgICAgICAgICAgICAgOiBhYnNvbHV0ZTtcclxuXHRcdCN7JHZlcnRpY2FsLXBvc2l0aW9ufSAgIDogMDtcclxuXHRcdHJpZ2h0ICAgICAgICAgICAgICAgICAgIDogMDtcclxuXHRcdGhlaWdodCAgICAgICAgICAgICAgICAgIDogJGhlaWdodDtcclxuXHRcdHdpZHRoICAgICAgICAgICAgICAgICAgIDogJHdpZHRoO1xyXG5cdFx0ei1pbmRleCAgICAgICAgICAgICAgICAgOiAxO1xyXG5cclxuXHRcdGJhY2tncm91bmQgICAgICAgICAgICAgIDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAkYmcxLCAkYmcyLCAkYmczKTtcclxuXHR9XHJcbn1cclxuXHJcbi8vIDQuMyDQmNC30LzQtdC90LXQvdC40LUg0YbQstC10YLQsCDQt9Cw0YLQtdC80L3QtdC90LjRjyDRgtC10LrRgdGC0LBcclxuQG1peGluIGxpYi10ZXh0LWJsYWNrb3V0LWNoYW5nZShcclxuXHQkY29sb3IxICAgICA6IDI1NSxcclxuXHQkY29sb3IyICAgICA6IDI1MixcclxuXHQkY29sb3IzICAgICA6IDIzNVxyXG4pIHtcclxuXHQkYmcxIDogcmdiYSgkY29sb3IxLCAkY29sb3IyLCAkY29sb3IzLCAwLjApO1xyXG5cdCRiZzIgOiByZ2JhKCRjb2xvcjEsICRjb2xvcjIsICRjb2xvcjMsIDAuOCk7XHJcblx0JGJnMyA6IHJnYmEoJGNvbG9yMSwgJGNvbG9yMiwgJGNvbG9yMywgMS4wKTtcclxuXHJcblx0JjpiZWZvcmUge1xyXG5cdFx0YmFja2dyb3VuZCA6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgJGJnMSwgJGJnMiwgJGJnMyk7XHJcblx0fVxyXG5cclxufVxyXG5cclxuLy8gNC40INCf0LXRgNC10L3QvtGBL9C+0LHRgNGL0LIg0YLQtdC60YHRgtCwXHJcbkBtaXhpbiBsaWItdGV4dC1oeXBoZW5zKCR0eXBlIDogaHlwaGVucykge1xyXG5cdEBpZiAkdHlwZSA9PSBsYXN0RWxsaXBzaXMge1xyXG5cdFx0b3ZlcmZsb3cgICAgICA6IGhpZGRlbjtcclxuXHRcdHRleHQtb3ZlcmZsb3cgOiBlbGxpcHNpcztcclxuXHRcdHdoaXRlLXNwYWNlICAgOiBub3dyYXA7XHJcblx0XHRvdmVyZmxvdy13cmFwIDogbm9ybWFsO1xyXG5cdFx0d29yZC13cmFwICAgICA6IG5vcm1hbDtcclxuXHRcdGh5cGhlbnMgICAgICAgOiBub25lO1xyXG5cdH0gQGVsc2UgaWYgJHR5cGUgPT0gbGFzdENsaXAge1xyXG5cdFx0b3ZlcmZsb3cgICAgICA6IGhpZGRlbjtcclxuXHRcdHRleHQtb3ZlcmZsb3cgOiBjbGlwO1xyXG5cdFx0d2hpdGUtc3BhY2UgICA6IG5vd3JhcDtcclxuXHRcdG92ZXJmbG93LXdyYXAgOiBub3JtYWw7XHJcblx0XHR3b3JkLXdyYXAgICAgIDogbm9ybWFsO1xyXG5cdFx0aHlwaGVucyAgICAgICA6IG5vbmU7XHJcblx0fSBAZWxzZSBpZiAkdHlwZSA9PSBicmVha3dvcmQge1xyXG5cdFx0b3ZlcmZsb3ctd3JhcCA6IGJyZWFrLXdvcmQ7XHJcblx0XHR3b3JkLXdyYXAgICAgIDogYnJlYWstd29yZDtcclxuXHR9IEBlbHNlIGlmICR0eXBlID09IGxpbWl00KB5cGhlbnMge1xyXG5cdFx0b3ZlcmZsb3cgICAgICA6IGhpZGRlbjtcclxuXHRcdG92ZXJmbG93LXdyYXAgOiBicmVhay13b3JkO1xyXG5cdFx0d29yZC13cmFwICAgICA6IGJyZWFrLXdvcmQ7XHJcblx0XHRoeXBoZW5zICAgICAgIDogYXV0bztcclxuXHR9IEBlbHNlIHsgLy9oeXBoZW5zXHJcblx0XHRvdmVyZmxvdy13cmFwIDogYnJlYWstd29yZDtcclxuXHRcdHdvcmQtd3JhcCAgICAgOiBicmVhay13b3JkO1xyXG5cdFx0aHlwaGVucyAgICAgICA6IGF1dG87XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDUuINCf0LDRgNCw0LzQtdGC0YDRiyDQuNC60L7QvdC+0YfQvdC+0LPQviDRiNGA0LjRhNGC0LBcclxuQG1peGluIGxpYi1mb250LWljb24oXHJcblx0JGZvbnQtd2VpZ2h0OiBub3JtYWwsXHJcblx0JGxpbmUtaGVpZ2h0OiAxXHJcbikge1xyXG5cdGZvbnQtZmFtaWx5ICAgICAgICAgICAgIDogJ2ljb21vb24nO1xyXG5cdGZvbnQtc3R5bGUgICAgICAgICAgICAgIDogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0ICAgICAgICAgICAgIDogJGZvbnQtd2VpZ2h0O1xyXG5cdGZvbnQtdmFyaWFudCAgICAgICAgICAgIDogbm9ybWFsO1xyXG5cdHRleHQtdHJhbnNmb3JtICAgICAgICAgIDogbm9uZTtcclxuXHRsaW5lLWhlaWdodCAgICAgICAgICAgICA6ICRsaW5lLWhlaWdodDtcclxuXHJcblx0Ly8gQmV0dGVyIEZvbnQgUmVuZGVyaW5nID09PT09PT09PT09PVxyXG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmcgIDogYW50aWFsaWFzZWQ7XHJcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmcgOiBncmF5c2NhbGU7XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gNi4g0JjQutC+0L3QutC4INGA0LXQudGC0LjQvdCz0LAgKNC30LLQtdC30LTRiylcclxuQG1peGluIGxpYi1yYXRpbmctaWNvbihcclxuXHQkY29sb3I6ICRsaWItY29sb3ItcmF0aW5nLWljb24tYmFzZSxcclxuXHQkdGV4dC1zaGFkb3c6IGZhbHNlXHJcbikge1xyXG5cdCY6YmVmb3JlIHtcclxuXHRcdGNvbnRlbnQgICAgICAgIDogJ1xcZjAwNVxcZjAwNVxcZjAwNVxcZjAwNVxcZjAwNSc7XHJcblx0XHRkaXNwbGF5ICAgICAgICA6IGlubGluZS1ibG9jaztcclxuXHRcdHBhZGRpbmctbGVmdCAgIDogMnB4O1xyXG5cclxuXHRcdGNvbG9yICAgICAgICAgIDogJGNvbG9yO1xyXG5cdFx0bGV0dGVyLXNwYWNpbmcgOiAycHg7XHJcblx0XHR3aGl0ZS1zcGFjZSAgICA6IG5vd3JhcDtcclxuXHJcblx0XHRAaWYgJHRleHQtc2hhZG93ID09IHRydWUge1xyXG5cdFx0XHR0ZXh0LXNoYWRvdyA6IDFweCAxcHggMnB4ICRsaWItY29sb3Itc2hhZG93LXJhdGluZy1pY29uO1xyXG5cdFx0fVxyXG5cclxuXHRcdEBpbmNsdWRlIGxpYi1mb250LWljb247XHJcblx0fVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIDcuINCm0LXQvdCwINCyINC00LXRgtCw0LvRj9GFXHJcbkBtaXhpbiBsaWItcHJpY2UtZGV0YWlsKFxyXG5cdCRwb3NpdGlvbjogcmVsYXRpdmUsXHJcblx0JHdpZHRoOiAxMDAlXHJcbikge1xyXG5cdGRpc3BsYXkgICAgIDogaW5saW5lLWJsb2NrO1xyXG5cdHBvc2l0aW9uICAgIDogJHBvc2l0aW9uO1xyXG5cdG1hcmdpbi10b3AgIDogMTBweDtcclxuXHRwYWRkaW5nLXRvcCA6IDhweDtcclxuXHR3aWR0aCAgICAgICA6ICR3aWR0aDtcclxuXHQjeyRsaWItZGV0YWlsfV9sYWJlbCB7XHJcblx0XHRkaXNwbGF5IDogaW5saW5lLWJsb2NrO1xyXG5cdH1cclxuXHQjeyRsaWItZGV0YWlsfV92YWx1ZSB7XHJcblx0XHRkaXNwbGF5ICAgICA6IGlubGluZS1ibG9jaztcclxuXHRcdG1hcmdpbi1sZWZ0IDogNXB4O1xyXG5cclxuXHRcdGZvbnQtd2VpZ2h0IDogJGxpYi1mb250LXdlaWdodC1ib2xkO1xyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyA4LiDQn9Cw0YDQsNC80LXRgtGA0Ysg0YHRgdGL0LvQutC4INCyINCx0LvQvtC60LUg0L/RgNC10LTQstCw0YDQuNGC0LXQu9GM0L3QvtCz0L4g0L/RgNC+0YHQvNC+0YLRgNCwXHJcbkBtaXhpbiBsaWItbGluay1pbWctcGFyYW0oXHJcblx0Ly/Qv9C+INGD0LzQvtC70YfQsNC90LjRjiAtINC60LLQsNC00YDQsNGCXHJcblx0JGhlaWdodDogMTUwcHgsXHJcblx0JHJhdGlvOiAxLFxyXG5cdCRiZzogbm9uZSxcclxuXHQkYm9yZGVyOiBub25lLFxyXG5cdCR0ZXh0LWFsaWduOiBub25lLFxyXG5cdCR2ZXJ0aWNhbC1hbGlnbjogbm9uZVxyXG4pIHtcclxuXHQkaGVpZ2h0LWxpbmstaW1nIDogJGhlaWdodDtcclxuXHQkd2lkdGgtbGluay1pbWcgOiAoJGhlaWdodC1saW5rLWltZyAqICRyYXRpbyk7XHJcblx0Ly/Rh9GC0L7QsdGLINC60LDRgNGC0LjQvdC60LAg0LPQsNGA0LDQvdGC0LjRgNC+0LLQsNC90L3QviDQvdC1INCy0YvQtdC30LbQsNC70LAg0LfQsCDQv9GA0LXQtNC10LvRiyDQsdC70L7QutCwLFxyXG5cdC8vINGD0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdC8INCy0YvRgdC+0YLRgyDRgdGC0YDQvtC60Lgg0L3QsCA20YDRhSDQvNC10L3RjNGI0LVcclxuXHQkbGluZS1oZWlnaHQtbGluay1pbWcgOiAoJGhlaWdodC1saW5rLWltZyAtIDYpO1xyXG5cclxuXHRoZWlnaHQgICAgICA6ICRoZWlnaHQtbGluay1pbWc7XHJcblx0d2lkdGggICAgICAgOiAkd2lkdGgtbGluay1pbWc7XHJcblxyXG5cdGxpbmUtaGVpZ2h0IDogJGxpbmUtaGVpZ2h0LWxpbmstaW1nO1xyXG5cclxuXHRAaWYgKCRiZyAhPSBub25lKSB7XHJcblx0XHRiYWNrZ3JvdW5kIDogJGJnLFxyXG5cdH1cclxuXHRAaWYgKCRib3JkZXIgIT0gbm9uZSkge1xyXG5cdFx0Ym9yZGVyIDogMXB4IHNvbGlkICRib3JkZXI7XHJcblx0fVxyXG5cdEBpZiAoJHRleHQtYWxpZ24gIT0gbm9uZSkge1xyXG5cdFx0dGV4dC1hbGlnbiA6ICR0ZXh0LWFsaWduO1xyXG5cdH1cclxuXHRAaWYgKCR2ZXJ0aWNhbC1hbGlnbiAhPSBub25lKSB7XHJcblx0XHR2ZXJ0aWNhbC1hbGlnbiA6ICR2ZXJ0aWNhbC1hbGlnbjtcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDkuINCe0YLQt9GL0LLRh9C40LLQvtC1INGB0L7QvtGC0L3QvtGI0LXQvdC40LVcclxuLy8g0JzQuNC60YHQuNC9INC00LvRjyDRgdC+0LfQtNCw0L3QuNGPINC80LDRgdGI0YLQsNCx0LjRgNGD0LXQvNGL0YUg0Y3Qu9C10LzQtdC90YLQvtCyKNC+0LHRi9GH0L3QviDQuNC30L7QsdGA0LDQttC10L3QuNGPL9C60LDRgNGC0LjQvdC60Lgg0LfQsNC00L3QtdCz0L4g0YTQvtC90LApLFxyXG4vLyDRh9GC0L7QsdGLINC/0L7QtNC00LXRgNC20LjQstCw0YLRjCDRgdC+0L7RgtC90L7RiNC10L3QuNC1LlxyXG5AbWl4aW4gbGliLXJlc3BvbnNpdmUtcmF0aW8oXHJcblx0Ly/Qv9C+INGD0LzQvtC70YfQsNC90LjRjiAtINC60LLQsNC00YDQsNGCXHJcblx0JHg6MSxcclxuXHQkeToxXHJcbikge1xyXG5cdCRwYWRkaW5nIDogdW5xdW90ZSgoICR5IC8gJHggKSAqIDEwMCArICclJyk7XHJcblxyXG5cdCY6YmVmb3JlIHtcclxuXHRcdGNvbnRlbnQgICAgIDogJyc7XHJcblx0XHRkaXNwbGF5ICAgICA6IGJsb2NrO1xyXG5cdFx0d2lkdGggICAgICAgOiAxMDAlO1xyXG5cdFx0cGFkZGluZy10b3AgOiAkcGFkZGluZztcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gMTAuIENTUyDRgtGA0LXRg9Cz0L7Qu9GM0L3QuNC60LhcclxuQG1peGluIGNzcy10cmlhbmdsZShcclxuXHQkY29sb3I6ICRsaWItY29sb3ItdHJpYW5nbGUsXHJcblx0JGRpcmVjdGlvbjogJ2Rvd24nLFxyXG5cdCRzaXplOiA4cHgsXHJcblx0JHJhdGlvOiAzLFxyXG5cdCRvZmZzZXQ6IDJweCxcclxuXHQkY2VudGVyOiBmYWxzZSxcclxuXHQkcm91bmQ6IGZhbHNlXHJcbikge1xyXG5cdCRzaWRlLXNpemUgOiAoJHNpemUgKiAkcmF0aW8gLyAyKTtcclxuXHJcblx0Y29udGVudCAgOiAnJztcclxuXHRkaXNwbGF5ICA6IGJsb2NrO1xyXG5cdHBvc2l0aW9uIDogYWJzb2x1dGU7XHJcblx0aGVpZ2h0ICAgOiAwO1xyXG5cdHdpZHRoICAgIDogMDtcclxuXHJcblx0QGlmICRyb3VuZCB7XHJcblx0XHRib3JkZXItcmFkaXVzIDogM3B4O1xyXG5cdH1cclxuXHRAaWYgJGRpcmVjdGlvbiA9PSBkb3duIHtcclxuXHRcdGJvcmRlci1sZWZ0ICAgOiAkc2lkZS1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLXJpZ2h0ICA6ICRzaWRlLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItdG9wICAgIDogJHNpemUgc29saWQgJGNvbG9yO1xyXG5cdFx0dG9wICAgICAgICAgICA6ICRvZmZzZXQ7XHJcblx0XHRAaWYgJGNlbnRlciB7XHJcblx0XHRcdG1hcmdpbi1sZWZ0OiA1MCU7XHJcblx0XHRcdGxlZnQ6IC0kc2lkZS1zaXplO1xyXG5cdFx0fVxyXG5cdH0gQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSB1cCB7XHJcblx0XHRib3JkZXItbGVmdCAgIDogJHNpZGUtc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdGJvcmRlci1yaWdodCAgOiAkc2lkZS1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLWJvdHRvbSA6ICRzaXplIHNvbGlkICRjb2xvcjtcclxuXHRcdGJvdHRvbSAgICAgICAgOiAkb2Zmc2V0O1xyXG5cdFx0QGlmICRjZW50ZXIge1xyXG5cdFx0XHRtYXJnaW4tbGVmdDogNTAlO1xyXG5cdFx0XHRsZWZ0OiAtJHNpZGUtc2l6ZTtcclxuXHRcdH1cclxuXHR9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gcmlnaHQge1xyXG5cdFx0Ym9yZGVyLXRvcCAgICA6ICRzaWRlLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItYm90dG9tIDogJHNpZGUtc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdGJvcmRlci1sZWZ0ICAgOiAkc2l6ZSBzb2xpZCAkY29sb3I7XHJcblx0XHRyaWdodCAgICAgICAgIDogJG9mZnNldDtcclxuXHRcdEBpZiAkY2VudGVyIHtcclxuXHRcdFx0bWFyZ2luLXRvcDogNTAlO1xyXG5cdFx0XHR0b3A6IC0kc2lkZS1zaXplO1xyXG5cdFx0fVxyXG5cdH0gQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBsZWZ0IHtcclxuXHRcdGJvcmRlci10b3AgICAgOiAkc2lkZS1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLWJvdHRvbSA6ICRzaWRlLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItcmlnaHQgIDogJHNpemUgc29saWQgJGNvbG9yO1xyXG5cdFx0bGVmdCAgICAgICAgICA6ICRvZmZzZXQ7XHJcblx0XHRAaWYgJGNlbnRlciB7XHJcblx0XHRcdG1hcmdpbi10b3A6IDUwJTtcclxuXHRcdFx0dG9wOiAtJHNpZGUtc2l6ZTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gMTEuINCa0L3QvtC/0LrQsCDQt9Cw0LrRgNGL0YLRjFxyXG5AbWl4aW4gbGliLWNsb3NlKFxyXG5cdCR0b3A6IDhweCxcclxuXHQkcmlnaHQ6IDhweFxyXG4pIHtcclxuXHRwb3NpdGlvbiAgOiBhYnNvbHV0ZTtcclxuXHR0b3AgICAgICAgOiAkdG9wO1xyXG5cdHJpZ2h0ICAgICA6ICRyaWdodDtcclxuXHR6LWluZGV4ICAgOiAxO1xyXG5cclxuXHRjdXJzb3IgICAgOiBwb2ludGVyO1xyXG5cdGNvbG9yICAgICA6ICRsaWItY29sb3ItY2xvc2U7XHJcblx0Zm9udC1zaXplIDogbGliLWZvbnQtc2l6ZShlMik7XHJcblx0Jjpob3ZlciB7XHJcblx0XHRjb2xvciAgICAgOiAkbGliLWNvbG9yLWNsb3NlLWhvdmVyO1xyXG5cdH1cclxuXHQmOmFmdGVyIHtcclxuXHRcdGNvbnRlbnQgOiAnXFxmMDU3JztcclxuXHJcblx0XHRAaW5jbHVkZSBsaWItZm9udC1pY29uO1xyXG5cdH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIiwiLy/QmNC80L/QvtGA0YIg0YTQsNC50LvQvtCyXHJcbkBpbXBvcnQgJ2Z1bmN0aW9ucyc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8g0JLQkNCW0J3QniEhIVxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwibGliLVwiINCyINC90LDRh9Cw0LvQtSDQv9C10YDQtdC80LXQvdC90YvRhSDRjdGC0L7Qs9C+INGE0LDQudC70LBcclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAxLiDQn9Cg0JXQpNCY0JrQoSDQmtCb0JDQodCh0J7QklxyXG4kbGliLWNsYXNzLXByZWZpeDogJ3N1LSc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDIuINCf0JDQm9CY0KLQoNCQXHJcbiRsaWItcGFsZXR0ZTogKFxyXG5cdHByaW1hcnktZGFya2VyOiAgICAgICAgICAgICAjMjMyMzIzLC8vMzUgIDM1ICAzNVxyXG5cdHByaW1hcnktZGFyazogICAgICAgICAgICAgICAjNzE3MTcxLC8vMTEzIDExMyAxMTNcclxuXHRwcmltYXJ5LWJhc2UtZGFyazogICAgICAgICAgI2E4YThhOCwvLzE2OCAxNjggMTY4XHJcblx0cHJpbWFyeS1iYXNlOiAgICAgICAgICAgICAgICNjY2NjY2MsLy8yMDQgMjA0IDIwNFxyXG5cdHByaW1hcnktYmFzZS1saWdodDogICAgICAgICAjZTNlM2UzLC8vMjI3IDIyNyAyMjdcclxuXHRwcmltYXJ5LWxpZ2h0OiAgICAgICAgICAgICAgI2VjZWNlYywvLzIzNiAyMzYgMjM2XHJcblx0cHJpbWFyeS1saWdodGVyOiAgICAgICAgICAgICNmZmZmZmYsLy8yNTUgMjU1IDI1NVxyXG5cclxuXHRzZWNvbmRhcnktZGFyazogICAgICAgICAgICAgIzY2MzMzMywvLzEwMiA1MSAgNTFcclxuXHRzZWNvbmRhcnktdmlzaXRlZDogICAgICAgICAgIzdjM2VkNywvLzEyNCA2MiAgMjE1XHJcblx0c2Vjb25kYXJ5LWFjY2VudC1kYXJrOiAgICAgICM2OGEyMmUsLy8xMDQgMTYyIDQ2XHJcblx0c2Vjb25kYXJ5LWFjY2VudDogICAgICAgICAgICM5N2NiNjMsLy8xNTEgMjAzIDk5XHJcblx0c2Vjb25kYXJ5LWFjY2VudC1saWdodDogICAgICM5NWZmMmUsLy8xNDkgMjU1IDQ2XHJcblx0c2Vjb25kYXJ5LWJhc2U6ICAgICAgICAgICAgICMwNTU5YmMsLy81ICAgODkgMTg4XHJcblx0c2Vjb25kYXJ5LWxpZ2h0OiAgICAgICAgICAgICMwMGFmZjIsLy8wICAgMTc1IDI0MlxyXG5cclxuXHRhY2NlbnQtZGFya2VyOiAgICAgICAgICAgICAgIzViNTA0MywvLzkxICA4MCAgNjdcclxuXHRhY2NlbnQtZGFyazogICAgICAgICAgICAgICAgI2EyN2E0YSwvLzE2MiAxMjIgNzRcclxuXHRhY2NlbnQtYmFzZS1kYXJrOiAgICAgICAgICAgI2M5OGQwMywvLzIwMSAxNDEgM1xyXG5cdGFjY2VudC1iYXNlOiAgICAgICAgICAgICAgICAjZmZiNDA5LC8vMjU1IDE4MCA5XHJcblx0YWNjZW50LWJhc2UtYnJpZ2h0OiAgICAgICAgICNmZjkwMDAsLy8yNTUgMTQ0IDlcclxuXHRhY2NlbnQtYmFzZS1saWdodDogICAgICAgICAgI2ZiZjdiYiwvLzI1MSAyNDcgMTg3XHJcblx0YWNjZW50LWxpZ2h0OiAgICAgICAgICAgICAgICNmZmZjZDYsLy8yNTUgMjUyIDIxNFxyXG5cdGFjY2VudC1saWdodGVyOiAgICAgICAgICAgICAjZmZmY2ViLC8vMjU1IDI1MiAyMzVcclxuXHJcblx0Ly/QlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INGG0LLQtdGC0LAg0LTQu9GPINC/0L7Qu9GPINGE0L7RgNC80Ysg0L/QvtC40YHQutCwINCyINGI0LDQv9C60LVcclxuXHRib3JkZXItaW5wdXQtZGFyazogICAgICAgICAgIzhjYTNhZSwvLzE0MCAxNjMgMTc0XHJcblx0Ym9yZGVyLWlucHV0LWJhc2U6ICAgICAgICAgICNhMGI0YmUsLy8xNjAgMTgwIDE5MFxyXG5cdGJvcmRlci1pbnB1dC1saWdodDogICAgICAgICAjYjZjOGQxLC8vMTgyIDIwMCAyMDlcclxuXHJcblx0Ly/QlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INGG0LLQtdGC0LAg0LTQu9GPINC60L3QvtC/0L7QuiDRgdC+0YYu0YHQtdGC0LXQuVxyXG5cdGJhY2tncm91bmQtdms6ICAgICAgICAgICAgICAjNTM3Y2E2LC8vODMgMTI0IDE2NlxyXG5cdGJhY2tncm91bmQtZmI6ICAgICAgICAgICAgICAjNGU2YWJhLC8vNzggMTA2IDE4NlxyXG5cclxuXHQvL9CU0L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0Lkg0YbQstC10YIg0LTQu9GPINC+0YLQvtCx0YDQsNC20LXQvdC40Y8g0L7RiNC40LHQutC4XHJcblx0Y29sb3ItZXJyb3I6XHRcdFx0XHQjZmYwMDAwLC8vMjU1ICAwICAgMFxyXG4pO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAzLiDQotCe0KfQmtCYINCf0JXQoNCV0JrQm9Cu0KfQldCd0JjQr1xyXG4kbGliLWJyZWFrcG9pbnRzOiAoXHJcblx0bm9ybWFsOlx0XHQnMTIwMHB4JyxcdC8vU2l0ZS13aWR0aCAxMTcwXHJcblx0bmFycm93Olx0XHQnOTkycHgnLFx0Ly8gU2l0ZS13aWR0aCA5NzBcclxuXHRtb2JpbGU6XHRcdCc3NjhweCcsXHQvLyBTaXRlLXdpZHRoIDc1MFxyXG5cdG1vYmlsZVhMOlx0JzcwMHB4JyxcdC8vIFNpdGUtd2lkdGggLi4uXHJcblx0bW9iaWxlTDpcdCc2MDBweCcsXHQvLyBTaXRlLXdpZHRoIC4uLlxyXG5cdG1vYmlsZU06XHQnNTQwcHgnLFx0Ly8gU2l0ZS13aWR0aCAuLi5cclxuXHRtb2JpbGVTOlx0JzQ2MHB4JyxcdC8vIFNpdGUtd2lkdGggLi4uXHJcblx0bW9iaWxlWFM6XHQnMzYwcHgnLFx0Ly8gU2l0ZS13aWR0aCAuLi5cclxuKTtcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gNC4g0KjQmNCg0JjQndCQINCh0JDQmdCi0JBcclxuJGxpYi13aWR0aC1jb250YWluZXItbGFyZ2UgIDogMTE3MHB4O1xyXG4kbGliLXdpZHRoLWNvbnRhaW5lci1ub3JtYWwgOiA5NzBweDtcdC8vIC0+IGJyZWFrcG9pbnRzOm5vcm1hbFxyXG4kbGliLXdpZHRoLWNvbnRhaW5lci1uYXJyb3cgOiA3NTBweDtcdC8vIC0+IGJyZWFrcG9pbnRzOm5hcnJvd1xyXG4kbGliLXdpZHRoLWNvbnRhaW5lci1tb2JpbGUgOiAxMDAlOyBcdC8vIC0+IGJyZWFrcG9pbnRzOm1vYmlsZVxyXG4kbGliLW1pbi13aWR0aFx0XHRcdCBcdDogMzIwcHg7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDUuICDQqNCg0JjQpNCiXHJcbi8vIDUuMSDQodC10LzQtdC50YHRgtCy0L4g0YjRgNC40YTRgtCwXHJcbiRsaWItZm9udC1mYW1pbHkgOiBPcGVuU2Fuc1JlZ3VsYXIsIHNhbnMtc2VyaWY7XHJcblxyXG4vLyA1LjIg0KDQsNC30LzQtdGAINGI0YDQuNGE0YLQsFxyXG4kbGliLWZvbnQtc2l6ZSA6IDE2cHg7XHJcblxyXG4kbGliLXR5cGUtc2NhbGUgOiAoXHJcblx0XHQtNTogMC42ODhyZW0sIC8vICAgIDE2cHggLT4gMTFweFxyXG5cdFx0LTQ6IDAuNzVyZW0sIC8vICAgICAxNnB4IC0+IDEycHggICAgc21hbGxlciB0ZXh0ICAgIC9zbWFsbGVyIHN1YmhlYWRpbmdcclxuXHRcdC0zOiAwLjgxNXJlbSwgLy8gICAgMTZweCAtPiAxM3B4ICAgIHNtYWxsIHRleHRcclxuXHRcdC0yOiAwLjg3NXJlbSwgLy8gICAgMTZweCAtPiAxNHB4ICAgIG5vcm1hbCB0ZXh0ICAgICAvc21hbGwgc3ViaGVhZGluZ1xyXG5cdFx0LTE6IDAuOTM4cmVtLCAvLyAgICAxNnB4IC0+IDE1cHhcclxuXHRcdDA6IDFyZW0sIC8vICAgICAgICAgMTZweCAtPiAxNnB4ICAgIGJpZyB0ZXh0ICAgICAgICAvc21hbGwgaGVhZGluZ1xyXG5cdFx0MTogMS4xMjVyZW0sIC8vICAgICAxNnB4IC0+IDE4cHggICAgdmVyeSBiaWcgdGV4dCAgIC9oZWFkaW5nXHJcblx0XHQyOiAxLjM3NXJlbSwgLy8gICAgIDE2cHggLT4gMjJweCAgICAgICAgICAgICAgICAgICAgL2JpZyBoZWFkaW5nXHJcblx0XHQzOiAxLjg3NXJlbSwgLy8gICAgIDE2cHggLT4gMzBweCAgICAgICAgICAgICAgICAgICAgL21haW4gaGVhZGluZ1xyXG5cdFx0NDogMS44NzVyZW0sIC8vICAgICAxNnB4IC0+IDMwcHggICAgICAgICAgICAgICAgICAgIC9tYWluIGhlYWRpbmdcclxuXHJcblx0XHQvL0V4dGVuZCBmb250c1xyXG5cdFx0ZTA6IDEuMDYzcmVtLCAvLyAgICAxNnB4IC0+IDE3cHhcclxuXHRcdGUxOiAxLjE4OHJlbSwgLy8gICAgMTZweCAtPiAxOXB4XHJcblx0XHRlMjogMS4yNXJlbSwgLy8gICAgIDE2cHggLT4gMjBweFxyXG5cdFx0ZTM6IDEuNjg4cmVtLCAvLyAgICAxNnB4IC0+IDI3cHhcclxuXHRcdGU0OiAyLjEyNXJlbSAvLyAgICAgMTZweCAtPiAzNHB4XHJcbik7XHJcblxyXG4kbGliLWZvbnQtc2l6ZS1iYXNlIDogbGliLWZvbnQtc2l6ZSgwKTtcclxuJGxpYi1mb250LXNpemUtaW5wdXQgOiBsaWItZm9udC1zaXplKC0yKTtcclxuXHJcbi8vIDUuMyDQndCw0YHRi9GJ0LXQvdC90L7RgdGC0Ywg0YjRgNC40YTRgtCwXHJcbiRsaWItZm9udC13ZWlnaHQtbm9ybWFsOiA0MDA7XHJcbiRsaWItZm9udC13ZWlnaHQtYm9sZDogNzAwO1xyXG5cclxuLy8gNS40INCm0LLQtdGCINGI0YDQuNGE0YLQvtCyXHJcbiRsaWItY29sb3ItbWFpbi10aXRsZSA6IGxpYi1jb2xvcihhY2NlbnQtYmFzZSk7XHJcbiRsaWItY29sb3ItYmlnLXRpdGxlIDogbGliLWNvbG9yKHNlY29uZGFyeS1kYXJrKTtcclxuJGxpYi1jb2xvci10aXRsZSA6IGxpYi1jb2xvcihzZWNvbmRhcnktZGFyayk7XHJcbiRsaWItY29sb3ItdGV4dCA6IGxpYi1jb2xvcihwcmltYXJ5LWRhcmtlcik7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDYuICDQodCi0KDQntCa0JBcclxuLy8gNi4xINCS0YvRgdC+0YLQsCDRgdGC0YDQvtC60LhcclxuJGxpYi1saW5lLWhlaWdodC1iYXNlIDogKCRsaWItZm9udC1zaXplLWJhc2UgKiAxLjI1KTtcclxuXHJcbiRsaWItbGluZS1oZWlnaHRzIDogKFxyXG5cdFx0LTU6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC00OiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQtMzogJGxpYi1saW5lLWhlaWdodC1iYXNlLFxyXG5cdFx0LTI6ICRsaWItbGluZS1oZWlnaHQtYmFzZSxcclxuXHRcdC0xOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQwOiAkbGliLWxpbmUtaGVpZ2h0LWJhc2UsXHJcblx0XHQxOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4xMjUpLFxyXG5cdFx0MjogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMzc1KSxcclxuXHRcdDM6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjg3NSksXHJcblxyXG5cdFx0Ly9FeHRlbmQgbGluZXNcclxuXHRcdGUwOiAoJGxpYi1saW5lLWhlaWdodC1iYXNlICogMS4wNjMpLFxyXG5cdFx0ZTE6ICgkbGliLWxpbmUtaGVpZ2h0LWJhc2UgKiAxLjE4OCksXHJcblx0XHRlMjogKCRsaWItbGluZS1oZWlnaHQtYmFzZSAqIDEuMjUpXHJcbik7XHJcblxyXG4vLyA2LjIg0JLQtdGA0YXQvdC40Lkg0L7RgtGB0YPQvyDRgdGC0YDQvtC60LhcclxuJGxpYi1wYWRkaW5nLXRvcC1iYXNlIDogJGxpYi1mb250LXNpemUtYmFzZSAqIDEuMjU7XHJcblxyXG4kbGliLXBhZGRpbmctdG9wIDogKFxyXG5cdFx0LTU6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuNjg4LFxyXG5cdFx0LTQ6ICRsaWItcGFkZGluZy10b3AtYmFzZSAqIDAuNzUsXHJcblx0XHQtMzogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC44MTUsXHJcblx0XHQtMjogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC44NzUsXHJcblx0XHQtMTogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMC45MzgsXHJcblx0XHQwOiAkbGliLXBhZGRpbmctdG9wLWJhc2UgKiAxLFxyXG5cdFx0MTogJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMS4xMjUsXHJcblx0XHQyOiAoJGxpYi1wYWRkaW5nLXRvcC1iYXNlICogMS4zNzUpLFxyXG5cdFx0MzogKCRsaWItcGFkZGluZy10b3AtYmFzZSAqIDEuODc1KVxyXG4pO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA3LiDQn9Cw0YDQsNC80LXRgtGA0Ysgei3QvtGB0LhcclxuJGxpYi16LWluZGV4ZXM6IChcclxuXHRcdFwid3JhcHBlci1jb3ZlclwiLC8v0LTQu9GPINCx0LvQvtC60LAg0L/QtdGA0LXQutGA0YvQstCw0Y7RidC10LPQviB3cmFwcGVyINC/0YDQuCDQvtGC0LrRgNGL0YLQvtC8INC80LXQvdGOXHJcblx0XHRcIm1vZGFsXCIsXHJcblx0XHRcImZpeGVkXCIsXHJcblx0XHRcInBvcHVwXCIsXHJcblx0XHRcImhlYWRlci1iYXNrZXRcIixcclxuXHRcdFwiaGVhZGVyLWNvbnRyb2xcIixcclxuXHRcdFwiaGVhZGVyLWJhbm5lclwiLFxyXG5cdFx0XCJoZWFkZXItaW5mb1wiLFxyXG5cdFx0XCJoZWFkZXJcIixcclxuXHRcdFwiYXNpZGVcIixcclxuXHRcdFwicGFnZVwiLFxyXG5cdFx0XCJmb290ZXJcIlxyXG4pO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iLCIvLyDQpNCj0J3QmtCm0JjQmFxyXG5cclxuLy8g0JLQkNCW0J3QniEhIVxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwibGliLVwiINCyINC90LDRh9Cw0LvQtSDRhNGD0L3QutGG0LjQuSDRjdGC0L7Qs9C+INGE0LDQudC70LBcclxuXHJcbi8vIDEuINCf0L7Qu9GD0YfQuNGC0Ywg0LrQu9Cw0YHRgS5cclxuQGZ1bmN0aW9uIGxpYi1nZXQtY2xhc3MoJGNsYXNzLW5hbWUpIHtcclxuXHRAcmV0dXJuICcuJyArICRsaWItY2xhc3MtcHJlZml4ICsgJGNsYXNzLW5hbWU7XHJcbn1cclxuXHJcbi8vIDIuINCf0L7Qu9GD0YfQuNGC0Ywg0LrQu9Cw0YHRgS3QvNC+0LTQuNGE0LjQutCw0YLQvtGALlxyXG5AZnVuY3Rpb24gbGliLWdldC1tb2RpZmllcigkbW9kaWZpZXItbmFtZSkge1xyXG5cdEByZXR1cm4gJy5fJyArICRsaWItY2xhc3MtcHJlZml4ICsgJG1vZGlmaWVyLW5hbWU7XHJcbn1cclxuXHJcbi8vIDMuINCf0L7Qu9GD0YfQuNGC0Ywg0LfQvdCw0YfQtdC90LjQtSDQuNC3INC80LDRgdC40LLQsCAobWFwKS5cclxuQGZ1bmN0aW9uIGxpYi12YWwoJG1hcCwgJGtleSkge1xyXG5cdEBpZiBtYXAtaGFzLWtleSgkbWFwLCAka2V5KSB7XHJcblx0XHRAcmV0dXJuIG1hcC1nZXQoJG1hcCwgJGtleSk7XHJcblx0fSBAZWxzZSB7XHJcblx0XHRAd2FybiBcIlVua25vd24gYCN7JGtleX1gIGluIGAjeyRtYXB9YC5cIjtcclxuXHRcdEByZXR1cm4gbnVsbDtcclxuXHR9XHJcbn1cclxuXHJcbi8vIDQuINCf0L7Qu9GD0YfQuNGC0Ywg0YbQstC10YJcclxuQGZ1bmN0aW9uIGxpYi1jb2xvcigka2V5KSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItcGFsZXR0ZSwgJGtleSk7XHJcbn1cclxuXHJcbi8vIDUuINCf0L7Qu9GD0YfQuNGC0Ywg0YLQvtGH0LrRgyDQv9C10YDQtdC60LvRjtGH0LXQvdC40Y9cclxuQGZ1bmN0aW9uIGxpYi1icmVha3BvaW50cygka2V5KSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItYnJlYWtwb2ludHMsICRrZXkpO1xyXG59XHJcblxyXG4vLyA2LiDQn9C+0LvRg9GH0LjRgtGMINGA0LDQt9C80LXRgCDRiNGA0LjRhNGC0LBcclxuQGZ1bmN0aW9uIGxpYi1mb250LXNpemUoJGxldmVsKSB7XHJcblx0QHJldHVybiBsaWItdmFsKCRsaWItdHlwZS1zY2FsZSwgJGxldmVsKTtcclxufVxyXG5cclxuLy8gNy4g0J/QvtC70YPRh9C40YLRjCDQstGL0YHQvtGC0YMg0YHRgtGA0L7QutC4XHJcbkBmdW5jdGlvbiBsaWItbGluZS1oZWlnaHQoJGxldmVsKSB7XHJcblx0QHJldHVybiBtYXAtZ2V0KCRsaWItbGluZS1oZWlnaHRzLCAkbGV2ZWwpO1xyXG59XHJcblxyXG4vLyA4LiDQn9C+0LvRg9GH0LjRgtGMINCy0LXRgNGF0L3QuNC5INC+0YLRgdGC0YPQvyDRgdGC0YDQvtC60LhcclxuQGZ1bmN0aW9uIGxpYi1saW5lLXRvcCgkbGV2ZWwpIHtcclxuXHRAcmV0dXJuIG1hcC1nZXQoJGxpYi1wYWRkaW5nLXRvcCwgJGxldmVsKTtcclxufVxyXG5cclxuLy8gOS4g0J/QvtC70YPRh9C40YLRjCDRgNCw0LfQvNC10YnQtdC90LjQtSDQv9C+IHot0L7RgdC4XHJcbkBmdW5jdGlvbiBsaWIteigkbmFtZSkge1xyXG5cdEBpZiBpbmRleCgkbGliLXotaW5kZXhlcywgJG5hbWUpIHtcclxuXHRcdEByZXR1cm4gKGxlbmd0aCgkbGliLXotaW5kZXhlcykgLSBpbmRleCgkbGliLXotaW5kZXhlcywgJG5hbWUpKSArIDE7XHJcblx0fSBAZWxzZSB7XHJcblx0XHRAd2FybiAnVGhlcmUgaXMgbm8gaXRlbSBcIiN7JG5hbWV9XCIgaW4gdGhpcyBsaXN0OyBjaG9vc2Ugb25lIG9mOiAjeyRsaWItei1pbmRleGVzfSc7XHJcblx0XHRAcmV0dXJuIG51bGw7XHJcblx0fVxyXG59IiwiLy8g0JfQkNCf0J7Qm9Cd0JjQotCV0JvQmFxyXG5cclxuLy8g0JLQkNCW0J3QniEhIVxyXG4vLyDQlNC70Y8g0LjQt9Cx0LXQttCw0L3QuNGPINC60L7QvdGE0LvQuNC60YLQvtCyINGBINC/0L7QtNC60LvRjtGH0LDQtdC80YvQvNC4IHNjc3Mg0YTRgNC10LnQvNGE0L7RgNC60LDQvNC4INC4INCx0LjQsdC70LjQvtGC0LXQutCw0LzQuFxyXG4vLyDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00L7QsdCw0LLQu9GP0LnRgtC1IFwiJWxpYi1cIiDQsiDQvdCw0YfQsNC70LUg0LfQsNC/0L7Qu9C90LjRgtC10LvQtdC5INGN0YLQvtCz0L4g0YTQsNC50LvQsFxyXG5cclxuJWxpYi1jbGVhcmZpeCB7XHJcblxyXG5cdCY6YmVmb3JlLFxyXG5cdCY6YWZ0ZXIge1xyXG5cdFx0Y29udGVudCA6ICcgJztcclxuXHRcdGRpc3BsYXkgOiB0YWJsZTtcclxuXHR9XHJcblxyXG5cdCY6YWZ0ZXIge1xyXG5cdFx0Y2xlYXIgOiBib3RoO1xyXG5cdH1cclxuXHJcbn0iLCIvLyDQktCQ0JbQndCeISEhXHJcbi8vINCU0LvRjyDQuNC30LHQtdC20LDQvdC40Y8g0LrQvtC90YTQu9C40LrRgtC+0LIg0YEg0L/QvtC00LrQu9GO0YfQsNC10LzRi9C80Lggc2NzcyDRhNGA0LXQudC80YTQvtGA0LrQsNC80Lgg0Lgg0LHQuNCx0LvQuNC+0YLQtdC60LDQvNC4XHJcbi8vINC+0LHRj9C30LDRgtC10LvRjNC90L4g0LTQvtCx0LDQstC70Y/QudGC0LUgXCJtaXgtXCIg0LIg0L3QsNGH0LDQu9C1INC/0LXRgNC10LzQtdC90L3Ri9GFINC4INC/0YDQuNC80LXRgdC10Lkg0Y3RgtC+0LPQviDRhNCw0LnQu9CwXHJcblxyXG4vLyDQkiDRjdGC0L7RgiDRhNCw0LnQuyDQstGL0L3QtdGB0LXQvdGLINC+0LHRidC40LUg0YHRgtC40LvQuCDRgdGC0YDQsNC90LjRhiwg0LrQvtGC0L7RgNGL0LUg0L3QtSDQvNC+0LPRg9GCINCx0YvRgtGMINC00L7QsdCw0LLQu9C10L3Ri1xyXG4vLyDQsiDQsdC40LHQu9C40L7RgtC10LrRgyAo0L7RgtC90L7RgdGP0YLRgdGPINGC0L7Qu9GM0LrQviDQuiDRgtC10LrRg9GJ0LXQvNGDINC/0YDQvtC10LrRgtGDKVxyXG5cclxuLy8g0KbQstC10YLQsFxyXG4kbWl4LWNvbG9yLWZvb3Rlci10aXRsZSA6IGxpYi1jb2xvcihwcmltYXJ5LWxpZ2h0ZXIpO1xyXG4kbWl4LWJnLWNvbW1lbnRzLWxpc3QgOiBsaWItY29sb3IocHJpbWFyeS1saWdodGVyKTtcclxuJG1peC1iZy1qc3AtdmVydGljYWwtYmFyIDogbGliLWNvbG9yKHByaW1hcnktbGlnaHRlcik7XHJcbiRtaXgtYmctanNwLWRyYWcgOiBsaWItY29sb3IocHJpbWFyeS1saWdodGVyKTtcclxuJG1peC1iZy1wZXJzb25hbC1vZmZlciA6IHRyYW5zcGFyZW50O1xyXG4kbWl4LWNvbG9yLWJvcmRlci1qc3AtdmVydGljYWwtYmFyIDogbGliLWNvbG9yKHByaW1hcnktYmFzZSk7XHJcbiRtaXgtY29sb3ItYm9yZGVyLWpzcC1kcmFnIDogbGliLWNvbG9yKHByaW1hcnktYmFzZSk7XHJcbiRtaXgtY29sb3ItYm9yZGVyLW5ldy1wcmljZSA6IGxpYi1jb2xvcihwcmltYXJ5LWJhc2UtbGlnaHQpO1xyXG4kbWl4LWNvbG9yLWJvcmRlci1pbWcgOiBsaWItY29sb3IocHJpbWFyeS1iYXNlLWxpZ2h0KTtcclxuJG1peC1jb2xvci1ib3JkZXItcGVyc29uYWwtb2ZmZXItaW1nIDogbGliLWNvbG9yKHByaW1hcnktYmFzZS1saWdodCk7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8g0JrQu9Cw0YHRgdGLXHJcbiRtaXgtdGlsZSA6IGxpYi1nZXQtY2xhc3MoJ3RpbGUnKTtcclxuJG1peC1vZmZlciA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyJyk7XHJcbiRtaXgtb2ZmZXItZGVzY3JpcHRpb24gOiBsaWItZ2V0LWNsYXNzKCdvZmZlci1kZXNjcmlwdGlvbicpO1xyXG4kbWl4LW9mZmVyLXRpdGxlIDogbGliLWdldC1jbGFzcygnb2ZmZXItdGl0bGUnKTtcclxuJG1peC1vZmZlci10ZXh0IDogbGliLWdldC1jbGFzcygnb2ZmZXItdGV4dCcpO1xyXG4kbWl4LW9mZmVyLWFubm90YXRpb24gOiBsaWItZ2V0LWNsYXNzKCdvZmZlci1hbm5vdGF0aW9uJyk7XHJcbiRtaXgtb2ZmZXItbmV3LXByaWNlIDogbGliLWdldC1jbGFzcygnb2ZmZXItbmV3LXByaWNlJyk7XHJcbiRtaXgtb2ZmZXItb2xkLXByaWNlIDogbGliLWdldC1jbGFzcygnb2ZmZXItb2xkLXByaWNlJyk7XHJcbiRtaXgtb2ZmZXItcHJpY2UgOiBsaWItZ2V0LWNsYXNzKCdvZmZlci1wcmljZScpO1xyXG4kbWl4LW9mZmVyLWJ1dHRvbiA6IGxpYi1nZXQtY2xhc3MoJ29mZmVyLWJ1dHRvbicpO1xyXG4kbWl4LWxpbmstaW1nIDogbGliLWdldC1jbGFzcygnbGluay1pbWcnKTtcclxuJG1peC1saW5rLWJ0biA6IGxpYi1nZXQtY2xhc3MoJ2xpbmstYnRuJyk7XHJcbiRtaXgtbGlzdCA6IGxpYi1nZXQtY2xhc3MoJ2xpc3QnKTtcclxuJG1peC1ibG9jayA6IGxpYi1nZXQtY2xhc3MoJ2Jsb2NrJyk7XHJcbiRtaXgtcHJldmlldyA6IGxpYi1nZXQtY2xhc3MoJ3ByZXZpZXcnKTtcclxuJG1peC1yYXRpbmcgOiBsaWItZ2V0LWNsYXNzKCdyYXRpbmcnKTtcclxuJG1peC1kZXRhaWwgOiBsaWItZ2V0LWNsYXNzKCdkZXRhaWwnKTtcclxuJG1peC1zb2NpYWwtbGlua3MgOiBsaWItZ2V0LWNsYXNzKCdzb2NpYWwtbGlua3MnKTtcclxuJG1peC1zb2NpYWwtbGluayA6IGxpYi1nZXQtY2xhc3MoJ3NvY2lhbC1saW5rJyk7XHJcbiRtaXgtZnJlZS1tYWlsIDogbGliLWdldC1jbGFzcygnZnJlZS1tYWlsJyk7XHJcbiRtaXgtc2xpZGVyIDogbGliLWdldC1jbGFzcygnc2xpZGVyJyk7XHJcbiRtaXgtZmllbGQtdGV4dCA6IGxpYi1nZXQtY2xhc3MoJ2ZpZWxkLXRleHQnKTtcclxuJG1peC1maWVsZC1zZWxlY3QgOiBsaWItZ2V0LWNsYXNzKCdmaWVsZC1zZWxlY3QnKTtcclxuJG1peC1maWVsZC10ZXh0YXJlYSA6IGxpYi1nZXQtY2xhc3MoJ2ZpZWxkLXRleHRhcmVhJyk7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAxLiDQntCx0YnQuNC1INC/0LDRgNCw0LzQtdGC0YDRiyDQutC+0L3RgtC10L3RgtCwXHJcbi8vIDEuMSDQn9C+INGD0LzQvtC70YfQsNC90LjRjlxyXG5AbWl4aW4gbWl4LWNvbnRlbnQtY29tbW9uLXBhcmFtKFxyXG5cdCRwYWRkaW5nLXRvcDogMjBweCxcclxuXHQkcGFkZGluZy1ib3R0b206IDE1cHhcclxuKSB7XHJcblx0cG9zaXRpb24gIDogcmVsYXRpdmU7XHJcblx0bWFyZ2luICAgIDogMCBhdXRvO1xyXG5cdHBhZGRpbmcgICA6ICRwYWRkaW5nLXRvcCA0MHB4ICRwYWRkaW5nLWJvdHRvbSA0MHB4O1xyXG5cdG1heC13aWR0aCA6IDEyODBweDtcclxufVxyXG5cclxuLy8gMS4yINCf0YDQuCDRgNCw0LfRgNC10YjQtdC90LjQuCDRjdC60YDQsNC90LAgXCJuYXJyb3dcIlxyXG5AbWl4aW4gbWl4LWNvbnRlbnQtY29tbW9uLW5hcnJvdy1wYXJhbSgpIHtcclxuXHRwYWRkaW5nOiB7XHJcblx0XHRyaWdodCA6IDIwcHg7XHJcblx0XHRsZWZ0ICA6IDIwcHg7XHJcblx0fVxyXG59XHJcblxyXG4vLyAxLjMg0J/RgNC4INGA0LDQt9GA0LXRiNC10L3QuNC4INGN0LrRgNCw0L3QsCBcIm1vYmlsZVwiXHJcbkBtaXhpbiBtaXgtY29udGVudC1jb21tb24tbW9iaWxlLW1vYmlsZSgpIHtcclxuXHRwYWRkaW5nOiB7XHJcblx0XHRyaWdodCA6IDA7XHJcblx0XHRsZWZ0ICA6IDA7XHJcblx0fVxyXG59XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAyLiDQn9C10YDQtdC+0L/RgNC10LTQtdC70LXQvdC40LUg0YHRgtC40LvQtdC5INC/0LTQsNCz0LjQvdCwIFwianNjcm9sbHBhbmVcIlxyXG5AbWl4aW4gbWl4LW92ZXJyaWRlLWpzY3JvbGxwYW5lKFxyXG5cdCRhZnRlci1oZWlnaHQ6IDQ1cHgsXHJcblx0JGJlZm9yZS1oZWlnaHQ6IDQ1cHhcclxuKSB7XHJcblx0JHdpZHRoLXZlcnRpY2FsLWJhciA6IDE0cHg7XHJcblx0JG9mZnNldC1jb250YWluZXItcHNldWRvIDogJHdpZHRoLXZlcnRpY2FsLWJhciArIDM7XHJcblx0Ly/QutC70LDRgdGB0Ysg0L/Qu9Cw0LPQuNC90LAgXCJqc2Nyb2xscGFuZVwiXHJcblx0LmpzcENvbnRhaW5lciB7XHJcblx0XHQmOmJlZm9yZSxcclxuXHRcdCY6YWZ0ZXIge1xyXG5cdFx0XHRjb250ZW50ICA6ICcnO1xyXG5cdFx0XHRwb3NpdGlvbiA6IGFic29sdXRlO1xyXG5cdFx0XHRsZWZ0ICAgICA6IDA7XHJcblx0XHRcdHdpZHRoICAgIDogMTAwJTtcclxuXHRcdFx0ei1pbmRleCAgOiAyO1xyXG5cdFx0fVxyXG5cdFx0JjpiZWZvcmUge1xyXG5cdFx0XHR0b3AgICAgICAgIDogMDtcclxuXHRcdFx0aGVpZ2h0ICAgICA6ICRiZWZvcmUtaGVpZ2h0O1xyXG5cclxuXHRcdFx0YmFja2dyb3VuZCA6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCksIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSwgI2ZmZmZmZiwgI2ZmZmZmZik7XHJcblx0XHR9XHJcblx0XHQmOmFmdGVyIHtcclxuXHRcdFx0Ym90dG9tICAgICA6IDA7XHJcblx0XHRcdGhlaWdodCAgICAgOiAkYWZ0ZXItaGVpZ2h0O1xyXG5cclxuXHRcdFx0YmFja2dyb3VuZCA6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCksIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSwgI2ZmZmZmZiwgI2ZmZmZmZik7XHJcblx0XHR9XHJcblx0XHQvL9CU0L7QsdCw0LLQu9C10L3QvdGL0Lkg0LzQvtC00LjRhNC40LrQsNGC0L7RgCDQtNC70Y8g0L7RgtGB0LvQtdC20LjQstCw0L3QuNGPINCy0LXRgNGC0LjQutCw0LvRjNC90L7QuSDQv9C+0LvQvtGB0Ysg0L/RgNC+0LrRgNGD0YLQutC4XHJcblx0XHQmLl9qc3BPZmZzZXQge1xyXG5cdFx0XHQmOmFmdGVyLFxyXG5cdFx0XHQmOmJlZm9yZSB7XHJcblx0XHRcdFx0bGVmdCA6IC0gJG9mZnNldC1jb250YWluZXItcHNldWRvO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQuanNwUGFuZSB7XHJcblx0XHRcdG1pbi1oZWlnaHQgOiAxMDAlO1xyXG5cclxuXHRcdFx0YmFja2dyb3VuZCA6ICRtaXgtYmctY29tbWVudHMtbGlzdDtcclxuXHRcdH1cclxuXHRcdC5qc3BWZXJ0aWNhbEJhciB7XHJcblx0XHRcdHdpZHRoICAgICAgICAgOiAkd2lkdGgtdmVydGljYWwtYmFyO1xyXG5cdFx0XHR6LWluZGV4ICAgICAgIDogMztcclxuXHJcblx0XHRcdGJhY2tncm91bmQgICAgOiAkbWl4LWJnLWpzcC12ZXJ0aWNhbC1iYXI7XHJcblx0XHRcdGJvcmRlciAgICAgICAgOiAxcHggc29saWQgJG1peC1jb2xvci1ib3JkZXItanNwLXZlcnRpY2FsLWJhcjtcclxuXHRcdFx0Ym9yZGVyLXJhZGl1cyA6IDNweDtcclxuXHRcdFx0LmpzcFRyYWNrIHtcclxuXHRcdFx0XHRiYWNrZ3JvdW5kIDogdHJhbnNwYXJlbnQ7XHJcblx0XHRcdFx0LmpzcERyYWcge1xyXG5cdFx0XHRcdFx0YmFja2dyb3VuZCAgICA6ICRtaXgtYmctanNwLWRyYWcgdXJsKC4uLy4uL2ltZy9zY3JvbGxiYXIvc2Nyb2xsYmFyLnBuZykgY2VudGVyIGNlbnRlciBuby1yZXBlYXQ7XHJcblx0XHRcdFx0XHRib3JkZXIgICAgICAgIDogMXB4IHNvbGlkICRtaXgtY29sb3ItYm9yZGVyLWpzcC1kcmFnO1xyXG5cdFx0XHRcdFx0Ym9yZGVyLXJhZGl1cyA6IDNweDtcclxuXHRcdFx0XHRcdGN1cnNvciAgICAgICAgOiBwb2ludGVyO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gMy4g0J/QsNGA0LDQvNC10YLRgNGLINGN0LvQtdC80LXQvdGC0L7QsiDRj9GH0LXRh9C10LXQuiDQv9C+0LTQstCw0LvQsFxyXG4vLyAzLjEg0JfQsNCz0L7Qu9C+0LLQutC4XHJcbkBtaXhpbiBtaXgtZm9vdGVyLXRpdGxlKCkge1xyXG5cdGNvbG9yICAgICAgIDogJG1peC1jb2xvci1mb290ZXItdGl0bGU7XHJcblx0Zm9udC1mYW1pbHkgOiAnT3BlblNhbnNCb2xkJztcclxuXHRmb250LXNpemUgICA6IGxpYi1mb250LXNpemUoLTIpO1xyXG59XHJcblxyXG4vLyAzLjIg0KHQv9C40YHQutC4XHJcbkBtaXhpbiBtaXgtZm9vdGVyLWxpc3QoKSB7XHJcblx0bWFyZ2luLXRvcCA6IDEwcHg7XHJcblxyXG5cdGZvbnQtc2l6ZSAgOiBsaWItZm9udC1zaXplKC0yKTtcclxuXHQjeyRtaXgtbGlzdH1faXRlbSB7XHJcblx0XHRtYXJnaW4tdG9wIDogNXB4O1xyXG5cdH1cclxufVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gNC4g0J7QsdGJ0LjQtSDRgdGC0LjQu9C4INC00LvRjyDQutC+0YDQt9C40L3RiyDQvdCwINCy0YLQvtGA0L7QvCDRiNCw0LPQtSDQvtGE0L7RgNC80LvQtdC90LjRjyDQt9Cw0LrQsNC30LAuXHJcbi8vIDQuMSDQktGF0L7QtC/RgNC10LPQuNGB0YLRgNCw0YbQuNGPINGH0LXRgNC10Lcg0YHQvtGGLtGB0LXRgtC4XHJcbkBtaXhpbiBtaXgtY29tbW9uLW9yZGVyLXNvY2lhbC1saW5rcy1uYXJyb3coKSB7XHJcblx0I3skbWl4LXNvY2lhbC1saW5rc31fdGl0bGUge1xyXG5cdFx0ZGlzcGxheSA6IGJsb2NrO1xyXG5cdH1cclxuXHQjeyRtaXgtc29jaWFsLWxpbmtzfV9saXN0I3skbWl4LWxpc3R9IHtcclxuXHRcdG1hcmdpbi10b3AgOiAyMHB4O1xyXG5cdFx0I3skbWl4LWxpc3R9X2l0ZW0ge1xyXG5cdFx0XHQjeyRtaXgtc29jaWFsLWxpbmt9I3skbWl4LWxpbmstYnRufSB7XHJcblx0XHRcdFx0I3skbWl4LWxpbmstYnRufV9hZGRpdGlvbiB7XHJcblx0XHRcdFx0XHRkaXNwbGF5IDogbm9uZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8vIDQuMi4g0KLQtdC60YHRgtC+0LLQvtC1INC/0L7Qu9C1INCx0LvQvtC60LAgXCJvcmRlci1tYWtlXCJcclxuQG1peGluIG9yZGVyLW1ha2UtZmllbGQtdGV4dChcclxuXHQkbWFyZ2luLXRvcDogMjBweCxcclxuXHQkZmxvYXQtbGFiZWw6IGxlZnQsXHJcblx0JGZsb2F0LWlucHV0OiByaWdodCxcclxuXHQkd2lkdGgtbGFiZWw6IDQ1JSxcclxuXHQkd2lkdGgtaW5wdXQ6IDUwJSxcclxuXHQkcGFkZGluZy1sZWZ0OiAkd2lkdGgtaW5wdXRcclxuKSB7XHJcblx0ZGlzcGxheSAgICAgICAgOiBpbmxpbmUtYmxvY2s7XHJcblx0bWFyZ2luLXRvcCAgICAgOiAkbWFyZ2luLXRvcDtcclxuXHR3aWR0aCAgICAgICAgICA6IDEwMCU7XHJcblxyXG5cdHZlcnRpY2FsLWFsaWduIDogYm90dG9tO1xyXG5cdCN7JG1peC1maWVsZC10ZXh0fSB7XHJcblx0XHQmX2xhYmVsIHtcclxuXHRcdFx0ZmxvYXQgOiAkZmxvYXQtbGFiZWw7XHJcblx0XHRcdHdpZHRoIDogJHdpZHRoLWxhYmVsO1xyXG5cdFx0fVxyXG5cdFx0Jl9pbnB1dCB7XHJcblx0XHRcdGZsb2F0IDogJGZsb2F0LWlucHV0O1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1pbnB1dDtcclxuXHRcdH1cclxuXHRcdCZfaGVscCB7XHJcblx0XHRcdGZsb2F0IDogbGVmdDtcclxuXHRcdFx0cGFkZGluZy1sZWZ0OiAkcGFkZGluZy1sZWZ0O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLy8gNC4zLiDQktGL0L/QsNC00LDRjtGJ0LjQuSDRgdC/0LjRgdC+0Log0LHQu9C+0LrQsCBcIm9yZGVyLW1ha2VcIlxyXG5AbWl4aW4gb3JkZXItbWFrZS1maWVsZC1zZWxlY3QoXHJcblx0JG1hcmdpbi10b3A6IDIwcHgsXHJcblx0JGZsb2F0LWxhYmVsOiBsZWZ0LFxyXG5cdCRmbG9hdC1zZWxlY3Q6IHJpZ2h0LFxyXG5cdCR3aWR0aC1sYWJlbDogNDUlLFxyXG5cdCR3aWR0aC1zZWxlY3Q6IDUwJSxcclxuXHQkcGFkZGluZy1sZWZ0OiAkd2lkdGgtc2VsZWN0XHJcbikge1xyXG5cdGRpc3BsYXkgICAgICAgIDogaW5saW5lLWJsb2NrO1xyXG5cdG1hcmdpbi10b3AgICAgIDogJG1hcmdpbi10b3A7XHJcblx0d2lkdGggICAgICAgICAgOiAxMDAlO1xyXG5cclxuXHR2ZXJ0aWNhbC1hbGlnbiA6IGJvdHRvbTtcclxuXHQjeyRtaXgtZmllbGQtc2VsZWN0fSB7XHJcblx0XHQmX2xhYmVsIHtcclxuXHRcdFx0ZmxvYXQgOiAkZmxvYXQtbGFiZWw7XHJcblx0XHRcdHdpZHRoIDogJHdpZHRoLWxhYmVsO1xyXG5cdFx0fVxyXG5cdFx0Jl9zZWxlY3Qge1xyXG5cdFx0XHRmbG9hdCA6ICRmbG9hdC1zZWxlY3Q7XHJcblx0XHRcdHdpZHRoIDogJHdpZHRoLXNlbGVjdDtcclxuXHRcdH1cclxuXHRcdCZfaGVscCB7XHJcblx0XHRcdGZsb2F0IDogbGVmdDtcclxuXHRcdFx0cGFkZGluZy1sZWZ0OiAkcGFkZGluZy1sZWZ0O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLy8gNC40LiDQotC10LrRgdGC0L7QstCw0Y8g0L7QsdC70LDRgdGC0Ywg0LHQu9C+0LrQsCBcIm9yZGVyLW1ha2VcIlxyXG5AbWl4aW4gb3JkZXItbWFrZS1maWVsZC10ZXh0YXJlYShcclxuXHQkbWFyZ2luLXRvcDogMjBweCxcclxuXHQkZmxvYXQtbGFiZWw6IGxlZnQsXHJcblx0JGZsb2F0LXRleHRhcmVhOiByaWdodCxcclxuXHQkd2lkdGgtbGFiZWw6IDQ1JSxcclxuXHQkd2lkdGgtdGV4dGFyZWE6IDUwJSxcclxuXHQkcmVzaXplOiB2ZXJ0aWNhbCxcclxuXHQkcGFkZGluZy1sZWZ0OiAkd2lkdGgtdGV4dGFyZWFcclxuKSB7XHJcblx0ZGlzcGxheSAgICAgICAgOiBpbmxpbmUtYmxvY2s7XHJcblx0bWFyZ2luLXRvcCAgICAgOiAkbWFyZ2luLXRvcDtcclxuXHR3aWR0aCAgICAgICAgICA6IDEwMCU7XHJcblxyXG5cdHZlcnRpY2FsLWFsaWduIDogYm90dG9tO1xyXG5cdCN7JG1peC1maWVsZC10ZXh0YXJlYX0ge1xyXG5cdFx0Jl9sYWJlbCB7XHJcblx0XHRcdGZsb2F0IDogJGZsb2F0LWxhYmVsO1xyXG5cdFx0XHR3aWR0aCA6ICR3aWR0aC1sYWJlbDtcclxuXHRcdH1cclxuXHRcdCZfdGV4dGFyZWEge1xyXG5cdFx0XHRmbG9hdCAgOiAkZmxvYXQtdGV4dGFyZWE7XHJcblx0XHRcdHdpZHRoICA6ICR3aWR0aC10ZXh0YXJlYTtcclxuXHJcblx0XHRcdHJlc2l6ZSA6ICRyZXNpemU7XHJcblx0XHR9XHJcblx0XHQmX2hlbHAge1xyXG5cdFx0XHRmbG9hdCA6IGxlZnQ7XHJcblx0XHRcdHBhZGRpbmctbGVmdDogJHBhZGRpbmctbGVmdDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIDUuINCe0LHRidC40LUg0YHRgtC40LvQuCDQv9GA0LXQtNC70L7QttC10L3QuNC5INCyINC70LjRh9C90L7QvCDQutCw0LHQuNC90LXRgtC1XHJcbkBtaXhpbiBtaXgtY29tbW9uLXBlcnNvbmFsLW9mZmVyKCkge1xyXG5cdGhlaWdodCAgICAgICAgICAgOiA1MXB4O1xyXG5cclxuXHRib3JkZXIgICAgICAgICAgIDogbm9uZTtcclxuXHRib3JkZXItcmFkaXVzICAgIDogMDtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yIDogJG1peC1iZy1wZXJzb25hbC1vZmZlcjtcclxuXHRib3gtc2hhZG93ICAgICAgIDogbm9uZTtcclxuXHQjeyRtaXgtb2ZmZXJ9X3ByZXZpZXcjeyRtaXgtcHJldmlld30ge1xyXG5cdFx0bGVmdCA6IDVweDtcclxuXHRcdCN7JG1peC1wcmV2aWV3fV9saW5rI3skbWl4LWxpbmstaW1nfSB7XHJcblx0XHRcdEBpbmNsdWRlIGxpYi1saW5rLWltZy1wYXJhbShcclxuXHRcdFx0XHQkaGVpZ2h0IDogNDBweCxcclxuXHRcdFx0XHQkcmF0aW8gOiAoMTYvOSksXHJcblx0XHRcdFx0JGJvcmRlciA6ICRtaXgtY29sb3ItYm9yZGVyLXBlcnNvbmFsLW9mZmVyLWltZ1xyXG5cdFx0XHQpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHQjeyRtaXgtb2ZmZXItZGVzY3JpcHRpb259IHtcclxuXHRcdHBvc2l0aW9uIDogcmVsYXRpdmU7XHJcblx0XHQmOmhvdmVyIHtcclxuXHRcdFx0I3skbWl4LW9mZmVyLWRlc2NyaXB0aW9ufV9jb250YWluZXIsXHJcblx0XHRcdCN7JG1peC1vZmZlci1uZXctcHJpY2V9I3skbWl4LWRldGFpbH0ge1xyXG5cdFx0XHRcdEBpbmNsdWRlIGxpYi10ZXh0LWJsYWNrb3V0LWNoYW5nZSAoXHJcblx0XHRcdFx0XHQkY29sb3IxIDogMjM2LFxyXG5cdFx0XHRcdFx0JGNvbG9yMiA6IDIzNixcclxuXHRcdFx0XHRcdCRjb2xvcjMgOiAyMzZcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQmX2NvbnRhaW5lciB7XHJcblx0XHRcdGhlaWdodCA6IDEwMCU7XHJcblxyXG5cdFx0XHRAaW5jbHVkZSBsaWItdGV4dC1ibGFja291dChcclxuXHRcdFx0XHQkY29sb3IxIDogMjM2LFxyXG5cdFx0XHRcdCRjb2xvcjIgOiAyMzYsXHJcblx0XHRcdFx0JGNvbG9yMyA6IDIzNlxyXG5cdFx0XHQpO1xyXG5cdFx0XHQjeyRtaXgtb2ZmZXItdGl0bGV9I3skbWl4LWJsb2NrfSB7XHJcblx0XHRcdFx0cGFkZGluZy1sZWZ0IDogMDtcclxuXHRcdFx0XHRAaW5jbHVkZSBsaWItdGV4dC1oeXBoZW5zKFxyXG5cdFx0XHRcdFx0JHR5cGUgOiBsYXN0Q2xpcFxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdH1cclxuXHRcdFx0I3skbWl4LW9mZmVyfV90ZXh0IHtcclxuXHRcdFx0XHRwYWRkaW5nLXRvcCA6IDEwcHg7XHJcblxyXG5cdFx0XHRcdGZvbnQtc2l6ZSAgIDogbGliLWZvbnQtc2l6ZSgtNCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdCN7JG1peC1vZmZlci1uZXctcHJpY2V9I3skbWl4LWRldGFpbH0ge1xyXG5cdFx0XHRib3R0b20gICAgICA6IC0yMHB4O1xyXG5cdFx0XHRtYXJnaW4tdG9wICA6IDA7XHJcblx0XHRcdHBhZGRpbmctdG9wIDogMDtcclxuXHJcblx0XHRcdEBpbmNsdWRlIGxpYi10ZXh0LWJsYWNrb3V0KFxyXG5cdFx0XHRcdCRjb2xvcjEgOiAyMzYsXHJcblx0XHRcdFx0JGNvbG9yMiA6IDIzNixcclxuXHRcdFx0XHQkY29sb3IzIDogMjM2XHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0XHQjeyRtaXgtb2ZmZXItYnV0dG9ufSN7JG1peC1ibG9ja30ge1xyXG5cdFx0XHRyaWdodCAgOiAtMTE1cHg7XHJcblx0XHRcdGJvdHRvbSA6IC0xNnB4O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuIiwiLy/QmNC80L/QvtGA0YIg0YTQsNC50LvQvtCyXHJcbkBpbXBvcnQgJ2Fib3V0LXB1cmNoYXNlLXZhcmlhYmxlcyc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuI3skd3JhcHBlcn0ge1xyXG5cdEBpbmNsdWRlIG1peC1jb250ZW50LWNvbW1vbi1wYXJhbSgpO1xyXG5cdCZfdGFicyN7JHRhYnN9LFxyXG5cdCZfdGFicyN7JHBheW1lbnR9IHtcclxuXHRcdG1hcmdpbi10b3AgOiAzMHB4O1xyXG5cdH1cclxufSIsIi8v0JrQu9Cw0YHRgdGLXHJcbiR3cmFwcGVyIDogbGliLWdldC1jbGFzcygnYWJvdXQtcHVyY2hhc2UnKTtcclxuJHRhYnMgOiBsaWItZ2V0LWNsYXNzKCd0YWJzLWJsb2NrJyk7XHJcbiRwYXltZW50IDogbGliLWdldC1jbGFzcygncGF5bWVudC1pY29ucycpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuIiwiLy/QmNC80L/QvtGA0YIg0YTQsNC50LvQvtCyXHJcbkBpbXBvcnQgJ2Fib3V0LXB1cmNoYXNlLXZhcmlhYmxlcyc7XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuI3skd3JhcHBlcn0ge1xyXG5cclxuXHRAaW5jbHVkZSBsaWItcmVzcG9uZC10byhuYXJyb3cpIHtcclxuXHRcdEBpbmNsdWRlIG1peC1jb250ZW50LWNvbW1vbi1uYXJyb3ctcGFyYW0oKTtcclxuXHR9XHJcblxyXG59XHJcbiIsIi8v0JrQu9Cw0YHRgdGLXHJcbiR3cmFwcGVyIDogbGliLWdldC1jbGFzcygnYWJvdXQtcHVyY2hhc2UnKTtcclxuJHRhYnMgOiBsaWItZ2V0LWNsYXNzKCd0YWJzLWJsb2NrJyk7XHJcbiRwYXltZW50IDogbGliLWdldC1jbGFzcygncGF5bWVudC1pY29ucycpO1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBVUlBLEFBQUEsa0JBQWtCLENBQU47RURtRFgsUUFBUSxFQUFJLFFBQVE7RUFDcEIsTUFBTSxFQUFNLE1BQU07RUFDbEIsT0FBTyxFQUxPLElBQUksQ0FLTyxJQUFJLENBSlosSUFBSSxDQUl5QixJQUFJO0VBQ2xELFNBQVMsRUFBRyxNQUFNLEdDaERsQjtFQUpBLEFBQUEsdUJBQU0sQUFBQSxjQUFjLEVBQ3BCLEFBQUEsdUJBQU0sQUFBQSxpQkFBaUIsQ0FBTDtJQUNqQixVQUFVLEVBQUcsSUFBSSxHQUNqQjs7QUxlRCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VPcEJwQyxBQUFBLGtCQUFrQixDQUFOO0lINERWLGFBQUssRUFBRyxJQUFJO0lBQ1osWUFBSSxFQUFJLElBQUksR0d2RGIifQ== */","//Импорт файлов\r\n@import 'about-purchase-variables';\r\n//-------------------------------\r\n\r\n#{$wrapper} {\r\n\r\n\t@include lib-respond-to(narrow) {\r\n\t\t@include mix-content-common-narrow-param();\r\n\t}\r\n\r\n}\r\n"]} */
/*# sourceMappingURL=about-purchase.css.map*/